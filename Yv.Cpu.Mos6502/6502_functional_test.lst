AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
---------------------------------------------------- 6502_functional_test.a65 ----------------------------------------------------

5307 lines read, no errors in pass 1.
                        ;
                        ; 6 5 0 2   F U N C T I O N A L   T E S T S
                        ;
                        ; Copyright (C) 2012  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all opcodes of a 6502 emulator using all
                        ; addressing modes with focus on proper setting of the processor status
                        ; register bits.
                        ;
                        ; version 30-jul-2012
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -h0
                        ;                         |  |  |   |  no page headers in listing
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 1000 hex and
                        ; enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original NMOS 6502 only! No unofficial
                        ; opcodes. Additional opcodes of newer versions of the CPU (65C02, 65816) will
                        ; not be tested. Decimal ops will only be tested with valid BCD operands and
                        ; N V Z flags will be ignored.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   28-jul-2012  1st version distributed for testing
                        ;   29-jul-2012  fixed references to location 0, now #0
                        ;                added license - GPLv3
                        ;   30-jul-2012  added configuration options
                        
                        
                        ; C O N F I G U R A T I O N
                        ;
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0001 =                  load_data_direct = 1
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended. SEI & CLI can only be
                        ;tested if you allow changing the interrupt status (I_flag = 3)
0003 =                  I_flag = 3
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $55 (85) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
000a =                  zero_page = $a
                        ;data_segment memory start address, $5A (90) consecutive Bytes required
0200 =                  data_segment = $200
                        ;code_segment memory start address, 12kB of consecutive space required
                        ;                                   add 2.5 kB if I_flag = 2
                        ;parts of the code are self modifying and must reside in RAM
1000 =                  code_segment = $1000
                        
                        
                                if I_flag = 0
                        load_flag   macro       ;force enable interrupts
                                    lda #\1&$fb ;mask I-flag
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro       ;force disable interrupts
                                    lda #\1|4
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro       ;never change I-flag
                                    lda #\1
                                    ora flag_I_on
                                    and flag_I_off
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro       ;allow test to change I-flag
                                    lda #\1
                                    endm
                                endif
                        
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst,x
                                    plp
                                    endm
                        
                                if I_flag = 0
                        cmp_flag    macro       ;I_flag is always enabled
                                    cmp #(\1|$30)&$fb
                                    endm
                        eor_flag    macro       ;invert expected on flags, mask I
                                    eor #(\1&$fb|$30)
                                    endm
                                endif
                                if I_flag = 1
                        cmp_flag    macro       ;I_flag is always disabled
                                    cmp #(\1|$34)&$ff
                                    endm
                        eor_flag    macro       ;invert expected on flags
                                    eor #(\1|$34)
                                    endm
                                endif
                                if I_flag = 2
                        cmp_flag    macro       ;I_flag is never changed
                                    eor flag_I_on
                                    cmp #(\1|$30)&$fb
                                    endm
                        eor_flag    macro       ;invert expected on flags
                                    eor flag_I_on
                                    eor #(\1&$fb|$30)
                                    endm
                                endif
                                if I_flag = 3
                        cmp_flag    macro       ;I_flag is always enabled
                                    cmp #(\1|$30)&$ff
                                    endm
                        eor_flag    macro       ;invert expected on flags
                                    eor #(\1|$30)
                                    endm
                                endif
                        
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    php         ;use stack to retrieve status
                                    pla
                                    cmp_flag \1
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    cmp_flag \2
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    php
                                    cpx #\1     ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    cmp_flag \2
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    php
                                    cpy #\1     ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    cmp_flag \2
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
000a =                          org zero_page
000a :                  zp_bss
000a : c3824100         zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
000e : 7f               zp7f    db  $7f             ;test pattern for compare
000f : 0000000000       zpt     ds  5               ;store/modify test area
                        ;logical zeropage operands
0014 : 001f7180         zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0018 : 0fff7f80         zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
001c : ff0f8f8f         zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
0020 : 0002             ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
0022 : 0102                     dw  abs1+1
0024 : 0202                     dw  abs1+2
0026 : 0302                     dw  abs1+3
0028 : 0402                     dw  abs7f
002a : 0801             inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
002c : 3302             indt    dw  abst            ;indirect pointer to store area in absolute memory
002e : 3402                     dw  abst+1
0030 : 3502                     dw  abst+2
0032 : 3602                     dw  abst+3
0034 : 3b01             inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0036 : 3c02             indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0038 : 3d02                     dw  absAN+1
003a : 3e02                     dw  absAN+2
003c : 3f02                     dw  absAN+3
003e : 4002             indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
0040 : 4102                     dw  absEO+1
0042 : 4202                     dw  absEO+2
0044 : 4302                     dw  absEO+3
0046 : 3802             indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0048 : 3902                     dw  absOR+1
004a : 3a02                     dw  absOR+2
004c : 3b02                     dw  absOR+3
                        ;add/subtract operand generation and result/flag prediction
004e : 5802             adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
0050 : 5902             sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
0052 : 5901             adiy2   dw  ada2-$ff        ;with offset for indirect indexed
0054 : 5a01             sbiy2   dw  sba2-$ff
0056 :                  zp_bss_end
0056 : 00               adfc    ds  1               ;carry flag before op
0057 : 00               ad1     ds  1               ;operand 1 - accumulator
0058 : 00               ad2     ds  1               ;operand 2 - memory / immediate
0059 : 00               adrl    ds  1               ;expected result bits 0-7
005a : 00               adrh    ds  1               ;expected result bit 8 (carry)
005b : 00               adrf    ds  1               ;expected flags NV0000ZC (not valid in decimal mode)
005c : 00               sb2     ds  1               ;operand 2 complemented for subtract
                        ;break test interrupt save
005d : 00               irq_a   ds  1               ;a register
005e : 00               irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
                        
0200 =                          org data_segment
0200 :                  data_bss
0200 : c3824100         abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
0204 : 7f               abs7f   db  $7f             ;test pattern for compare
                        ;loads
0205 : 80800002         fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0209 :                  rASL                        ;expected result ASL & ROL -carry
0209 : 86048200         rROL    db  $86,$04,$82,0   ; "
020d : 87058301         rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
0211 :                  rLSR                        ;expected result LSR & ROR -carry
0211 : 61412000         rROR    db  $61,$41,$20,0   ; "
0215 : e1c1a080         rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
0219 :                  fASL                        ;expected flags for shifts
0219 : 81018002         fROL    db  fnc,fc,fn,fz    ;no carry in
021d : 81018000         fROLc   db  fnc,fc,fn,0     ;carry in
0221 :                  fLSR
0221 : 01000102         fROR    db  fc,0,fc,fz      ;no carry in
0225 : 81808180         fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0229 : 7f80ff0001       rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
022e : 0080800200       fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
0233 : 0000000000       abst    ds  5               ;store/modify test area
                        ;logical memory operand
0238 : 001f7180         absOR   db  0,$1f,$71,$80   ;test pattern for OR
023c : 0fff7f80         absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0240 : ff0f8f8f         absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0244 : 00f11f00         absORa  db  0,$f1,$1f,0     ;test pattern for OR
0248 : f0ffffff         absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
024c : fff0f00f         absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0250 : 00ff7f80         absrlo  db  0,$ff,$7f,$80
0254 : 02800080         absflo  db  fz,fn,0,fn
0258 :                  data_bss_end
                        ;add/subtract operand copy
0258 : 00               ada2    ds  1               ;operand 2
0259 : 00               sba2    ds  1               ;operand 2 complemented for subtract
                        
                                code
1000 =                          org code_segment
1000 : d8                       cld
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                        
                        ;initialize BSS segment
                            if load_data_direct != 1
                                ldx #zp_end-zp_init-1
                        ld_zp   lda zp_init,x
                                sta zp_bss,x
                                dex
                                bpl ld_zp
                                ldx #data_end-data_init-1
                        ld_data lda data_init,x
                                sta data_bss,x
                                dex
                                bpl ld_data
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                        
                        ;testing relative addressing with BEQ
                        ;uses untested JMP DEX DEY LDA#0 LDY#$FE TYA TAX STA BPL CLC ADC#2 cmp#0
1001 : a0fe                     ldy #$fe        ;testing maximum range, not -1/-2 (invalid/self adr)
1003 :                  range_loop
1003 : 88                       dey             ;next relative address
1004 : 98                       tya
1005 : aa                       tax             ;precharge count to end of loop
1006 : 1003                     bpl range_fw    ;calculate relative address
1008 : 18                       clc             ;avoid branch self or to relative address of branch
1009 : 6902                     adc #2
100b :                  range_fw
100b : 497f                     eor #$7f        ;complement except sign
100d : 8d9410                   sta range_adr   ;load into test target
1010 : a900                     lda #0          ;should set zero flag in status register
1012 : 4c9310                   jmp range_op
                        
                                ;relative address target field with branch under test in the middle
1015 : ca                       dex             ;-128 - max backward
1016 : ca                       dex
1017 : ca                       dex
1018 : ca                       dex
1019 : ca                       dex
101a : ca                       dex
101b : ca                       dex
101c : ca                       dex
101d : ca                       dex             ;-120
101e : ca                       dex
101f : ca                       dex
1020 : ca                       dex
1021 : ca                       dex
1022 : ca                       dex
1023 : ca                       dex
1024 : ca                       dex
1025 : ca                       dex
1026 : ca                       dex
1027 : ca                       dex             ;-110
1028 : ca                       dex
1029 : ca                       dex
102a : ca                       dex
102b : ca                       dex
102c : ca                       dex
102d : ca                       dex
102e : ca                       dex
102f : ca                       dex
1030 : ca                       dex
1031 : ca                       dex             ;-100
1032 : ca                       dex
1033 : ca                       dex
1034 : ca                       dex
1035 : ca                       dex
1036 : ca                       dex
1037 : ca                       dex
1038 : ca                       dex
1039 : ca                       dex
103a : ca                       dex
103b : ca                       dex             ;-90
103c : ca                       dex
103d : ca                       dex
103e : ca                       dex
103f : ca                       dex
1040 : ca                       dex
1041 : ca                       dex
1042 : ca                       dex
1043 : ca                       dex
1044 : ca                       dex
1045 : ca                       dex             ;-80
1046 : ca                       dex
1047 : ca                       dex
1048 : ca                       dex
1049 : ca                       dex
104a : ca                       dex
104b : ca                       dex
104c : ca                       dex
104d : ca                       dex
104e : ca                       dex
104f : ca                       dex             ;-70
1050 : ca                       dex
1051 : ca                       dex
1052 : ca                       dex
1053 : ca                       dex
1054 : ca                       dex
1055 : ca                       dex
1056 : ca                       dex
1057 : ca                       dex
1058 : ca                       dex
1059 : ca                       dex             ;-60
105a : ca                       dex
105b : ca                       dex
105c : ca                       dex
105d : ca                       dex
105e : ca                       dex
105f : ca                       dex
1060 : ca                       dex
1061 : ca                       dex
1062 : ca                       dex
1063 : ca                       dex             ;-50
1064 : ca                       dex
1065 : ca                       dex
1066 : ca                       dex
1067 : ca                       dex
1068 : ca                       dex
1069 : ca                       dex
106a : ca                       dex
106b : ca                       dex
106c : ca                       dex
106d : ca                       dex             ;-40
106e : ca                       dex
106f : ca                       dex
1070 : ca                       dex
1071 : ca                       dex
1072 : ca                       dex
1073 : ca                       dex
1074 : ca                       dex
1075 : ca                       dex
1076 : ca                       dex
1077 : ca                       dex             ;-30
1078 : ca                       dex
1079 : ca                       dex
107a : ca                       dex
107b : ca                       dex
107c : ca                       dex
107d : ca                       dex
107e : ca                       dex
107f : ca                       dex
1080 : ca                       dex
1081 : ca                       dex             ;-20
1082 : ca                       dex
1083 : ca                       dex
1084 : ca                       dex
1085 : ca                       dex
1086 : ca                       dex
1087 : ca                       dex
1088 : ca                       dex
1089 : ca                       dex
108a : ca                       dex
108b : ca                       dex             ;-10
108c : ca                       dex
108d : ca                       dex
108e : ca                       dex
108f : ca                       dex
1090 : ca                       dex
1091 : ca                       dex
1092 : ca                       dex             ;-3
1093 :                  range_op                ;test target with zero flag=0, z=1 if previous dex
1094 =                  range_adr   = *+1       ;modifiable relative address
1093 : f0fe                     beq *           ;trap, if called without modification
1095 : ca                       dex             ;+0
1096 : ca                       dex
1097 : ca                       dex
1098 : ca                       dex
1099 : ca                       dex
109a : ca                       dex
109b : ca                       dex
109c : ca                       dex
109d : ca                       dex
109e : ca                       dex
109f : ca                       dex             ;+10
10a0 : ca                       dex
10a1 : ca                       dex
10a2 : ca                       dex
10a3 : ca                       dex
10a4 : ca                       dex
10a5 : ca                       dex
10a6 : ca                       dex
10a7 : ca                       dex
10a8 : ca                       dex
10a9 : ca                       dex             ;+20
10aa : ca                       dex
10ab : ca                       dex
10ac : ca                       dex
10ad : ca                       dex
10ae : ca                       dex
10af : ca                       dex
10b0 : ca                       dex
10b1 : ca                       dex
10b2 : ca                       dex
10b3 : ca                       dex             ;+30
10b4 : ca                       dex
10b5 : ca                       dex
10b6 : ca                       dex
10b7 : ca                       dex
10b8 : ca                       dex
10b9 : ca                       dex
10ba : ca                       dex
10bb : ca                       dex
10bc : ca                       dex
10bd : ca                       dex             ;+40
10be : ca                       dex
10bf : ca                       dex
10c0 : ca                       dex
10c1 : ca                       dex
10c2 : ca                       dex
10c3 : ca                       dex
10c4 : ca                       dex
10c5 : ca                       dex
10c6 : ca                       dex
10c7 : ca                       dex             ;+50
10c8 : ca                       dex
10c9 : ca                       dex
10ca : ca                       dex
10cb : ca                       dex
10cc : ca                       dex
10cd : ca                       dex
10ce : ca                       dex
10cf : ca                       dex
10d0 : ca                       dex
10d1 : ca                       dex             ;+60
10d2 : ca                       dex
10d3 : ca                       dex
10d4 : ca                       dex
10d5 : ca                       dex
10d6 : ca                       dex
10d7 : ca                       dex
10d8 : ca                       dex
10d9 : ca                       dex
10da : ca                       dex
10db : ca                       dex             ;+70
10dc : ca                       dex
10dd : ca                       dex
10de : ca                       dex
10df : ca                       dex
10e0 : ca                       dex
10e1 : ca                       dex
10e2 : ca                       dex
10e3 : ca                       dex
10e4 : ca                       dex
10e5 : ca                       dex             ;+80
10e6 : ca                       dex
10e7 : ca                       dex
10e8 : ca                       dex
10e9 : ca                       dex
10ea : ca                       dex
10eb : ca                       dex
10ec : ca                       dex
10ed : ca                       dex
10ee : ca                       dex
10ef : ca                       dex             ;+90
10f0 : ca                       dex
10f1 : ca                       dex
10f2 : ca                       dex
10f3 : ca                       dex
10f4 : ca                       dex
10f5 : ca                       dex
10f6 : ca                       dex
10f7 : ca                       dex
10f8 : ca                       dex
10f9 : ca                       dex             ;+100
10fa : ca                       dex
10fb : ca                       dex
10fc : ca                       dex
10fd : ca                       dex
10fe : ca                       dex
10ff : ca                       dex
1100 : ca                       dex
1101 : ca                       dex
1102 : ca                       dex
1103 : ca                       dex             ;+110
1104 : ca                       dex
1105 : ca                       dex
1106 : ca                       dex
1107 : ca                       dex
1108 : ca                       dex
1109 : ca                       dex
110a : ca                       dex
110b : ca                       dex
110c : ca                       dex
110d : ca                       dex             ;+120
110e : ca                       dex
110f : ca                       dex
1110 : ca                       dex
1111 : ca                       dex
1112 : ca                       dex
1113 : ca                       dex
1114 : f003                     beq range_ok    ;+127 - max forward
1116 : 4c1611                   jmp *           ;trap bad range
1119 :                  range_ok
1119 : c000                     cpy #0
111b : f003                     beq range_end
111d : 4c0310                   jmp range_loop
1120 :                  range_end               ;range test successful
                        
                        ;partial test BNE & CMP, CPX, CPY immediate
1120 : c001                     cpy #1          ;testing BNE true
1122 : d003                     bne test_bne
1124 : 4c2411                   jmp *
1127 :                  test_bne
1127 : a900                     lda #0
1129 : c900                     cmp #0          ;test compare immediate
112b : d0fe                     bne *
112d : 90fe                     bcc *
112f : 30fe                     bmi *
1131 : c901                     cmp #1
1133 : f0fe                     beq *
1135 : b0fe                     bcs *
1137 : 10fe                     bpl *
1139 : aa                       tax
113a : e000                     cpx #0          ;test compare x immediate
113c : d0fe                     bne *
113e : 90fe                     bcc *
1140 : 30fe                     bmi *
1142 : e001                     cpx #1
1144 : f0fe                     beq *
1146 : b0fe                     bcs *
1148 : 10fe                     bpl *
114a : a8                       tay
114b : c000                     cpy #0          ;test compare y immediate
114d : d0fe                     bne *
114f : 90fe                     bcc *
1151 : 30fe                     bmi *
1153 : c001                     cpy #1
1155 : f0fe                     beq *
1157 : b0fe                     bcs *
1159 : 10fe                     bpl *
                        ;testing stack operations PHA PHP PLA PLP
                        ;testing branch decisions BPL BMI BVC BVS BCC BCS BNE BEQ
                        
115b : a2ff                     ldx #$ff        ;initialize stack
115d : 9a                       txs
115e : a955                     lda #$55
1160 : 48                       pha
1161 : a9aa                     lda #$aa
1163 : 48                       pha
1164 : cdfe01                   cmp $1fe        ;on stack ?
1167 : d0fe                     bne *
1169 : ba                       tsx
116a : 8a                       txa             ;overwrite accu
116b : c9fd                     cmp #$fd        ;sp decremented?
116d : d0fe                     bne *
116f : 68                       pla
1170 : c9aa                     cmp #$aa        ;successful retreived from stack?
1172 : d0fe                     bne *
1174 : 68                       pla
1175 : c955                     cmp #$55
1177 : d0fe                     bne *
1179 : cdff01                   cmp $1ff        ;remains on stack?
117c : d0fe                     bne *
117e : ba                       tsx
117f : e0ff                     cpx #$ff        ;sp incremented?
1181 : d0fe                     bne *
                                set_stat $ff    ;all on
                       >            load_flag $ff    
1183 : a9ff            >            lda #$ff    
                       >
1185 : 48              >            pha         ;use stack to load status
1186 : 28              >            plp
                        
1187 : 10fe                     bpl *           ;branches should not be taken
1189 : 50fe                     bvc *
118b : 90fe                     bcc *
118d : d0fe                     bne *
118f : 3003                     bmi br1          ;branches should be taken
1191 : 4c9111                   jmp *
1194 : 7003             br1     bvs br2
1196 : 4c9611                   jmp *
1199 : b003             br2     bcs br3
119b : 4c9b11                   jmp *
119e : f003             br3     beq br4
11a0 : 4ca011                   jmp *
11a3 : 08               br4     php
11a4 : ba                       tsx
11a5 : e0fe                     cpx #$fe        ;sp after php?
11a7 : d0fe                     bne *
11a9 : 68                       pla
                                cmp_flag $ff        ;returned all flags on?
11aa : c9ff            >            cmp #($ff        |$30)&$ff
                        
11ac : d0fe                     bne *
11ae : ba                       tsx
11af : e0ff                     cpx #$ff        ;sp after php?
11b1 : d0fe                     bne *
                                set_stat 0      ;all off
                       >            load_flag 0      
11b3 : a900            >            lda #0      
                       >
11b5 : 48              >            pha         ;use stack to load status
11b6 : 28              >            plp
                        
11b7 : 30fe                     bmi *           ;branches should not be taken
11b9 : 70fe                     bvs *
11bb : b0fe                     bcs *
11bd : f0fe                     beq *
11bf : 1003                     bpl br11        ;branches should be taken
11c1 : 4cc111                   jmp *
11c4 : 5003             br11    bvc br12
11c6 : 4cc611                   jmp *
11c9 : 9003             br12    bcc br13
11cb : 4ccb11                   jmp *
11ce : d003             br13    bne br14
11d0 : 4cd011                   jmp *
11d3 : 08               br14    php
11d4 : 68                       pla
                                cmp_flag 0      ;flags off except break (pushed by sw) + reserved?
11d5 : c930            >            cmp #(0      |$30)&$ff
                        
11d7 : d0fe                     bne *
                                ;crosscheck flags
                                set_stat carry
                       >            load_flag carry
11d9 : a901            >            lda #carry
                       >
11db : 48              >            pha         ;use stack to load status
11dc : 28              >            plp
                        
11dd : 90fe                     bcc *
                                set_stat zero
                       >            load_flag zero
11df : a902            >            lda #zero
                       >
11e1 : 48              >            pha         ;use stack to load status
11e2 : 28              >            plp
                        
11e3 : d0fe                     bne *
                                set_stat overfl
                       >            load_flag overfl
11e5 : a940            >            lda #overfl
                       >
11e7 : 48              >            pha         ;use stack to load status
11e8 : 28              >            plp
                        
11e9 : 50fe                     bvc *
                                set_stat minus
                       >            load_flag minus
11eb : a980            >            lda #minus
                       >
11ed : 48              >            pha         ;use stack to load status
11ee : 28              >            plp
                        
11ef : 10fe                     bpl *
                                set_stat $ff-carry
                       >            load_flag $ff-carry
11f1 : a9fe            >            lda #$ff-carry
                       >
11f3 : 48              >            pha         ;use stack to load status
11f4 : 28              >            plp
                        
11f5 : b0fe                     bcs *
                                set_stat $ff-zero
                       >            load_flag $ff-zero
11f7 : a9fd            >            lda #$ff-zero
                       >
11f9 : 48              >            pha         ;use stack to load status
11fa : 28              >            plp
                        
11fb : f0fe                     beq *
                                set_stat $ff-overfl
                       >            load_flag $ff-overfl
11fd : a9bf            >            lda #$ff-overfl
                       >
11ff : 48              >            pha         ;use stack to load status
1200 : 28              >            plp
                        
1201 : 70fe                     bvs *
                                set_stat $ff-minus
                       >            load_flag $ff-minus
1203 : a97f            >            lda #$ff-minus
                       >
1205 : 48              >            pha         ;use stack to load status
1206 : 28              >            plp
                        
1207 : 30fe                     bmi *
                        
                        ; partial pretest EOR #
                                set_a $3c,0
                       >            load_flag 0
1209 : a900            >            lda #0
                       >
120b : 48              >            pha         ;use stack to load status
120c : a93c            >            lda #$3c     ;precharge accu
120e : 28              >            plp
                        
120f : 49c3                     eor #$c3
                                tst_a $ff,fn
1211 : 08              >            php         ;save flags
1212 : 08              >            php
1213 : c9ff            >            cmp #$ff     ;test result
1215 : d0fe            >            bne *       ;trap
1217 : 68              >            pla         ;load status
                       >            cmp_flag fn
1218 : c9b0            >            cmp #(fn|$30)&$ff
                       >
121a : d0fe            >            bne *       ;trap
121c : 28              >            plp         ;restore status
                        
                                set_a $c3,0
                       >            load_flag 0
121d : a900            >            lda #0
                       >
121f : 48              >            pha         ;use stack to load status
1220 : a9c3            >            lda #$c3     ;precharge accu
1222 : 28              >            plp
                        
1223 : 49c3                     eor #$c3
                                tst_a 0,fz
1225 : 08              >            php         ;save flags
1226 : 08              >            php
1227 : c900            >            cmp #0     ;test result
1229 : d0fe            >            bne *       ;trap
122b : 68              >            pla         ;load status
                       >            cmp_flag fz
122c : c932            >            cmp #(fz|$30)&$ff
                       >
122e : d0fe            >            bne *       ;trap
1230 : 28              >            plp         ;restore status
                        
                        
                        ; PC modifying instructions except branches (NOP, JMP, JSR, RTS, BRK, RTI)
                        ; testing NOP
1231 : a224                     ldx #$24
1233 : a042                     ldy #$42
                                set_a $18,0
                       >            load_flag 0
1235 : a900            >            lda #0
                       >
1237 : 48              >            pha         ;use stack to load status
1238 : a918            >            lda #$18     ;precharge accu
123a : 28              >            plp
                        
123b : ea                       nop
                                tst_a $18,0
123c : 08              >            php         ;save flags
123d : 08              >            php
123e : c918            >            cmp #$18     ;test result
1240 : d0fe            >            bne *       ;trap
1242 : 68              >            pla         ;load status
                       >            cmp_flag 0
1243 : c930            >            cmp #(0|$30)&$ff
                       >
1245 : d0fe            >            bne *       ;trap
1247 : 28              >            plp         ;restore status
                        
1248 : e024                     cpx #$24
124a : d0fe                     bne *
124c : c042                     cpy #$42
124e : d0fe                     bne *
1250 : a2db                     ldx #$db
1252 : a0bd                     ldy #$bd
                                set_a $e7,$ff
                       >            load_flag $ff
1254 : a9ff            >            lda #$ff
                       >
1256 : 48              >            pha         ;use stack to load status
1257 : a9e7            >            lda #$e7     ;precharge accu
1259 : 28              >            plp
                        
125a : ea                       nop
                                tst_a $e7,$ff
125b : 08              >            php         ;save flags
125c : 08              >            php
125d : c9e7            >            cmp #$e7     ;test result
125f : d0fe            >            bne *       ;trap
1261 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1262 : c9ff            >            cmp #($ff|$30)&$ff
                       >
1264 : d0fe            >            bne *       ;trap
1266 : 28              >            plp         ;restore status
                        
1267 : e0db                     cpx #$db
1269 : d0fe                     bne *
126b : c0bd                     cpy #$bd
126d : d0fe                     bne *
                        
                        ; jump absolute
                                set_stat $0
                       >            load_flag $0
126f : a900            >            lda #$0
                       >
1271 : 48              >            pha         ;use stack to load status
1272 : 28              >            plp
                        
1273 : a946                     lda #'F'
1275 : a241                     ldx #'A'
1277 : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
1279 : 4ca63d                   jmp test_far
127c : ea                       nop
127d : ea                       nop
127e : d0fe                     bne *           ;runover protection
1280 : e8                       inx
1281 : e8                       inx
1282 : f0fe             far_ret beq *           ;returned flags OK?
1284 : 10fe                     bpl *
1286 : 90fe                     bcc *
1288 : 50fe                     bvc *
128a : c9ec                     cmp #('F'^$aa)  ;returned registers OK?
128c : d0fe                     bne *
128e : e042                     cpx #('A'+1)
1290 : d0fe                     bne *
1292 : c04f                     cpy #('R'-3)
1294 : d0fe                     bne *
1296 : ca                       dex
1297 : c8                       iny
1298 : c8                       iny
1299 : c8                       iny
129a : 49aa                     eor #$aa        ;N=0, V=1, Z=0, C=1
129c : 4ca512                   jmp test_near
129f : ea                       nop
12a0 : ea                       nop
12a1 : d0fe                     bne *           ;runover protection
12a3 : e8                       inx
12a4 : e8                       inx
12a5 :                  test_near
12a5 : f0fe                     beq *           ;passed flags OK?
12a7 : 30fe                     bmi *
12a9 : 90fe                     bcc *
12ab : 50fe                     bvc *
12ad : c946                     cmp #'F'        ;passed registers OK?
12af : d0fe                     bne *
12b1 : e041                     cpx #'A'
12b3 : d0fe                     bne *
12b5 : c052                     cpy #'R'
12b7 : d0fe                     bne *
                        
                        ; jump indirect
                                set_stat 0
                       >            load_flag 0
12b9 : a900            >            lda #0
                       >
12bb : 48              >            pha         ;use stack to load status
12bc : 28              >            plp
                        
12bd : a949                     lda #'I'
12bf : a24e                     ldx #'N'
12c1 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
12c3 : 6cd43d                   jmp (ptr_tst_ind)
12c6 : ea                       nop
12c7 : d0fe                     bne *           ;runover protection
12c9 : 88                       dey
12ca : 88                       dey
12cb :                  ind_ret
12cb : 08                       php             ;either SP or Y count will fail, if we do not hit
12cc : 88                       dey
12cd : 88                       dey
12ce : 88                       dey
12cf : 28                       plp
12d0 : f0fe                     beq *           ;returned flags OK?
12d2 : 10fe                     bpl *
12d4 : 90fe                     bcc *
12d6 : 50fe                     bvc *
12d8 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
12da : d0fe                     bne *
12dc : e04f                     cpx #('N'+1)
12de : d0fe                     bne *
12e0 : c03e                     cpy #('D'-6)
12e2 : d0fe                     bne *
12e4 : ba                       tsx             ;SP check
12e5 : e0ff                     cpx #$ff
12e7 : d0fe                     bne *
                        
                        ; jump subroutine & return from subroutine
                                set_stat 0
                       >            load_flag 0
12e9 : a900            >            lda #0
                       >
12eb : 48              >            pha         ;use stack to load status
12ec : 28              >            plp
                        
12ed : a94a                     lda #'J'
12ef : a253                     ldx #'S'
12f1 : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
12f3 : 20103e                   jsr test_jsr
12f5 =                  jsr_ret = *-1           ;last address of jsr = return address
12f6 : 08                       php             ;either SP or Y count will fail, if we do not hit
12f7 : 88                       dey
12f8 : 88                       dey
12f9 : 88                       dey
12fa : 28                       plp
12fb : f0fe                     beq *           ;returned flags OK?
12fd : 10fe                     bpl *
12ff : 90fe                     bcc *
1301 : 50fe                     bvc *
1303 : c9e0                     cmp #('J'^$aa)  ;returned registers OK?
1305 : d0fe                     bne *
1307 : e054                     cpx #('S'+1)
1309 : d0fe                     bne *
130b : c04c                     cpy #('R'-6)
130d : d0fe                     bne *
130f : ba                       tsx             ;sp?
1310 : e0ff                     cpx #$ff
1312 : d0fe                     bne *
                        
                        ; break & return from interrupt
                            if ROM_vectors = 1
                                set_stat 0
                                lda #'B'
                                ldx #'R'
                                ldy #'K'        ;N=0, V=0, Z=0, C=0
                                brk
                            else
1314 : a913                     lda #hi brk_ret ;emulated break
1316 : 48                       pha
1317 : a92b                     lda #lo brk_ret
1319 : 48                       pha
131a : a930                     lda #$30        ;set break & unused on stack
131c : 48                       pha
                                set_stat intdis
                       >            load_flag intdis
131d : a904            >            lda #intdis
                       >
131f : 48              >            pha         ;use stack to load status
1320 : 28              >            plp
                        
1321 : a942                     lda #'B'
1323 : a252                     ldx #'R'
1325 : a04b                     ldy #'K'        ;N=0, V=0, Z=0, C=0
1327 : 4c553e                   jmp irq_trap
                            endif
132a : 88                       dey             ;should not be executed
132b :                  brk_ret                 ;address of break return
132b : 08                       php             ;either SP or Y count will fail, if we do not hit
132c : 88                       dey
132d : 88                       dey
132e : 88                       dey
132f : c9e8                     cmp #('B'^$aa)  ;returned registers OK?
1331 : d0fe                     bne *
1333 : e053                     cpx #('R'+1)
1335 : d0fe                     bne *
1337 : c045                     cpy #('K'-6)
1339 : d0fe                     bne *
133b : 68                       pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
133c : c930            >            cmp #(0|$30)&$ff
                        
133e : d0fe                     bne *
1340 : ba                       tsx             ;sp?
1341 : e0ff                     cpx #$ff
1343 : d0fe                     bne *
                        
                        ; test set and clear flags CLC CLI CLD CLV SEC SEI SED
                                set_stat $ff
                       >            load_flag $ff
1345 : a9ff            >            lda #$ff
                       >
1347 : 48              >            pha         ;use stack to load status
1348 : 28              >            plp
                        
1349 : 18                       clc
                                tst_stat $ff-carry
134a : 08              >            php         ;save status
134b : 08              >            php         ;use stack to retrieve status
134c : 68              >            pla
                       >            cmp_flag $ff-carry
134d : c9fe            >            cmp #($ff-carry|$30)&$ff
                       >
134f : d0fe            >            bne *       ;trap
1351 : 28              >            plp         ;restore status
                        
1352 : 38                       sec
                                tst_stat $ff
1353 : 08              >            php         ;save status
1354 : 08              >            php         ;use stack to retrieve status
1355 : 68              >            pla
                       >            cmp_flag $ff
1356 : c9ff            >            cmp #($ff|$30)&$ff
                       >
1358 : d0fe            >            bne *       ;trap
135a : 28              >            plp         ;restore status
                        
                            if I_flag = 3
135b : 58                       cli
                                tst_stat $ff-intdis
135c : 08              >            php         ;save status
135d : 08              >            php         ;use stack to retrieve status
135e : 68              >            pla
                       >            cmp_flag $ff-intdis
135f : c9fb            >            cmp #($ff-intdis|$30)&$ff
                       >
1361 : d0fe            >            bne *       ;trap
1363 : 28              >            plp         ;restore status
                        
1364 : 78                       sei
                                tst_stat $ff
1365 : 08              >            php         ;save status
1366 : 08              >            php         ;use stack to retrieve status
1367 : 68              >            pla
                       >            cmp_flag $ff
1368 : c9ff            >            cmp #($ff|$30)&$ff
                       >
136a : d0fe            >            bne *       ;trap
136c : 28              >            plp         ;restore status
                        
                            endif
136d : d8                       cld
                                tst_stat $ff-decmode
136e : 08              >            php         ;save status
136f : 08              >            php         ;use stack to retrieve status
1370 : 68              >            pla
                       >            cmp_flag $ff-decmode
1371 : c9f7            >            cmp #($ff-decmode|$30)&$ff
                       >
1373 : d0fe            >            bne *       ;trap
1375 : 28              >            plp         ;restore status
                        
1376 : f8                       sed
                                tst_stat $ff
1377 : 08              >            php         ;save status
1378 : 08              >            php         ;use stack to retrieve status
1379 : 68              >            pla
                       >            cmp_flag $ff
137a : c9ff            >            cmp #($ff|$30)&$ff
                       >
137c : d0fe            >            bne *       ;trap
137e : 28              >            plp         ;restore status
                        
137f : b8                       clv
                                tst_stat $ff-overfl
1380 : 08              >            php         ;save status
1381 : 08              >            php         ;use stack to retrieve status
1382 : 68              >            pla
                       >            cmp_flag $ff-overfl
1383 : c9bf            >            cmp #($ff-overfl|$30)&$ff
                       >
1385 : d0fe            >            bne *       ;trap
1387 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1388 : a900            >            lda #0
                       >
138a : 48              >            pha         ;use stack to load status
138b : 28              >            plp
                        
                                tst_stat 0
138c : 08              >            php         ;save status
138d : 08              >            php         ;use stack to retrieve status
138e : 68              >            pla
                       >            cmp_flag 0
138f : c930            >            cmp #(0|$30)&$ff
                       >
1391 : d0fe            >            bne *       ;trap
1393 : 28              >            plp         ;restore status
                        
1394 : 38                       sec
                                tst_stat carry
1395 : 08              >            php         ;save status
1396 : 08              >            php         ;use stack to retrieve status
1397 : 68              >            pla
                       >            cmp_flag carry
1398 : c931            >            cmp #(carry|$30)&$ff
                       >
139a : d0fe            >            bne *       ;trap
139c : 28              >            plp         ;restore status
                        
139d : 18                       clc
                                tst_stat 0
139e : 08              >            php         ;save status
139f : 08              >            php         ;use stack to retrieve status
13a0 : 68              >            pla
                       >            cmp_flag 0
13a1 : c930            >            cmp #(0|$30)&$ff
                       >
13a3 : d0fe            >            bne *       ;trap
13a5 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
13a6 : 78                       sei
                                tst_stat intdis
13a7 : 08              >            php         ;save status
13a8 : 08              >            php         ;use stack to retrieve status
13a9 : 68              >            pla
                       >            cmp_flag intdis
13aa : c934            >            cmp #(intdis|$30)&$ff
                       >
13ac : d0fe            >            bne *       ;trap
13ae : 28              >            plp         ;restore status
                        
13af : 58                       cli
                                tst_stat 0
13b0 : 08              >            php         ;save status
13b1 : 08              >            php         ;use stack to retrieve status
13b2 : 68              >            pla
                       >            cmp_flag 0
13b3 : c930            >            cmp #(0|$30)&$ff
                       >
13b5 : d0fe            >            bne *       ;trap
13b7 : 28              >            plp         ;restore status
                        
                            endif
13b8 : f8                       sed
                                tst_stat decmode
13b9 : 08              >            php         ;save status
13ba : 08              >            php         ;use stack to retrieve status
13bb : 68              >            pla
                       >            cmp_flag decmode
13bc : c938            >            cmp #(decmode|$30)&$ff
                       >
13be : d0fe            >            bne *       ;trap
13c0 : 28              >            plp         ;restore status
                        
13c1 : d8                       cld
                                tst_stat 0
13c2 : 08              >            php         ;save status
13c3 : 08              >            php         ;use stack to retrieve status
13c4 : 68              >            pla
                       >            cmp_flag 0
13c5 : c930            >            cmp #(0|$30)&$ff
                       >
13c7 : d0fe            >            bne *       ;trap
13c9 : 28              >            plp         ;restore status
                        
                                set_stat overfl
                       >            load_flag overfl
13ca : a940            >            lda #overfl
                       >
13cc : 48              >            pha         ;use stack to load status
13cd : 28              >            plp
                        
                                tst_stat overfl
13ce : 08              >            php         ;save status
13cf : 08              >            php         ;use stack to retrieve status
13d0 : 68              >            pla
                       >            cmp_flag overfl
13d1 : c970            >            cmp #(overfl|$30)&$ff
                       >
13d3 : d0fe            >            bne *       ;trap
13d5 : 28              >            plp         ;restore status
                        
13d6 : b8                       clv
                                tst_stat 0
13d7 : 08              >            php         ;save status
13d8 : 08              >            php         ;use stack to retrieve status
13d9 : 68              >            pla
                       >            cmp_flag 0
13da : c930            >            cmp #(0|$30)&$ff
                       >
13dc : d0fe            >            bne *       ;trap
13de : 28              >            plp         ;restore status
                        
                        ; testing index register increment/decrement and transfer
                        ; INX INY DEX DEY TAX TXA TAY TYA
13df : a2fe                     ldx #$fe
                                set_stat $ff
                       >            load_flag $ff
13e1 : a9ff            >            lda #$ff
                       >
13e3 : 48              >            pha         ;use stack to load status
13e4 : 28              >            plp
                        
13e5 : e8                       inx             ;ff
                                tst_x $ff,$ff-zero
13e6 : 08              >            php         ;save flags
13e7 : 08              >            php
13e8 : e0ff            >            cpx #$ff     ;test result
13ea : d0fe            >            bne *       ;trap
13ec : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
13ed : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
13ef : d0fe            >            bne *       ;trap
13f1 : 28              >            plp         ;restore status
                        
13f2 : e8                       inx             ;00
                                tst_x 0,$ff-minus
13f3 : 08              >            php         ;save flags
13f4 : 08              >            php
13f5 : e000            >            cpx #0     ;test result
13f7 : d0fe            >            bne *       ;trap
13f9 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
13fa : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
13fc : d0fe            >            bne *       ;trap
13fe : 28              >            plp         ;restore status
                        
13ff : e8                       inx             ;01
                                tst_x 1,$ff-minus-zero
1400 : 08              >            php         ;save flags
1401 : 08              >            php
1402 : e001            >            cpx #1     ;test result
1404 : d0fe            >            bne *       ;trap
1406 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
1407 : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
1409 : d0fe            >            bne *       ;trap
140b : 28              >            plp         ;restore status
                        
140c : ca                       dex             ;00
                                tst_x 0,$ff-minus
140d : 08              >            php         ;save flags
140e : 08              >            php
140f : e000            >            cpx #0     ;test result
1411 : d0fe            >            bne *       ;trap
1413 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1414 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
1416 : d0fe            >            bne *       ;trap
1418 : 28              >            plp         ;restore status
                        
1419 : ca                       dex             ;ff
                                tst_x $ff,$ff-zero
141a : 08              >            php         ;save flags
141b : 08              >            php
141c : e0ff            >            cpx #$ff     ;test result
141e : d0fe            >            bne *       ;trap
1420 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1421 : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
1423 : d0fe            >            bne *       ;trap
1425 : 28              >            plp         ;restore status
                        
1426 : ca                       dex             ;fe
                                set_stat 0
                       >            load_flag 0
1427 : a900            >            lda #0
                       >
1429 : 48              >            pha         ;use stack to load status
142a : 28              >            plp
                        
142b : e8                       inx             ;ff
                                tst_x $ff,minus
142c : 08              >            php         ;save flags
142d : 08              >            php
142e : e0ff            >            cpx #$ff     ;test result
1430 : d0fe            >            bne *       ;trap
1432 : 68              >            pla         ;load status
                       >            cmp_flag minus
1433 : c9b0            >            cmp #(minus|$30)&$ff
                       >
1435 : d0fe            >            bne *       ;trap
1437 : 28              >            plp         ;restore status
                        
1438 : e8                       inx             ;00
                                tst_x 0,zero
1439 : 08              >            php         ;save flags
143a : 08              >            php
143b : e000            >            cpx #0     ;test result
143d : d0fe            >            bne *       ;trap
143f : 68              >            pla         ;load status
                       >            cmp_flag zero
1440 : c932            >            cmp #(zero|$30)&$ff
                       >
1442 : d0fe            >            bne *       ;trap
1444 : 28              >            plp         ;restore status
                        
1445 : e8                       inx             ;01
                                tst_x 1,0
1446 : 08              >            php         ;save flags
1447 : 08              >            php
1448 : e001            >            cpx #1     ;test result
144a : d0fe            >            bne *       ;trap
144c : 68              >            pla         ;load status
                       >            cmp_flag 0
144d : c930            >            cmp #(0|$30)&$ff
                       >
144f : d0fe            >            bne *       ;trap
1451 : 28              >            plp         ;restore status
                        
1452 : ca                       dex             ;00
                                tst_x 0,zero
1453 : 08              >            php         ;save flags
1454 : 08              >            php
1455 : e000            >            cpx #0     ;test result
1457 : d0fe            >            bne *       ;trap
1459 : 68              >            pla         ;load status
                       >            cmp_flag zero
145a : c932            >            cmp #(zero|$30)&$ff
                       >
145c : d0fe            >            bne *       ;trap
145e : 28              >            plp         ;restore status
                        
145f : ca                       dex             ;ff
                                tst_x $ff,minus
1460 : 08              >            php         ;save flags
1461 : 08              >            php
1462 : e0ff            >            cpx #$ff     ;test result
1464 : d0fe            >            bne *       ;trap
1466 : 68              >            pla         ;load status
                       >            cmp_flag minus
1467 : c9b0            >            cmp #(minus|$30)&$ff
                       >
1469 : d0fe            >            bne *       ;trap
146b : 28              >            plp         ;restore status
                        
                        
146c : a0fe                     ldy #$fe
                                set_stat $ff
                       >            load_flag $ff
146e : a9ff            >            lda #$ff
                       >
1470 : 48              >            pha         ;use stack to load status
1471 : 28              >            plp
                        
1472 : c8                       iny             ;ff
                                tst_y $ff,$ff-zero
1473 : 08              >            php         ;save flags
1474 : 08              >            php
1475 : c0ff            >            cpy #$ff     ;test result
1477 : d0fe            >            bne *       ;trap
1479 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
147a : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
147c : d0fe            >            bne *       ;trap
147e : 28              >            plp         ;restore status
                        
147f : c8                       iny             ;00
                                tst_y 0,$ff-minus
1480 : 08              >            php         ;save flags
1481 : 08              >            php
1482 : c000            >            cpy #0     ;test result
1484 : d0fe            >            bne *       ;trap
1486 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1487 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
1489 : d0fe            >            bne *       ;trap
148b : 28              >            plp         ;restore status
                        
148c : c8                       iny             ;01
                                tst_y 1,$ff-minus-zero
148d : 08              >            php         ;save flags
148e : 08              >            php
148f : c001            >            cpy #1     ;test result
1491 : d0fe            >            bne *       ;trap
1493 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
1494 : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
1496 : d0fe            >            bne *       ;trap
1498 : 28              >            plp         ;restore status
                        
1499 : 88                       dey             ;00
                                tst_y 0,$ff-minus
149a : 08              >            php         ;save flags
149b : 08              >            php
149c : c000            >            cpy #0     ;test result
149e : d0fe            >            bne *       ;trap
14a0 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
14a1 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
14a3 : d0fe            >            bne *       ;trap
14a5 : 28              >            plp         ;restore status
                        
14a6 : 88                       dey             ;ff
                                tst_y $ff,$ff-zero
14a7 : 08              >            php         ;save flags
14a8 : 08              >            php
14a9 : c0ff            >            cpy #$ff     ;test result
14ab : d0fe            >            bne *       ;trap
14ad : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
14ae : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
14b0 : d0fe            >            bne *       ;trap
14b2 : 28              >            plp         ;restore status
                        
14b3 : 88                       dey             ;fe
                                set_stat 0
                       >            load_flag 0
14b4 : a900            >            lda #0
                       >
14b6 : 48              >            pha         ;use stack to load status
14b7 : 28              >            plp
                        
14b8 : c8                       iny             ;ff
                                tst_y $ff,0+minus
14b9 : 08              >            php         ;save flags
14ba : 08              >            php
14bb : c0ff            >            cpy #$ff     ;test result
14bd : d0fe            >            bne *       ;trap
14bf : 68              >            pla         ;load status
                       >            cmp_flag 0+minus
14c0 : c9b0            >            cmp #(0+minus|$30)&$ff
                       >
14c2 : d0fe            >            bne *       ;trap
14c4 : 28              >            plp         ;restore status
                        
14c5 : c8                       iny             ;00
                                tst_y 0,zero
14c6 : 08              >            php         ;save flags
14c7 : 08              >            php
14c8 : c000            >            cpy #0     ;test result
14ca : d0fe            >            bne *       ;trap
14cc : 68              >            pla         ;load status
                       >            cmp_flag zero
14cd : c932            >            cmp #(zero|$30)&$ff
                       >
14cf : d0fe            >            bne *       ;trap
14d1 : 28              >            plp         ;restore status
                        
14d2 : c8                       iny             ;01
                                tst_y 1,0
14d3 : 08              >            php         ;save flags
14d4 : 08              >            php
14d5 : c001            >            cpy #1     ;test result
14d7 : d0fe            >            bne *       ;trap
14d9 : 68              >            pla         ;load status
                       >            cmp_flag 0
14da : c930            >            cmp #(0|$30)&$ff
                       >
14dc : d0fe            >            bne *       ;trap
14de : 28              >            plp         ;restore status
                        
14df : 88                       dey             ;00
                                tst_y 0,zero
14e0 : 08              >            php         ;save flags
14e1 : 08              >            php
14e2 : c000            >            cpy #0     ;test result
14e4 : d0fe            >            bne *       ;trap
14e6 : 68              >            pla         ;load status
                       >            cmp_flag zero
14e7 : c932            >            cmp #(zero|$30)&$ff
                       >
14e9 : d0fe            >            bne *       ;trap
14eb : 28              >            plp         ;restore status
                        
14ec : 88                       dey             ;ff
                                tst_y $ff,minus
14ed : 08              >            php         ;save flags
14ee : 08              >            php
14ef : c0ff            >            cpy #$ff     ;test result
14f1 : d0fe            >            bne *       ;trap
14f3 : 68              >            pla         ;load status
                       >            cmp_flag minus
14f4 : c9b0            >            cmp #(minus|$30)&$ff
                       >
14f6 : d0fe            >            bne *       ;trap
14f8 : 28              >            plp         ;restore status
                        
                        
14f9 : a2ff                     ldx #$ff
                                set_stat $ff
                       >            load_flag $ff
14fb : a9ff            >            lda #$ff
                       >
14fd : 48              >            pha         ;use stack to load status
14fe : 28              >            plp
                        
14ff : 8a                       txa
                                tst_a $ff,$ff-zero
1500 : 08              >            php         ;save flags
1501 : 08              >            php
1502 : c9ff            >            cmp #$ff     ;test result
1504 : d0fe            >            bne *       ;trap
1506 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1507 : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
1509 : d0fe            >            bne *       ;trap
150b : 28              >            plp         ;restore status
                        
150c : 08                       php
150d : e8                       inx             ;00
150e : 28                       plp
150f : 8a                       txa
                                tst_a 0,$ff-minus
1510 : 08              >            php         ;save flags
1511 : 08              >            php
1512 : c900            >            cmp #0     ;test result
1514 : d0fe            >            bne *       ;trap
1516 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1517 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
1519 : d0fe            >            bne *       ;trap
151b : 28              >            plp         ;restore status
                        
151c : 08                       php
151d : e8                       inx             ;01
151e : 28                       plp
151f : 8a                       txa
                                tst_a 1,$ff-minus-zero
1520 : 08              >            php         ;save flags
1521 : 08              >            php
1522 : c901            >            cmp #1     ;test result
1524 : d0fe            >            bne *       ;trap
1526 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
1527 : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
1529 : d0fe            >            bne *       ;trap
152b : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
152c : a900            >            lda #0
                       >
152e : 48              >            pha         ;use stack to load status
152f : 28              >            plp
                        
1530 : 8a                       txa
                                tst_a 1,0
1531 : 08              >            php         ;save flags
1532 : 08              >            php
1533 : c901            >            cmp #1     ;test result
1535 : d0fe            >            bne *       ;trap
1537 : 68              >            pla         ;load status
                       >            cmp_flag 0
1538 : c930            >            cmp #(0|$30)&$ff
                       >
153a : d0fe            >            bne *       ;trap
153c : 28              >            plp         ;restore status
                        
153d : 08                       php
153e : ca                       dex             ;00
153f : 28                       plp
1540 : 8a                       txa
                                tst_a 0,zero
1541 : 08              >            php         ;save flags
1542 : 08              >            php
1543 : c900            >            cmp #0     ;test result
1545 : d0fe            >            bne *       ;trap
1547 : 68              >            pla         ;load status
                       >            cmp_flag zero
1548 : c932            >            cmp #(zero|$30)&$ff
                       >
154a : d0fe            >            bne *       ;trap
154c : 28              >            plp         ;restore status
                        
154d : 08                       php
154e : ca                       dex             ;ff
154f : 28                       plp
1550 : 8a                       txa
                                tst_a $ff,minus
1551 : 08              >            php         ;save flags
1552 : 08              >            php
1553 : c9ff            >            cmp #$ff     ;test result
1555 : d0fe            >            bne *       ;trap
1557 : 68              >            pla         ;load status
                       >            cmp_flag minus
1558 : c9b0            >            cmp #(minus|$30)&$ff
                       >
155a : d0fe            >            bne *       ;trap
155c : 28              >            plp         ;restore status
                        
                        
155d : a0ff                     ldy #$ff
                                set_stat $ff
                       >            load_flag $ff
155f : a9ff            >            lda #$ff
                       >
1561 : 48              >            pha         ;use stack to load status
1562 : 28              >            plp
                        
1563 : 98                       tya
                                tst_a $ff,$ff-zero
1564 : 08              >            php         ;save flags
1565 : 08              >            php
1566 : c9ff            >            cmp #$ff     ;test result
1568 : d0fe            >            bne *       ;trap
156a : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
156b : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
156d : d0fe            >            bne *       ;trap
156f : 28              >            plp         ;restore status
                        
1570 : 08                       php
1571 : c8                       iny             ;00
1572 : 28                       plp
1573 : 98                       tya
                                tst_a 0,$ff-minus
1574 : 08              >            php         ;save flags
1575 : 08              >            php
1576 : c900            >            cmp #0     ;test result
1578 : d0fe            >            bne *       ;trap
157a : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
157b : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
157d : d0fe            >            bne *       ;trap
157f : 28              >            plp         ;restore status
                        
1580 : 08                       php
1581 : c8                       iny             ;01
1582 : 28                       plp
1583 : 98                       tya
                                tst_a 1,$ff-minus-zero
1584 : 08              >            php         ;save flags
1585 : 08              >            php
1586 : c901            >            cmp #1     ;test result
1588 : d0fe            >            bne *       ;trap
158a : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
158b : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
158d : d0fe            >            bne *       ;trap
158f : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1590 : a900            >            lda #0
                       >
1592 : 48              >            pha         ;use stack to load status
1593 : 28              >            plp
                        
1594 : 98                       tya
                                tst_a 1,0
1595 : 08              >            php         ;save flags
1596 : 08              >            php
1597 : c901            >            cmp #1     ;test result
1599 : d0fe            >            bne *       ;trap
159b : 68              >            pla         ;load status
                       >            cmp_flag 0
159c : c930            >            cmp #(0|$30)&$ff
                       >
159e : d0fe            >            bne *       ;trap
15a0 : 28              >            plp         ;restore status
                        
15a1 : 08                       php
15a2 : 88                       dey             ;00
15a3 : 28                       plp
15a4 : 98                       tya
                                tst_a 0,zero
15a5 : 08              >            php         ;save flags
15a6 : 08              >            php
15a7 : c900            >            cmp #0     ;test result
15a9 : d0fe            >            bne *       ;trap
15ab : 68              >            pla         ;load status
                       >            cmp_flag zero
15ac : c932            >            cmp #(zero|$30)&$ff
                       >
15ae : d0fe            >            bne *       ;trap
15b0 : 28              >            plp         ;restore status
                        
15b1 : 08                       php
15b2 : 88                       dey             ;ff
15b3 : 28                       plp
15b4 : 98                       tya
                                tst_a $ff,minus
15b5 : 08              >            php         ;save flags
15b6 : 08              >            php
15b7 : c9ff            >            cmp #$ff     ;test result
15b9 : d0fe            >            bne *       ;trap
15bb : 68              >            pla         ;load status
                       >            cmp_flag minus
15bc : c9b0            >            cmp #(minus|$30)&$ff
                       >
15be : d0fe            >            bne *       ;trap
15c0 : 28              >            plp         ;restore status
                        
                        
                                load_flag $ff
15c1 : a9ff            >            lda #$ff
                        
15c3 : 48                       pha
15c4 : a2ff                     ldx #$ff        ;ff
15c6 : 8a                       txa
15c7 : 28                       plp
15c8 : a8                       tay
                                tst_y $ff,$ff-zero
15c9 : 08              >            php         ;save flags
15ca : 08              >            php
15cb : c0ff            >            cpy #$ff     ;test result
15cd : d0fe            >            bne *       ;trap
15cf : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
15d0 : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
15d2 : d0fe            >            bne *       ;trap
15d4 : 28              >            plp         ;restore status
                        
15d5 : 08                       php
15d6 : e8                       inx             ;00
15d7 : 8a                       txa
15d8 : 28                       plp
15d9 : a8                       tay
                                tst_y 0,$ff-minus
15da : 08              >            php         ;save flags
15db : 08              >            php
15dc : c000            >            cpy #0     ;test result
15de : d0fe            >            bne *       ;trap
15e0 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
15e1 : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
15e3 : d0fe            >            bne *       ;trap
15e5 : 28              >            plp         ;restore status
                        
15e6 : 08                       php
15e7 : e8                       inx             ;01
15e8 : 8a                       txa
15e9 : 28                       plp
15ea : a8                       tay
                                tst_y 1,$ff-minus-zero
15eb : 08              >            php         ;save flags
15ec : 08              >            php
15ed : c001            >            cpy #1     ;test result
15ef : d0fe            >            bne *       ;trap
15f1 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
15f2 : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
15f4 : d0fe            >            bne *       ;trap
15f6 : 28              >            plp         ;restore status
                        
                                load_flag 0
15f7 : a900            >            lda #0
                        
15f9 : 48                       pha
15fa : a900                     lda #0
15fc : 8a                       txa
15fd : 28                       plp
15fe : a8                       tay
                                tst_y 1,0
15ff : 08              >            php         ;save flags
1600 : 08              >            php
1601 : c001            >            cpy #1     ;test result
1603 : d0fe            >            bne *       ;trap
1605 : 68              >            pla         ;load status
                       >            cmp_flag 0
1606 : c930            >            cmp #(0|$30)&$ff
                       >
1608 : d0fe            >            bne *       ;trap
160a : 28              >            plp         ;restore status
                        
160b : 08                       php
160c : ca                       dex             ;00
160d : 8a                       txa
160e : 28                       plp
160f : a8                       tay
                                tst_y 0,zero
1610 : 08              >            php         ;save flags
1611 : 08              >            php
1612 : c000            >            cpy #0     ;test result
1614 : d0fe            >            bne *       ;trap
1616 : 68              >            pla         ;load status
                       >            cmp_flag zero
1617 : c932            >            cmp #(zero|$30)&$ff
                       >
1619 : d0fe            >            bne *       ;trap
161b : 28              >            plp         ;restore status
                        
161c : 08                       php
161d : ca                       dex             ;ff
161e : 8a                       txa
161f : 28                       plp
1620 : a8                       tay
                                tst_y $ff,minus
1621 : 08              >            php         ;save flags
1622 : 08              >            php
1623 : c0ff            >            cpy #$ff     ;test result
1625 : d0fe            >            bne *       ;trap
1627 : 68              >            pla         ;load status
                       >            cmp_flag minus
1628 : c9b0            >            cmp #(minus|$30)&$ff
                       >
162a : d0fe            >            bne *       ;trap
162c : 28              >            plp         ;restore status
                        
                        
                        
                                load_flag $ff
162d : a9ff            >            lda #$ff
                        
162f : 48                       pha
1630 : a0ff                     ldy #$ff        ;ff
1632 : 98                       tya
1633 : 28                       plp
1634 : aa                       tax
                                tst_x $ff,$ff-zero
1635 : 08              >            php         ;save flags
1636 : 08              >            php
1637 : e0ff            >            cpx #$ff     ;test result
1639 : d0fe            >            bne *       ;trap
163b : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
163c : c9fd            >            cmp #($ff-zero|$30)&$ff
                       >
163e : d0fe            >            bne *       ;trap
1640 : 28              >            plp         ;restore status
                        
1641 : 08                       php
1642 : c8                       iny             ;00
1643 : 98                       tya
1644 : 28                       plp
1645 : aa                       tax
                                tst_x 0,$ff-minus
1646 : 08              >            php         ;save flags
1647 : 08              >            php
1648 : e000            >            cpx #0     ;test result
164a : d0fe            >            bne *       ;trap
164c : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
164d : c97f            >            cmp #($ff-minus|$30)&$ff
                       >
164f : d0fe            >            bne *       ;trap
1651 : 28              >            plp         ;restore status
                        
1652 : 08                       php
1653 : c8                       iny             ;01
1654 : 98                       tya
1655 : 28                       plp
1656 : aa                       tax
                                tst_x 1,$ff-minus-zero
1657 : 08              >            php         ;save flags
1658 : 08              >            php
1659 : e001            >            cpx #1     ;test result
165b : d0fe            >            bne *       ;trap
165d : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
165e : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                       >
1660 : d0fe            >            bne *       ;trap
1662 : 28              >            plp         ;restore status
                        
                                load_flag 0
1663 : a900            >            lda #0
                        
1665 : 48                       pha
1666 : a900                     lda #0          ;preset status
1668 : 98                       tya
1669 : 28                       plp
166a : aa                       tax
                                tst_x 1,0
166b : 08              >            php         ;save flags
166c : 08              >            php
166d : e001            >            cpx #1     ;test result
166f : d0fe            >            bne *       ;trap
1671 : 68              >            pla         ;load status
                       >            cmp_flag 0
1672 : c930            >            cmp #(0|$30)&$ff
                       >
1674 : d0fe            >            bne *       ;trap
1676 : 28              >            plp         ;restore status
                        
1677 : 08                       php
1678 : 88                       dey             ;00
1679 : 98                       tya
167a : 28                       plp
167b : aa                       tax
                                tst_x 0,zero
167c : 08              >            php         ;save flags
167d : 08              >            php
167e : e000            >            cpx #0     ;test result
1680 : d0fe            >            bne *       ;trap
1682 : 68              >            pla         ;load status
                       >            cmp_flag zero
1683 : c932            >            cmp #(zero|$30)&$ff
                       >
1685 : d0fe            >            bne *       ;trap
1687 : 28              >            plp         ;restore status
                        
1688 : 08                       php
1689 : 88                       dey             ;ff
168a : 98                       tya
168b : 28                       plp
168c : aa                       tax
                                tst_x $ff,minus
168d : 08              >            php         ;save flags
168e : 08              >            php
168f : e0ff            >            cpx #$ff     ;test result
1691 : d0fe            >            bne *       ;trap
1693 : 68              >            pla         ;load status
                       >            cmp_flag minus
1694 : c9b0            >            cmp #(minus|$30)&$ff
                       >
1696 : d0fe            >            bne *       ;trap
1698 : 28              >            plp         ;restore status
                        
                        
                        ;TSX sets NZ - TXS does not
1699 : a201                     ldx #1          ;01
                                set_stat $ff
                       >            load_flag $ff
169b : a9ff            >            lda #$ff
                       >
169d : 48              >            pha         ;use stack to load status
169e : 28              >            plp
                        
169f : 9a                       txs
16a0 : 08                       php
16a1 : ad0101                   lda $101
                                cmp_flag $ff
16a4 : c9ff            >            cmp #($ff|$30)&$ff
                        
16a6 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
16a8 : a900            >            lda #0
                       >
16aa : 48              >            pha         ;use stack to load status
16ab : 28              >            plp
                        
16ac : 9a                       txs
16ad : 08                       php
16ae : ad0101                   lda $101
                                cmp_flag 0
16b1 : c930            >            cmp #(0|$30)&$ff
                        
16b3 : d0fe                     bne *
16b5 : ca                       dex             ;00
                                set_stat $ff
                       >            load_flag $ff
16b6 : a9ff            >            lda #$ff
                       >
16b8 : 48              >            pha         ;use stack to load status
16b9 : 28              >            plp
                        
16ba : 9a                       txs
16bb : 08                       php
16bc : ad0001                   lda $100
                                cmp_flag $ff
16bf : c9ff            >            cmp #($ff|$30)&$ff
                        
16c1 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
16c3 : a900            >            lda #0
                       >
16c5 : 48              >            pha         ;use stack to load status
16c6 : 28              >            plp
                        
16c7 : 9a                       txs
16c8 : 08                       php
16c9 : ad0001                   lda $100
                                cmp_flag 0
16cc : c930            >            cmp #(0|$30)&$ff
                        
16ce : d0fe                     bne *
16d0 : ca                       dex             ;ff
                                set_stat $ff
                       >            load_flag $ff
16d1 : a9ff            >            lda #$ff
                       >
16d3 : 48              >            pha         ;use stack to load status
16d4 : 28              >            plp
                        
16d5 : 9a                       txs
16d6 : 08                       php
16d7 : adff01                   lda $1ff
                                cmp_flag $ff
16da : c9ff            >            cmp #($ff|$30)&$ff
                        
16dc : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
16de : a900            >            lda #0
                       >
16e0 : 48              >            pha         ;use stack to load status
16e1 : 28              >            plp
                        
16e2 : 9a                       txs
16e3 : 08                       php
16e4 : adff01                   lda $1ff
                                cmp_flag 0
16e7 : c930            >            cmp #(0|$30)&$ff
                        
                        
16e9 : a201                     ldx #1
16eb : 9a                       txs             ;sp=01
                                set_stat $ff
                       >            load_flag $ff
16ec : a9ff            >            lda #$ff
                       >
16ee : 48              >            pha         ;use stack to load status
16ef : 28              >            plp
                        
16f0 : ba                       tsx             ;clears Z, N
16f1 : 08                       php             ;sp=00
16f2 : e001                     cpx #1
16f4 : d0fe                     bne *
16f6 : ad0101                   lda $101
                                cmp_flag $ff-minus-zero
16f9 : c97d            >            cmp #($ff-minus-zero|$30)&$ff
                        
16fb : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
16fd : a9ff            >            lda #$ff
                       >
16ff : 48              >            pha         ;use stack to load status
1700 : 28              >            plp
                        
1701 : ba                       tsx             ;clears N, sets Z
1702 : 08                       php             ;sp=ff
1703 : e000                     cpx #0
1705 : d0fe                     bne *
1707 : ad0001                   lda $100
                                cmp_flag $ff-minus
170a : c97f            >            cmp #($ff-minus|$30)&$ff
                        
170c : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
170e : a9ff            >            lda #$ff
                       >
1710 : 48              >            pha         ;use stack to load status
1711 : 28              >            plp
                        
1712 : ba                       tsx             ;clears N, sets Z
1713 : 08                       php             ;sp=fe
1714 : e0ff                     cpx #$ff
1716 : d0fe                     bne *
1718 : adff01                   lda $1ff
                                cmp_flag $ff-zero
171b : c9fd            >            cmp #($ff-zero|$30)&$ff
                        
171d : d0fe                     bne *
                        
171f : a201                     ldx #1
1721 : 9a                       txs             ;sp=01
                                set_stat 0
                       >            load_flag 0
1722 : a900            >            lda #0
                       >
1724 : 48              >            pha         ;use stack to load status
1725 : 28              >            plp
                        
1726 : ba                       tsx             ;clears Z, N
1727 : 08                       php             ;sp=00
1728 : e001                     cpx #1
172a : d0fe                     bne *
172c : ad0101                   lda $101
                                cmp_flag 0
172f : c930            >            cmp #(0|$30)&$ff
                        
1731 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
1733 : a900            >            lda #0
                       >
1735 : 48              >            pha         ;use stack to load status
1736 : 28              >            plp
                        
1737 : ba                       tsx             ;clears N, sets Z
1738 : 08                       php             ;sp=ff
1739 : e000                     cpx #0
173b : d0fe                     bne *
173d : ad0001                   lda $100
                                cmp_flag zero
1740 : c932            >            cmp #(zero|$30)&$ff
                        
1742 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
1744 : a900            >            lda #0
                       >
1746 : 48              >            pha         ;use stack to load status
1747 : 28              >            plp
                        
1748 : ba                       tsx             ;clears N, sets Z
1749 : 08                       php             ;sp=fe
174a : e0ff                     cpx #$ff
174c : d0fe                     bne *
174e : adff01                   lda $1ff
                                cmp_flag minus
1751 : c9b0            >            cmp #(minus|$30)&$ff
                        
1753 : d0fe                     bne *
1755 : 68                       pla             ;sp=ff
                        
                        ; testing index register load & store LDY LDX STY STX all addressing modes
                        ; LDX / STX - zp,y / abs,y
1756 : a003                     ldy #3
1758 :                  tldx
                                set_stat 0
                       >            load_flag 0
1758 : a900            >            lda #0
                       >
175a : 48              >            pha         ;use stack to load status
175b : 28              >            plp
                        
175c : b60a                     ldx zp1,y
175e : 08                       php         ;test stores do not alter flags
175f : 8a                       txa
1760 : 49c3                     eor #$c3
1762 : 28                       plp
1763 : 993302                   sta abst,y
1766 : 08                       php         ;flags after load/store sequence
1767 : 49c3                     eor #$c3
1769 : d90002                   cmp abs1,y  ;test result
176c : d0fe                     bne *       ;trap
176e : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
176f : 4930            >            eor #(0    |$30)
                        
1771 : d90502                   cmp fLDx,y  ;test flags
1774 : d0fe                     bne *       ;trap
1776 : 88                       dey
1777 : 10df                     bpl tldx
                        
1779 : a003                     ldy #3
177b :                  tldx1
                                set_stat $ff
                       >            load_flag $ff
177b : a9ff            >            lda #$ff
                       >
177d : 48              >            pha         ;use stack to load status
177e : 28              >            plp
                        
177f : b60a                     ldx zp1,y
1781 : 08                       php         ;test stores do not alter flags
1782 : 8a                       txa
1783 : 49c3                     eor #$c3
1785 : 28                       plp
1786 : 993302                   sta abst,y
1789 : 08                       php         ;flags after load/store sequence
178a : 49c3                     eor #$c3
178c : d90002                   cmp abs1,y  ;test result
178f : d0fe                     bne *       ;trap
1791 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1792 : 497d            >            eor #(lo~fnz |$30)
                        
1794 : d90502                   cmp fLDx,y  ;test flags
1797 : d0fe                     bne *       ;trap
1799 : 88                       dey
179a : 10df                     bpl tldx1
                        
179c : a003                     ldy #3
179e :                  tldx2
                                set_stat 0
                       >            load_flag 0
179e : a900            >            lda #0
                       >
17a0 : 48              >            pha         ;use stack to load status
17a1 : 28              >            plp
                        
17a2 : be0002                   ldx abs1,y
17a5 : 08                       php         ;test stores do not alter flags
17a6 : 8a                       txa
17a7 : 49c3                     eor #$c3
17a9 : aa                       tax
17aa : 28                       plp
17ab : 960f                     stx zpt,y
17ad : 08                       php         ;flags after load/store sequence
17ae : 49c3                     eor #$c3
17b0 : d90a00                   cmp zp1,y   ;test result
17b3 : d0fe                     bne *       ;trap
17b5 : 68                       pla         ;load status
                                eor_flag 0
17b6 : 4930            >            eor #(0|$30)
                        
17b8 : d90502                   cmp fLDx,y  ;test flags
17bb : d0fe                     bne *       ;trap
17bd : 88                       dey
17be : 10de                     bpl tldx2
                        
17c0 : a003                     ldy #3
17c2 :                  tldx3
                                set_stat $ff
                       >            load_flag $ff
17c2 : a9ff            >            lda #$ff
                       >
17c4 : 48              >            pha         ;use stack to load status
17c5 : 28              >            plp
                        
17c6 : be0002                   ldx abs1,y
17c9 : 08                       php         ;test stores do not alter flags
17ca : 8a                       txa
17cb : 49c3                     eor #$c3
17cd : aa                       tax
17ce : 28                       plp
17cf : 960f                     stx zpt,y
17d1 : 08                       php         ;flags after load/store sequence
17d2 : 49c3                     eor #$c3
17d4 : d90a00                   cmp zp1,y   ;test result
17d7 : d0fe                     bne *       ;trap
17d9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
17da : 497d            >            eor #(lo~fnz |$30)
                        
17dc : d90502                   cmp fLDx,y  ;test flags
17df : d0fe                     bne *       ;trap
17e1 : 88                       dey
17e2 : 10de                     bpl tldx3
                        
17e4 : a003                     ldy #3      ;testing store result
17e6 : a200                     ldx #0
17e8 : b90f00           tstx    lda zpt,y
17eb : 49c3                     eor #$c3
17ed : d90a00                   cmp zp1,y
17f0 : d0fe                     bne *       ;trap: store to zp data
17f2 : 960f                     stx zpt,y   ;clear
17f4 : b93302                   lda abst,y
17f7 : 49c3                     eor #$c3
17f9 : d90002                   cmp abs1,y
17fc : d0fe                     bne *       ;trap: store to abs data
17fe : 8a                       txa
17ff : 993302                   sta abst,y  ;clear
1802 : 88                       dey
1803 : 10e3                     bpl tstx
                        
                        ; indexed wraparound test (only zp should wrap)
1805 : a0fd                     ldy #3+$fa
1807 : b610             tldx4   ldx zp1-$fa&$ff,y   ;wrap on indexed zp
1809 : 8a                       txa
180a : 993901                   sta abst-$fa,y      ;no STX abs,y!
180d : 88                       dey
180e : c0fa                     cpy #$fa
1810 : b0f5                     bcs tldx4
1812 : a0fd                     ldy #3+$fa
1814 : be0601           tldx5   ldx abs1-$fa,y      ;no wrap on indexed abs
1817 : 9615                     stx zpt-$fa&$ff,y
1819 : 88                       dey
181a : c0fa                     cpy #$fa
181c : b0f6                     bcs tldx5
181e : a003                     ldy #3      ;testing wraparound result
1820 : a200                     ldx #0
1822 : b90f00           tstx1   lda zpt,y
1825 : d90a00                   cmp zp1,y
1828 : d0fe                     bne *       ;trap: store to zp data
182a : 960f                     stx zpt,y   ;clear
182c : b93302                   lda abst,y
182f : d90002                   cmp abs1,y
1832 : d0fe                     bne *       ;trap: store to abs data
1834 : 8a                       txa
1835 : 993302                   sta abst,y  ;clear
1838 : 88                       dey
1839 : 10e7                     bpl tstx1
                        
                        ; LDY / STY - zp,x / abs,x
183b : a203                     ldx #3
183d :                  tldy
                                set_stat 0
                       >            load_flag 0
183d : a900            >            lda #0
                       >
183f : 48              >            pha         ;use stack to load status
1840 : 28              >            plp
                        
1841 : b40a                     ldy zp1,x
1843 : 08                       php         ;test stores do not alter flags
1844 : 98                       tya
1845 : 49c3                     eor #$c3
1847 : 28                       plp
1848 : 9d3302                   sta abst,x
184b : 08                       php         ;flags after load/store sequence
184c : 49c3                     eor #$c3
184e : dd0002                   cmp abs1,x  ;test result
1851 : d0fe                     bne *       ;trap
1853 : 68                       pla         ;load status
                                eor_flag 0
1854 : 4930            >            eor #(0|$30)
                        
1856 : dd0502                   cmp fLDx,x  ;test flags
1859 : d0fe                     bne *       ;trap
185b : ca                       dex
185c : 10df                     bpl tldy
                        
185e : a203                     ldx #3
1860 :                  tldy1
                                set_stat $ff
                       >            load_flag $ff
1860 : a9ff            >            lda #$ff
                       >
1862 : 48              >            pha         ;use stack to load status
1863 : 28              >            plp
                        
1864 : b40a                     ldy zp1,x
1866 : 08                       php         ;test stores do not alter flags
1867 : 98                       tya
1868 : 49c3                     eor #$c3
186a : 28                       plp
186b : 9d3302                   sta abst,x
186e : 08                       php         ;flags after load/store sequence
186f : 49c3                     eor #$c3
1871 : dd0002                   cmp abs1,x   ;test result
1874 : d0fe                     bne *       ;trap
1876 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1877 : 497d            >            eor #(lo~fnz |$30)
                        
1879 : dd0502                   cmp fLDx,x  ;test flags
187c : d0fe                     bne *       ;trap
187e : ca                       dex
187f : 10df                     bpl tldy1
                        
1881 : a203                     ldx #3
1883 :                  tldy2
                                set_stat 0
                       >            load_flag 0
1883 : a900            >            lda #0
                       >
1885 : 48              >            pha         ;use stack to load status
1886 : 28              >            plp
                        
1887 : bc0002                   ldy abs1,x
188a : 08                       php         ;test stores do not alter flags
188b : 98                       tya
188c : 49c3                     eor #$c3
188e : a8                       tay
188f : 28                       plp
1890 : 940f                     sty zpt,x
1892 : 08                       php         ;flags after load/store sequence
1893 : 49c3                     eor #$c3
1895 : d50a                     cmp zp1,x   ;test result
1897 : d0fe                     bne *       ;trap
1899 : 68                       pla         ;load status
                                eor_flag 0
189a : 4930            >            eor #(0|$30)
                        
189c : dd0502                   cmp fLDx,x  ;test flags
189f : d0fe                     bne *       ;trap
18a1 : ca                       dex
18a2 : 10df                     bpl tldy2
                        
18a4 : a203                     ldx #3
18a6 :                  tldy3
                                set_stat $ff
                       >            load_flag $ff
18a6 : a9ff            >            lda #$ff
                       >
18a8 : 48              >            pha         ;use stack to load status
18a9 : 28              >            plp
                        
18aa : bc0002                   ldy abs1,x
18ad : 08                       php         ;test stores do not alter flags
18ae : 98                       tya
18af : 49c3                     eor #$c3
18b1 : a8                       tay
18b2 : 28                       plp
18b3 : 940f                     sty zpt,x
18b5 : 08                       php         ;flags after load/store sequence
18b6 : 49c3                     eor #$c3
18b8 : d50a                     cmp zp1,x   ;test result
18ba : d0fe                     bne *       ;trap
18bc : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
18bd : 497d            >            eor #(lo~fnz |$30)
                        
18bf : dd0502                   cmp fLDx,x  ;test flags
18c2 : d0fe                     bne *       ;trap
18c4 : ca                       dex
18c5 : 10df                     bpl tldy3
                        
18c7 : a203                     ldx #3      ;testing store result
18c9 : a000                     ldy #0
18cb : b50f             tsty    lda zpt,x
18cd : 49c3                     eor #$c3
18cf : d50a                     cmp zp1,x
18d1 : d0fe                     bne *       ;trap: store to zp,x data
18d3 : 940f                     sty zpt,x   ;clear
18d5 : bd3302                   lda abst,x
18d8 : 49c3                     eor #$c3
18da : dd0002                   cmp abs1,x
18dd : d0fe                     bne *       ;trap: store to abs,x data
18df : 8a                       txa
18e0 : 9d3302                   sta abst,x  ;clear
18e3 : ca                       dex
18e4 : 10e5                     bpl tsty
                        
                        ; indexed wraparound test (only zp should wrap)
18e6 : a2fd                     ldx #3+$fa
18e8 : b410             tldy4   ldy zp1-$fa&$ff,x   ;wrap on indexed zp
18ea : 98                       tya
18eb : 9d3901                   sta abst-$fa,x      ;no STX abs,x!
18ee : ca                       dex
18ef : e0fa                     cpx #$fa
18f1 : b0f5                     bcs tldy4
18f3 : a2fd                     ldx #3+$fa
18f5 : bc0601           tldy5   ldy abs1-$fa,x      ;no wrap on indexed abs
18f8 : 9415                     sty zpt-$fa&$ff,x
18fa : ca                       dex
18fb : e0fa                     cpx #$fa
18fd : b0f6                     bcs tldy5
18ff : a203                     ldx #3      ;testing wraparound result
1901 : a000                     ldy #0
1903 : b50f             tsty1   lda zpt,x
1905 : d50a                     cmp zp1,x
1907 : d0fe                     bne *       ;trap: store to zp,x data
1909 : 940f                     sty zpt,x   ;clear
190b : bd3302                   lda abst,x
190e : dd0002                   cmp abs1,x
1911 : d0fe                     bne *       ;trap: store to abs,x data
1913 : 8a                       txa
1914 : 9d3302                   sta abst,x  ;clear
1917 : ca                       dex
1918 : 10e9                     bpl tsty1
                        
                        ; LDX / STX - zp / abs / #
                                set_stat 0
                       >            load_flag 0
191a : a900            >            lda #0
                       >
191c : 48              >            pha         ;use stack to load status
191d : 28              >            plp
                        
191e : a60a                     ldx zp1
1920 : 08                       php         ;test stores do not alter flags
1921 : 8a                       txa
1922 : 49c3                     eor #$c3
1924 : aa                       tax
1925 : 28                       plp
1926 : 8e3302                   stx abst
1929 : 08                       php         ;flags after load/store sequence
192a : 49c3                     eor #$c3
192c : aa                       tax
192d : e0c3                     cpx #$c3    ;test result
192f : d0fe                     bne *       ;trap
1931 : 68                       pla         ;load status
                                eor_flag 0
1932 : 4930            >            eor #(0|$30)
                        
1934 : cd0502                   cmp fLDx    ;test flags
1937 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1939 : a900            >            lda #0
                       >
193b : 48              >            pha         ;use stack to load status
193c : 28              >            plp
                        
193d : a60b                     ldx zp1+1
193f : 08                       php         ;test stores do not alter flags
1940 : 8a                       txa
1941 : 49c3                     eor #$c3
1943 : aa                       tax
1944 : 28                       plp
1945 : 8e3402                   stx abst+1
1948 : 08                       php         ;flags after load/store sequence
1949 : 49c3                     eor #$c3
194b : aa                       tax
194c : e082                     cpx #$82    ;test result
194e : d0fe                     bne *       ;trap
1950 : 68                       pla         ;load status
                                eor_flag 0
1951 : 4930            >            eor #(0|$30)
                        
1953 : cd0602                   cmp fLDx+1  ;test flags
1956 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1958 : a900            >            lda #0
                       >
195a : 48              >            pha         ;use stack to load status
195b : 28              >            plp
                        
195c : a60c                     ldx zp1+2
195e : 08                       php         ;test stores do not alter flags
195f : 8a                       txa
1960 : 49c3                     eor #$c3
1962 : aa                       tax
1963 : 28                       plp
1964 : 8e3502                   stx abst+2
1967 : 08                       php         ;flags after load/store sequence
1968 : 49c3                     eor #$c3
196a : aa                       tax
196b : e041                     cpx #$41    ;test result
196d : d0fe                     bne *       ;trap
196f : 68                       pla         ;load status
                                eor_flag 0
1970 : 4930            >            eor #(0|$30)
                        
1972 : cd0702                   cmp fLDx+2  ;test flags
1975 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1977 : a900            >            lda #0
                       >
1979 : 48              >            pha         ;use stack to load status
197a : 28              >            plp
                        
197b : a60d                     ldx zp1+3
197d : 08                       php         ;test stores do not alter flags
197e : 8a                       txa
197f : 49c3                     eor #$c3
1981 : aa                       tax
1982 : 28                       plp
1983 : 8e3602                   stx abst+3
1986 : 08                       php         ;flags after load/store sequence
1987 : 49c3                     eor #$c3
1989 : aa                       tax
198a : e000                     cpx #0      ;test result
198c : d0fe                     bne *       ;trap
198e : 68                       pla         ;load status
                                eor_flag 0
198f : 4930            >            eor #(0|$30)
                        
1991 : cd0802                   cmp fLDx+3  ;test flags
1994 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1996 : a9ff            >            lda #$ff
                       >
1998 : 48              >            pha         ;use stack to load status
1999 : 28              >            plp
                        
199a : a60a                     ldx zp1
199c : 08                       php         ;test stores do not alter flags
199d : 8a                       txa
199e : 49c3                     eor #$c3
19a0 : aa                       tax
19a1 : 28                       plp
19a2 : 8e3302                   stx abst
19a5 : 08                       php         ;flags after load/store sequence
19a6 : 49c3                     eor #$c3
19a8 : aa                       tax
19a9 : e0c3                     cpx #$c3    ;test result
19ab : d0fe                     bne *       ;trap
19ad : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19ae : 497d            >            eor #(lo~fnz |$30)
                        
19b0 : cd0502                   cmp fLDx    ;test flags
19b3 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
19b5 : a9ff            >            lda #$ff
                       >
19b7 : 48              >            pha         ;use stack to load status
19b8 : 28              >            plp
                        
19b9 : a60b                     ldx zp1+1
19bb : 08                       php         ;test stores do not alter flags
19bc : 8a                       txa
19bd : 49c3                     eor #$c3
19bf : aa                       tax
19c0 : 28                       plp
19c1 : 8e3402                   stx abst+1
19c4 : 08                       php         ;flags after load/store sequence
19c5 : 49c3                     eor #$c3
19c7 : aa                       tax
19c8 : e082                     cpx #$82    ;test result
19ca : d0fe                     bne *       ;trap
19cc : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19cd : 497d            >            eor #(lo~fnz |$30)
                        
19cf : cd0602                   cmp fLDx+1  ;test flags
19d2 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
19d4 : a9ff            >            lda #$ff
                       >
19d6 : 48              >            pha         ;use stack to load status
19d7 : 28              >            plp
                        
19d8 : a60c                     ldx zp1+2
19da : 08                       php         ;test stores do not alter flags
19db : 8a                       txa
19dc : 49c3                     eor #$c3
19de : aa                       tax
19df : 28                       plp
19e0 : 8e3502                   stx abst+2
19e3 : 08                       php         ;flags after load/store sequence
19e4 : 49c3                     eor #$c3
19e6 : aa                       tax
19e7 : e041                     cpx #$41    ;test result
19e9 : d0fe                     bne *       ;trap
19eb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19ec : 497d            >            eor #(lo~fnz |$30)
                        
19ee : cd0702                   cmp fLDx+2  ;test flags
19f1 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
19f3 : a9ff            >            lda #$ff
                       >
19f5 : 48              >            pha         ;use stack to load status
19f6 : 28              >            plp
                        
19f7 : a60d                     ldx zp1+3
19f9 : 08                       php         ;test stores do not alter flags
19fa : 8a                       txa
19fb : 49c3                     eor #$c3
19fd : aa                       tax
19fe : 28                       plp
19ff : 8e3602                   stx abst+3
1a02 : 08                       php         ;flags after load/store sequence
1a03 : 49c3                     eor #$c3
1a05 : aa                       tax
1a06 : e000                     cpx #0      ;test result
1a08 : d0fe                     bne *       ;trap
1a0a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1a0b : 497d            >            eor #(lo~fnz |$30)
                        
1a0d : cd0802                   cmp fLDx+3  ;test flags
1a10 : d0fe                     bne *       ;trap
                        
                                set_stat 0
                       >            load_flag 0
1a12 : a900            >            lda #0
                       >
1a14 : 48              >            pha         ;use stack to load status
1a15 : 28              >            plp
                        
1a16 : ae0002                   ldx abs1
1a19 : 08                       php         ;test stores do not alter flags
1a1a : 8a                       txa
1a1b : 49c3                     eor #$c3
1a1d : aa                       tax
1a1e : 28                       plp
1a1f : 860f                     stx zpt
1a21 : 08                       php         ;flags after load/store sequence
1a22 : 49c3                     eor #$c3
1a24 : c50a                     cmp zp1     ;test result
1a26 : d0fe                     bne *       ;trap
1a28 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1a29 : 4930            >            eor #(0    |$30)
                        
1a2b : cd0502                   cmp fLDx    ;test flags
1a2e : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1a30 : a900            >            lda #0
                       >
1a32 : 48              >            pha         ;use stack to load status
1a33 : 28              >            plp
                        
1a34 : ae0102                   ldx abs1+1
1a37 : 08                       php         ;test stores do not alter flags
1a38 : 8a                       txa
1a39 : 49c3                     eor #$c3
1a3b : aa                       tax
1a3c : 28                       plp
1a3d : 8610                     stx zpt+1
1a3f : 08                       php         ;flags after load/store sequence
1a40 : 49c3                     eor #$c3
1a42 : c50b                     cmp zp1+1   ;test result
1a44 : d0fe                     bne *       ;trap
1a46 : 68                       pla         ;load status
                                eor_flag 0
1a47 : 4930            >            eor #(0|$30)
                        
1a49 : cd0602                   cmp fLDx+1  ;test flags
1a4c : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1a4e : a900            >            lda #0
                       >
1a50 : 48              >            pha         ;use stack to load status
1a51 : 28              >            plp
                        
1a52 : ae0202                   ldx abs1+2
1a55 : 08                       php         ;test stores do not alter flags
1a56 : 8a                       txa
1a57 : 49c3                     eor #$c3
1a59 : aa                       tax
1a5a : 28                       plp
1a5b : 8611                     stx zpt+2
1a5d : 08                       php         ;flags after load/store sequence
1a5e : 49c3                     eor #$c3
1a60 : c50c                     cmp zp1+2   ;test result
1a62 : d0fe                     bne *       ;trap
1a64 : 68                       pla         ;load status
                                eor_flag 0
1a65 : 4930            >            eor #(0|$30)
                        
1a67 : cd0702                   cmp fLDx+2  ;test flags
1a6a : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1a6c : a900            >            lda #0
                       >
1a6e : 48              >            pha         ;use stack to load status
1a6f : 28              >            plp
                        
1a70 : ae0302                   ldx abs1+3
1a73 : 08                       php         ;test stores do not alter flags
1a74 : 8a                       txa
1a75 : 49c3                     eor #$c3
1a77 : aa                       tax
1a78 : 28                       plp
1a79 : 8612                     stx zpt+3
1a7b : 08                       php         ;flags after load/store sequence
1a7c : 49c3                     eor #$c3
1a7e : c50d                     cmp zp1+3   ;test result
1a80 : d0fe                     bne *       ;trap
1a82 : 68                       pla         ;load status
                                eor_flag 0
1a83 : 4930            >            eor #(0|$30)
                        
1a85 : cd0802                   cmp fLDx+3  ;test flags
1a88 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1a8a : a9ff            >            lda #$ff
                       >
1a8c : 48              >            pha         ;use stack to load status
1a8d : 28              >            plp
                        
1a8e : ae0002                   ldx abs1
1a91 : 08                       php         ;test stores do not alter flags
1a92 : 8a                       txa
1a93 : 49c3                     eor #$c3
1a95 : aa                       tax
1a96 : 28                       plp
1a97 : 860f                     stx zpt
1a99 : 08                       php         ;flags after load/store sequence
1a9a : 49c3                     eor #$c3
1a9c : aa                       tax
1a9d : e40a                     cpx zp1     ;test result
1a9f : d0fe                     bne *       ;trap
1aa1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1aa2 : 497d            >            eor #(lo~fnz |$30)
                        
1aa4 : cd0502                   cmp fLDx    ;test flags
1aa7 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1aa9 : a9ff            >            lda #$ff
                       >
1aab : 48              >            pha         ;use stack to load status
1aac : 28              >            plp
                        
1aad : ae0102                   ldx abs1+1
1ab0 : 08                       php         ;test stores do not alter flags
1ab1 : 8a                       txa
1ab2 : 49c3                     eor #$c3
1ab4 : aa                       tax
1ab5 : 28                       plp
1ab6 : 8610                     stx zpt+1
1ab8 : 08                       php         ;flags after load/store sequence
1ab9 : 49c3                     eor #$c3
1abb : aa                       tax
1abc : e40b                     cpx zp1+1   ;test result
1abe : d0fe                     bne *       ;trap
1ac0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ac1 : 497d            >            eor #(lo~fnz |$30)
                        
1ac3 : cd0602                   cmp fLDx+1  ;test flags
1ac6 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1ac8 : a9ff            >            lda #$ff
                       >
1aca : 48              >            pha         ;use stack to load status
1acb : 28              >            plp
                        
1acc : ae0202                   ldx abs1+2
1acf : 08                       php         ;test stores do not alter flags
1ad0 : 8a                       txa
1ad1 : 49c3                     eor #$c3
1ad3 : aa                       tax
1ad4 : 28                       plp
1ad5 : 8611                     stx zpt+2
1ad7 : 08                       php         ;flags after load/store sequence
1ad8 : 49c3                     eor #$c3
1ada : aa                       tax
1adb : e40c                     cpx zp1+2   ;test result
1add : d0fe                     bne *       ;trap
1adf : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ae0 : 497d            >            eor #(lo~fnz |$30)
                        
1ae2 : cd0702                   cmp fLDx+2  ;test flags
1ae5 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1ae7 : a9ff            >            lda #$ff
                       >
1ae9 : 48              >            pha         ;use stack to load status
1aea : 28              >            plp
                        
1aeb : ae0302                   ldx abs1+3
1aee : 08                       php         ;test stores do not alter flags
1aef : 8a                       txa
1af0 : 49c3                     eor #$c3
1af2 : aa                       tax
1af3 : 28                       plp
1af4 : 8612                     stx zpt+3
1af6 : 08                       php         ;flags after load/store sequence
1af7 : 49c3                     eor #$c3
1af9 : aa                       tax
1afa : e40d                     cpx zp1+3   ;test result
1afc : d0fe                     bne *       ;trap
1afe : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1aff : 497d            >            eor #(lo~fnz |$30)
                        
1b01 : cd0802                   cmp fLDx+3  ;test flags
1b04 : d0fe                     bne *       ;trap
                        
                                set_stat 0
                       >            load_flag 0
1b06 : a900            >            lda #0
                       >
1b08 : 48              >            pha         ;use stack to load status
1b09 : 28              >            plp
                        
1b0a : a2c3                     ldx #$c3
1b0c : 08                       php
1b0d : ec0002                   cpx abs1    ;test result
1b10 : d0fe                     bne *       ;trap
1b12 : 68                       pla         ;load status
                                eor_flag 0
1b13 : 4930            >            eor #(0|$30)
                        
1b15 : cd0502                   cmp fLDx    ;test flags
1b18 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1b1a : a900            >            lda #0
                       >
1b1c : 48              >            pha         ;use stack to load status
1b1d : 28              >            plp
                        
1b1e : a282                     ldx #$82
1b20 : 08                       php
1b21 : ec0102                   cpx abs1+1  ;test result
1b24 : d0fe                     bne *       ;trap
1b26 : 68                       pla         ;load status
                                eor_flag 0
1b27 : 4930            >            eor #(0|$30)
                        
1b29 : cd0602                   cmp fLDx+1  ;test flags
1b2c : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1b2e : a900            >            lda #0
                       >
1b30 : 48              >            pha         ;use stack to load status
1b31 : 28              >            plp
                        
1b32 : a241                     ldx #$41
1b34 : 08                       php
1b35 : ec0202                   cpx abs1+2  ;test result
1b38 : d0fe                     bne *       ;trap
1b3a : 68                       pla         ;load status
                                eor_flag 0
1b3b : 4930            >            eor #(0|$30)
                        
1b3d : cd0702                   cmp fLDx+2  ;test flags
1b40 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1b42 : a900            >            lda #0
                       >
1b44 : 48              >            pha         ;use stack to load status
1b45 : 28              >            plp
                        
1b46 : a200                     ldx #0
1b48 : 08                       php
1b49 : ec0302                   cpx abs1+3  ;test result
1b4c : d0fe                     bne *       ;trap
1b4e : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1b4f : 4930            >            eor #(0    |$30)
                        
1b51 : cd0802                   cmp fLDx+3  ;test flags
1b54 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1b56 : a9ff            >            lda #$ff
                       >
1b58 : 48              >            pha         ;use stack to load status
1b59 : 28              >            plp
                        
1b5a : a2c3                     ldx #$c3
1b5c : 08                       php
1b5d : ec0002                   cpx abs1    ;test result
1b60 : d0fe                     bne *       ;trap
1b62 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b63 : 497d            >            eor #(lo~fnz |$30)
                        
1b65 : cd0502                   cmp fLDx    ;test flags
1b68 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1b6a : a9ff            >            lda #$ff
                       >
1b6c : 48              >            pha         ;use stack to load status
1b6d : 28              >            plp
                        
1b6e : a282                     ldx #$82
1b70 : 08                       php
1b71 : ec0102                   cpx abs1+1  ;test result
1b74 : d0fe                     bne *       ;trap
1b76 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b77 : 497d            >            eor #(lo~fnz |$30)
                        
1b79 : cd0602                   cmp fLDx+1  ;test flags
1b7c : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1b7e : a9ff            >            lda #$ff
                       >
1b80 : 48              >            pha         ;use stack to load status
1b81 : 28              >            plp
                        
1b82 : a241                     ldx #$41
1b84 : 08                       php
1b85 : ec0202                   cpx abs1+2  ;test result
1b88 : d0fe                     bne *       ;trap
1b8a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b8b : 497d            >            eor #(lo~fnz |$30)
                        
1b8d : cd0702                   cmp fLDx+2  ;test flags
1b90 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1b92 : a9ff            >            lda #$ff
                       >
1b94 : 48              >            pha         ;use stack to load status
1b95 : 28              >            plp
                        
1b96 : a200                     ldx #0
1b98 : 08                       php
1b99 : ec0302                   cpx abs1+3  ;test result
1b9c : d0fe                     bne *       ;trap
1b9e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b9f : 497d            >            eor #(lo~fnz |$30)
                        
1ba1 : cd0802                   cmp fLDx+3  ;test flags
1ba4 : d0fe                     bne *       ;trap
                        
1ba6 : a200                     ldx #0
1ba8 : a50f                     lda zpt
1baa : 49c3                     eor #$c3
1bac : c50a                     cmp zp1
1bae : d0fe                     bne *       ;trap: store to zp data
1bb0 : 860f                     stx zpt     ;clear
1bb2 : ad3302                   lda abst
1bb5 : 49c3                     eor #$c3
1bb7 : cd0002                   cmp abs1
1bba : d0fe                     bne *       ;trap: store to abs data
1bbc : 8e3302                   stx abst    ;clear
1bbf : a510                     lda zpt+1
1bc1 : 49c3                     eor #$c3
1bc3 : c50b                     cmp zp1+1
1bc5 : d0fe                     bne *       ;trap: store to zp data
1bc7 : 8610                     stx zpt+1   ;clear
1bc9 : ad3402                   lda abst+1
1bcc : 49c3                     eor #$c3
1bce : cd0102                   cmp abs1+1
1bd1 : d0fe                     bne *       ;trap: store to abs data
1bd3 : 8e3402                   stx abst+1  ;clear
1bd6 : a511                     lda zpt+2
1bd8 : 49c3                     eor #$c3
1bda : c50c                     cmp zp1+2
1bdc : d0fe                     bne *       ;trap: store to zp data
1bde : 8611                     stx zpt+2   ;clear
1be0 : ad3502                   lda abst+2
1be3 : 49c3                     eor #$c3
1be5 : cd0202                   cmp abs1+2
1be8 : d0fe                     bne *       ;trap: store to abs data
1bea : 8e3502                   stx abst+2  ;clear
1bed : a512                     lda zpt+3
1bef : 49c3                     eor #$c3
1bf1 : c50d                     cmp zp1+3
1bf3 : d0fe                     bne *       ;trap: store to zp data
1bf5 : 8612                     stx zpt+3   ;clear
1bf7 : ad3602                   lda abst+3
1bfa : 49c3                     eor #$c3
1bfc : cd0302                   cmp abs1+3
1bff : d0fe                     bne *       ;trap: store to abs data
1c01 : 8e3602                   stx abst+3  ;clear
                        
                        ; LDY / STY - zp / abs / #
                                set_stat 0
                       >            load_flag 0
1c04 : a900            >            lda #0
                       >
1c06 : 48              >            pha         ;use stack to load status
1c07 : 28              >            plp
                        
1c08 : a40a                     ldy zp1
1c0a : 08                       php         ;test stores do not alter flags
1c0b : 98                       tya
1c0c : 49c3                     eor #$c3
1c0e : a8                       tay
1c0f : 28                       plp
1c10 : 8c3302                   sty abst
1c13 : 08                       php         ;flags after load/store sequence
1c14 : 49c3                     eor #$c3
1c16 : a8                       tay
1c17 : c0c3                     cpy #$c3    ;test result
1c19 : d0fe                     bne *       ;trap
1c1b : 68                       pla         ;load status
                                eor_flag 0
1c1c : 4930            >            eor #(0|$30)
                        
1c1e : cd0502                   cmp fLDx    ;test flags
1c21 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1c23 : a900            >            lda #0
                       >
1c25 : 48              >            pha         ;use stack to load status
1c26 : 28              >            plp
                        
1c27 : a40b                     ldy zp1+1
1c29 : 08                       php         ;test stores do not alter flags
1c2a : 98                       tya
1c2b : 49c3                     eor #$c3
1c2d : a8                       tay
1c2e : 28                       plp
1c2f : 8c3402                   sty abst+1
1c32 : 08                       php         ;flags after load/store sequence
1c33 : 49c3                     eor #$c3
1c35 : a8                       tay
1c36 : c082                     cpy #$82    ;test result
1c38 : d0fe                     bne *       ;trap
1c3a : 68                       pla         ;load status
                                eor_flag 0
1c3b : 4930            >            eor #(0|$30)
                        
1c3d : cd0602                   cmp fLDx+1  ;test flags
1c40 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1c42 : a900            >            lda #0
                       >
1c44 : 48              >            pha         ;use stack to load status
1c45 : 28              >            plp
                        
1c46 : a40c                     ldy zp1+2
1c48 : 08                       php         ;test stores do not alter flags
1c49 : 98                       tya
1c4a : 49c3                     eor #$c3
1c4c : a8                       tay
1c4d : 28                       plp
1c4e : 8c3502                   sty abst+2
1c51 : 08                       php         ;flags after load/store sequence
1c52 : 49c3                     eor #$c3
1c54 : a8                       tay
1c55 : c041                     cpy #$41    ;test result
1c57 : d0fe                     bne *       ;trap
1c59 : 68                       pla         ;load status
                                eor_flag 0
1c5a : 4930            >            eor #(0|$30)
                        
1c5c : cd0702                   cmp fLDx+2  ;test flags
1c5f : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1c61 : a900            >            lda #0
                       >
1c63 : 48              >            pha         ;use stack to load status
1c64 : 28              >            plp
                        
1c65 : a40d                     ldy zp1+3
1c67 : 08                       php         ;test stores do not alter flags
1c68 : 98                       tya
1c69 : 49c3                     eor #$c3
1c6b : a8                       tay
1c6c : 28                       plp
1c6d : 8c3602                   sty abst+3
1c70 : 08                       php         ;flags after load/store sequence
1c71 : 49c3                     eor #$c3
1c73 : a8                       tay
1c74 : c000                     cpy #0      ;test result
1c76 : d0fe                     bne *       ;trap
1c78 : 68                       pla         ;load status
                                eor_flag 0
1c79 : 4930            >            eor #(0|$30)
                        
1c7b : cd0802                   cmp fLDx+3  ;test flags
1c7e : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1c80 : a9ff            >            lda #$ff
                       >
1c82 : 48              >            pha         ;use stack to load status
1c83 : 28              >            plp
                        
1c84 : a40a                     ldy zp1
1c86 : 08                       php         ;test stores do not alter flags
1c87 : 98                       tya
1c88 : 49c3                     eor #$c3
1c8a : a8                       tay
1c8b : 28                       plp
1c8c : 8c3302                   sty abst
1c8f : 08                       php         ;flags after load/store sequence
1c90 : 49c3                     eor #$c3
1c92 : a8                       tay
1c93 : c0c3                     cpy #$c3    ;test result
1c95 : d0fe                     bne *       ;trap
1c97 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1c98 : 497d            >            eor #(lo~fnz |$30)
                        
1c9a : cd0502                   cmp fLDx    ;test flags
1c9d : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1c9f : a9ff            >            lda #$ff
                       >
1ca1 : 48              >            pha         ;use stack to load status
1ca2 : 28              >            plp
                        
1ca3 : a40b                     ldy zp1+1
1ca5 : 08                       php         ;test stores do not alter flags
1ca6 : 98                       tya
1ca7 : 49c3                     eor #$c3
1ca9 : a8                       tay
1caa : 28                       plp
1cab : 8c3402                   sty abst+1
1cae : 08                       php         ;flags after load/store sequence
1caf : 49c3                     eor #$c3
1cb1 : a8                       tay
1cb2 : c082                     cpy #$82   ;test result
1cb4 : d0fe                     bne *       ;trap
1cb6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1cb7 : 497d            >            eor #(lo~fnz |$30)
                        
1cb9 : cd0602                   cmp fLDx+1  ;test flags
1cbc : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1cbe : a9ff            >            lda #$ff
                       >
1cc0 : 48              >            pha         ;use stack to load status
1cc1 : 28              >            plp
                        
1cc2 : a40c                     ldy zp1+2
1cc4 : 08                       php         ;test stores do not alter flags
1cc5 : 98                       tya
1cc6 : 49c3                     eor #$c3
1cc8 : a8                       tay
1cc9 : 28                       plp
1cca : 8c3502                   sty abst+2
1ccd : 08                       php         ;flags after load/store sequence
1cce : 49c3                     eor #$c3
1cd0 : a8                       tay
1cd1 : c041                     cpy #$41    ;test result
1cd3 : d0fe                     bne *       ;trap
1cd5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1cd6 : 497d            >            eor #(lo~fnz |$30)
                        
1cd8 : cd0702                   cmp fLDx+2  ;test flags
1cdb : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1cdd : a9ff            >            lda #$ff
                       >
1cdf : 48              >            pha         ;use stack to load status
1ce0 : 28              >            plp
                        
1ce1 : a40d                     ldy zp1+3
1ce3 : 08                       php         ;test stores do not alter flags
1ce4 : 98                       tya
1ce5 : 49c3                     eor #$c3
1ce7 : a8                       tay
1ce8 : 28                       plp
1ce9 : 8c3602                   sty abst+3
1cec : 08                       php         ;flags after load/store sequence
1ced : 49c3                     eor #$c3
1cef : a8                       tay
1cf0 : c000                     cpy #0      ;test result
1cf2 : d0fe                     bne *       ;trap
1cf4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1cf5 : 497d            >            eor #(lo~fnz |$30)
                        
1cf7 : cd0802                   cmp fLDx+3  ;test flags
1cfa : d0fe                     bne *       ;trap
                        
                                set_stat 0
                       >            load_flag 0
1cfc : a900            >            lda #0
                       >
1cfe : 48              >            pha         ;use stack to load status
1cff : 28              >            plp
                        
1d00 : ac0002                   ldy abs1
1d03 : 08                       php         ;test stores do not alter flags
1d04 : 98                       tya
1d05 : 49c3                     eor #$c3
1d07 : a8                       tay
1d08 : 28                       plp
1d09 : 840f                     sty zpt
1d0b : 08                       php         ;flags after load/store sequence
1d0c : 49c3                     eor #$c3
1d0e : a8                       tay
1d0f : c40a                     cpy zp1     ;test result
1d11 : d0fe                     bne *       ;trap
1d13 : 68                       pla         ;load status
                                eor_flag 0
1d14 : 4930            >            eor #(0|$30)
                        
1d16 : cd0502                   cmp fLDx    ;test flags
1d19 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1d1b : a900            >            lda #0
                       >
1d1d : 48              >            pha         ;use stack to load status
1d1e : 28              >            plp
                        
1d1f : ac0102                   ldy abs1+1
1d22 : 08                       php         ;test stores do not alter flags
1d23 : 98                       tya
1d24 : 49c3                     eor #$c3
1d26 : a8                       tay
1d27 : 28                       plp
1d28 : 8410                     sty zpt+1
1d2a : 08                       php         ;flags after load/store sequence
1d2b : 49c3                     eor #$c3
1d2d : a8                       tay
1d2e : c40b                     cpy zp1+1   ;test result
1d30 : d0fe                     bne *       ;trap
1d32 : 68                       pla         ;load status
                                eor_flag 0
1d33 : 4930            >            eor #(0|$30)
                        
1d35 : cd0602                   cmp fLDx+1  ;test flags
1d38 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1d3a : a900            >            lda #0
                       >
1d3c : 48              >            pha         ;use stack to load status
1d3d : 28              >            plp
                        
1d3e : ac0202                   ldy abs1+2
1d41 : 08                       php         ;test stores do not alter flags
1d42 : 98                       tya
1d43 : 49c3                     eor #$c3
1d45 : a8                       tay
1d46 : 28                       plp
1d47 : 8411                     sty zpt+2
1d49 : 08                       php         ;flags after load/store sequence
1d4a : 49c3                     eor #$c3
1d4c : a8                       tay
1d4d : c40c                     cpy zp1+2   ;test result
1d4f : d0fe                     bne *       ;trap
1d51 : 68                       pla         ;load status
                                eor_flag 0
1d52 : 4930            >            eor #(0|$30)
                        
1d54 : cd0702                   cmp fLDx+2  ;test flags
1d57 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1d59 : a900            >            lda #0
                       >
1d5b : 48              >            pha         ;use stack to load status
1d5c : 28              >            plp
                        
1d5d : ac0302                   ldy abs1+3
1d60 : 08                       php         ;test stores do not alter flags
1d61 : 98                       tya
1d62 : 49c3                     eor #$c3
1d64 : a8                       tay
1d65 : 28                       plp
1d66 : 8412                     sty zpt+3
1d68 : 08                       php         ;flags after load/store sequence
1d69 : 49c3                     eor #$c3
1d6b : a8                       tay
1d6c : c40d                     cpy zp1+3   ;test result
1d6e : d0fe                     bne *       ;trap
1d70 : 68                       pla         ;load status
                                eor_flag 0
1d71 : 4930            >            eor #(0|$30)
                        
1d73 : cd0802                   cmp fLDx+3  ;test flags
1d76 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1d78 : a9ff            >            lda #$ff
                       >
1d7a : 48              >            pha         ;use stack to load status
1d7b : 28              >            plp
                        
1d7c : ac0002                   ldy abs1
1d7f : 08                       php         ;test stores do not alter flags
1d80 : 98                       tya
1d81 : 49c3                     eor #$c3
1d83 : a8                       tay
1d84 : 28                       plp
1d85 : 840f                     sty zpt
1d87 : 08                       php         ;flags after load/store sequence
1d88 : 49c3                     eor #$c3
1d8a : a8                       tay
1d8b : c50a                     cmp zp1     ;test result
1d8d : d0fe                     bne *       ;trap
1d8f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1d90 : 497d            >            eor #(lo~fnz |$30)
                        
1d92 : cd0502                   cmp fLDx    ;test flags
1d95 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1d97 : a9ff            >            lda #$ff
                       >
1d99 : 48              >            pha         ;use stack to load status
1d9a : 28              >            plp
                        
1d9b : ac0102                   ldy abs1+1
1d9e : 08                       php         ;test stores do not alter flags
1d9f : 98                       tya
1da0 : 49c3                     eor #$c3
1da2 : a8                       tay
1da3 : 28                       plp
1da4 : 8410                     sty zpt+1
1da6 : 08                       php         ;flags after load/store sequence
1da7 : 49c3                     eor #$c3
1da9 : a8                       tay
1daa : c50b                     cmp zp1+1   ;test result
1dac : d0fe                     bne *       ;trap
1dae : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1daf : 497d            >            eor #(lo~fnz |$30)
                        
1db1 : cd0602                   cmp fLDx+1  ;test flags
1db4 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1db6 : a9ff            >            lda #$ff
                       >
1db8 : 48              >            pha         ;use stack to load status
1db9 : 28              >            plp
                        
1dba : ac0202                   ldy abs1+2
1dbd : 08                       php         ;test stores do not alter flags
1dbe : 98                       tya
1dbf : 49c3                     eor #$c3
1dc1 : a8                       tay
1dc2 : 28                       plp
1dc3 : 8411                     sty zpt+2
1dc5 : 08                       php         ;flags after load/store sequence
1dc6 : 49c3                     eor #$c3
1dc8 : a8                       tay
1dc9 : c50c                     cmp zp1+2   ;test result
1dcb : d0fe                     bne *       ;trap
1dcd : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1dce : 497d            >            eor #(lo~fnz |$30)
                        
1dd0 : cd0702                   cmp fLDx+2  ;test flags
1dd3 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1dd5 : a9ff            >            lda #$ff
                       >
1dd7 : 48              >            pha         ;use stack to load status
1dd8 : 28              >            plp
                        
1dd9 : ac0302                   ldy abs1+3
1ddc : 08                       php         ;test stores do not alter flags
1ddd : 98                       tya
1dde : 49c3                     eor #$c3
1de0 : a8                       tay
1de1 : 28                       plp
1de2 : 8412                     sty zpt+3
1de4 : 08                       php         ;flags after load/store sequence
1de5 : 49c3                     eor #$c3
1de7 : a8                       tay
1de8 : c50d                     cmp zp1+3   ;test result
1dea : d0fe                     bne *       ;trap
1dec : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ded : 497d            >            eor #(lo~fnz |$30)
                        
1def : cd0802                   cmp fLDx+3  ;test flags
1df2 : d0fe                     bne *       ;trap
                        
                        
                                set_stat 0
                       >            load_flag 0
1df4 : a900            >            lda #0
                       >
1df6 : 48              >            pha         ;use stack to load status
1df7 : 28              >            plp
                        
1df8 : a0c3                     ldy #$c3
1dfa : 08                       php
1dfb : cc0002                   cpy abs1    ;test result
1dfe : d0fe                     bne *       ;trap
1e00 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1e01 : 4930            >            eor #(0    |$30)
                        
1e03 : cd0502                   cmp fLDx    ;test flags
1e06 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1e08 : a900            >            lda #0
                       >
1e0a : 48              >            pha         ;use stack to load status
1e0b : 28              >            plp
                        
1e0c : a082                     ldy #$82
1e0e : 08                       php
1e0f : cc0102                   cpy abs1+1  ;test result
1e12 : d0fe                     bne *       ;trap
1e14 : 68                       pla         ;load status
                                eor_flag 0
1e15 : 4930            >            eor #(0|$30)
                        
1e17 : cd0602                   cmp fLDx+1  ;test flags
1e1a : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1e1c : a900            >            lda #0
                       >
1e1e : 48              >            pha         ;use stack to load status
1e1f : 28              >            plp
                        
1e20 : a041                     ldy #$41
1e22 : 08                       php
1e23 : cc0202                   cpy abs1+2  ;test result
1e26 : d0fe                     bne *       ;trap
1e28 : 68                       pla         ;load status
                                eor_flag 0
1e29 : 4930            >            eor #(0|$30)
                        
1e2b : cd0702                   cmp fLDx+2  ;test flags
1e2e : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1e30 : a900            >            lda #0
                       >
1e32 : 48              >            pha         ;use stack to load status
1e33 : 28              >            plp
                        
1e34 : a000                     ldy #0
1e36 : 08                       php
1e37 : cc0302                   cpy abs1+3  ;test result
1e3a : d0fe                     bne *       ;trap
1e3c : 68                       pla         ;load status
                                eor_flag 0
1e3d : 4930            >            eor #(0|$30)
                        
1e3f : cd0802                   cmp fLDx+3  ;test flags
1e42 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1e44 : a9ff            >            lda #$ff
                       >
1e46 : 48              >            pha         ;use stack to load status
1e47 : 28              >            plp
                        
1e48 : a0c3                     ldy #$c3
1e4a : 08                       php
1e4b : cc0002                   cpy abs1     ;test result
1e4e : d0fe                     bne *       ;trap
1e50 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e51 : 497d            >            eor #(lo~fnz |$30)
                        
1e53 : cd0502                   cmp fLDx    ;test flags
1e56 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1e58 : a9ff            >            lda #$ff
                       >
1e5a : 48              >            pha         ;use stack to load status
1e5b : 28              >            plp
                        
1e5c : a082                     ldy #$82
1e5e : 08                       php
1e5f : cc0102                   cpy abs1+1   ;test result
1e62 : d0fe                     bne *       ;trap
1e64 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e65 : 497d            >            eor #(lo~fnz |$30)
                        
1e67 : cd0602                   cmp fLDx+1  ;test flags
1e6a : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1e6c : a9ff            >            lda #$ff
                       >
1e6e : 48              >            pha         ;use stack to load status
1e6f : 28              >            plp
                        
1e70 : a041                     ldy #$41
1e72 : 08                       php
1e73 : cc0202                   cpy abs1+2   ;test result
1e76 : d0fe                     bne *       ;trap
1e78 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e79 : 497d            >            eor #(lo~fnz |$30)
                        
1e7b : cd0702                   cmp fLDx+2  ;test flags
1e7e : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1e80 : a9ff            >            lda #$ff
                       >
1e82 : 48              >            pha         ;use stack to load status
1e83 : 28              >            plp
                        
1e84 : a000                     ldy #0
1e86 : 08                       php
1e87 : cc0302                   cpy abs1+3   ;test result
1e8a : d0fe                     bne *       ;trap
1e8c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e8d : 497d            >            eor #(lo~fnz |$30)
                        
1e8f : cd0802                   cmp fLDx+3  ;test flags
1e92 : d0fe                     bne *       ;trap
                        
1e94 : a000                     ldy #0
1e96 : a50f                     lda zpt
1e98 : 49c3                     eor #$c3
1e9a : c50a                     cmp zp1
1e9c : d0fe                     bne *       ;trap: store to zp   data
1e9e : 840f                     sty zpt     ;clear
1ea0 : ad3302                   lda abst
1ea3 : 49c3                     eor #$c3
1ea5 : cd0002                   cmp abs1
1ea8 : d0fe                     bne *       ;trap: store to abs   data
1eaa : 8c3302                   sty abst    ;clear
1ead : a510                     lda zpt+1
1eaf : 49c3                     eor #$c3
1eb1 : c50b                     cmp zp1+1
1eb3 : d0fe                     bne *       ;trap: store to zp+1 data
1eb5 : 8410                     sty zpt+1   ;clear
1eb7 : ad3402                   lda abst+1
1eba : 49c3                     eor #$c3
1ebc : cd0102                   cmp abs1+1
1ebf : d0fe                     bne *       ;trap: store to abs+1 data
1ec1 : 8c3402                   sty abst+1  ;clear
1ec4 : a511                     lda zpt+2
1ec6 : 49c3                     eor #$c3
1ec8 : c50c                     cmp zp1+2
1eca : d0fe                     bne *       ;trap: store to zp+2 data
1ecc : 8411                     sty zpt+2   ;clear
1ece : ad3502                   lda abst+2
1ed1 : 49c3                     eor #$c3
1ed3 : cd0202                   cmp abs1+2
1ed6 : d0fe                     bne *       ;trap: store to abs+2 data
1ed8 : 8c3502                   sty abst+2  ;clear
1edb : a512                     lda zpt+3
1edd : 49c3                     eor #$c3
1edf : c50d                     cmp zp1+3
1ee1 : d0fe                     bne *       ;trap: store to zp+3 data
1ee3 : 8412                     sty zpt+3   ;clear
1ee5 : ad3602                   lda abst+3
1ee8 : 49c3                     eor #$c3
1eea : cd0302                   cmp abs1+3
1eed : d0fe                     bne *       ;trap: store to abs+3 data
1eef : 8c3602                   sty abst+3  ;clear
                        
                        ; testing load / store accumulator LDA / STA all addressing modes
                        ; LDA / STA - zp,x / abs,x
1ef2 : a203                     ldx #3
1ef4 :                  tldax
                                set_stat 0
                       >            load_flag 0
1ef4 : a900            >            lda #0
                       >
1ef6 : 48              >            pha         ;use stack to load status
1ef7 : 28              >            plp
                        
1ef8 : b50a                     lda zp1,x
1efa : 08                       php         ;test stores do not alter flags
1efb : 49c3                     eor #$c3
1efd : 28                       plp
1efe : 9d3302                   sta abst,x
1f01 : 08                       php         ;flags after load/store sequence
1f02 : 49c3                     eor #$c3
1f04 : dd0002                   cmp abs1,x  ;test result
1f07 : d0fe                     bne *       ;trap
1f09 : 68                       pla         ;load status
                                eor_flag 0
1f0a : 4930            >            eor #(0|$30)
                        
1f0c : dd0502                   cmp fLDx,x  ;test flags
1f0f : d0fe                     bne *       ;trap
1f11 : ca                       dex
1f12 : 10e0                     bpl tldax
                        
1f14 : a203                     ldx #3
1f16 :                  tldax1
                                set_stat $ff
                       >            load_flag $ff
1f16 : a9ff            >            lda #$ff
                       >
1f18 : 48              >            pha         ;use stack to load status
1f19 : 28              >            plp
                        
1f1a : b50a                     lda zp1,x
1f1c : 08                       php         ;test stores do not alter flags
1f1d : 49c3                     eor #$c3
1f1f : 28                       plp
1f20 : 9d3302                   sta abst,x
1f23 : 08                       php         ;flags after load/store sequence
1f24 : 49c3                     eor #$c3
1f26 : dd0002                   cmp abs1,x   ;test result
1f29 : d0fe                     bne *       ;trap
1f2b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f2c : 497d            >            eor #(lo~fnz |$30)
                        
1f2e : dd0502                   cmp fLDx,x  ;test flags
1f31 : d0fe                     bne *       ;trap
1f33 : ca                       dex
1f34 : 10e0                     bpl tldax1
                        
1f36 : a203                     ldx #3
1f38 :                  tldax2
                                set_stat 0
                       >            load_flag 0
1f38 : a900            >            lda #0
                       >
1f3a : 48              >            pha         ;use stack to load status
1f3b : 28              >            plp
                        
1f3c : bd0002                   lda abs1,x
1f3f : 08                       php         ;test stores do not alter flags
1f40 : 49c3                     eor #$c3
1f42 : 28                       plp
1f43 : 950f                     sta zpt,x
1f45 : 08                       php         ;flags after load/store sequence
1f46 : 49c3                     eor #$c3
1f48 : d50a                     cmp zp1,x   ;test result
1f4a : d0fe                     bne *       ;trap
1f4c : 68                       pla         ;load status
                                eor_flag 0
1f4d : 4930            >            eor #(0|$30)
                        
1f4f : dd0502                   cmp fLDx,x  ;test flags
1f52 : d0fe                     bne *       ;trap
1f54 : ca                       dex
1f55 : 10e1                     bpl tldax2
                        
1f57 : a203                     ldx #3
1f59 :                  tldax3
                                set_stat $ff
                       >            load_flag $ff
1f59 : a9ff            >            lda #$ff
                       >
1f5b : 48              >            pha         ;use stack to load status
1f5c : 28              >            plp
                        
1f5d : bd0002                   lda abs1,x
1f60 : 08                       php         ;test stores do not alter flags
1f61 : 49c3                     eor #$c3
1f63 : 28                       plp
1f64 : 950f                     sta zpt,x
1f66 : 08                       php         ;flags after load/store sequence
1f67 : 49c3                     eor #$c3
1f69 : d50a                     cmp zp1,x   ;test result
1f6b : d0fe                     bne *       ;trap
1f6d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f6e : 497d            >            eor #(lo~fnz |$30)
                        
1f70 : dd0502                   cmp fLDx,x  ;test flags
1f73 : d0fe                     bne *       ;trap
1f75 : ca                       dex
1f76 : 10e1                     bpl tldax3
                        
1f78 : a203                     ldx #3      ;testing store result
1f7a : a000                     ldy #0
1f7c : b50f             tstax   lda zpt,x
1f7e : 49c3                     eor #$c3
1f80 : d50a                     cmp zp1,x
1f82 : d0fe                     bne *       ;trap: store to zp,x data
1f84 : 940f                     sty zpt,x   ;clear
1f86 : bd3302                   lda abst,x
1f89 : 49c3                     eor #$c3
1f8b : dd0002                   cmp abs1,x
1f8e : d0fe                     bne *       ;trap: store to abs,x data
1f90 : 8a                       txa
1f91 : 9d3302                   sta abst,x  ;clear
1f94 : ca                       dex
1f95 : 10e5                     bpl tstax
                        
                        ; LDA / STA - (zp),y / abs,y / (zp,x)
1f97 : a003                     ldy #3
1f99 :                  tlday
                                set_stat 0
                       >            load_flag 0
1f99 : a900            >            lda #0
                       >
1f9b : 48              >            pha         ;use stack to load status
1f9c : 28              >            plp
                        
1f9d : b120                     lda (ind1),y
1f9f : 08                       php         ;test stores do not alter flags
1fa0 : 49c3                     eor #$c3
1fa2 : 28                       plp
1fa3 : 993302                   sta abst,y
1fa6 : 08                       php         ;flags after load/store sequence
1fa7 : 49c3                     eor #$c3
1fa9 : d90002                   cmp abs1,y  ;test result
1fac : d0fe                     bne *       ;trap
1fae : 68                       pla         ;load status
                                eor_flag 0
1faf : 4930            >            eor #(0|$30)
                        
1fb1 : d90502                   cmp fLDx,y  ;test flags
1fb4 : d0fe                     bne *       ;trap
1fb6 : 88                       dey
1fb7 : 10e0                     bpl tlday
                        
1fb9 : a003                     ldy #3
1fbb :                  tlday1
                                set_stat $ff
                       >            load_flag $ff
1fbb : a9ff            >            lda #$ff
                       >
1fbd : 48              >            pha         ;use stack to load status
1fbe : 28              >            plp
                        
1fbf : b120                     lda (ind1),y
1fc1 : 08                       php         ;test stores do not alter flags
1fc2 : 49c3                     eor #$c3
1fc4 : 28                       plp
1fc5 : 993302                   sta abst,y
1fc8 : 08                       php         ;flags after load/store sequence
1fc9 : 49c3                     eor #$c3
1fcb : d90002                   cmp abs1,y  ;test result
1fce : d0fe                     bne *       ;trap
1fd0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1fd1 : 497d            >            eor #(lo~fnz |$30)
                        
1fd3 : d90502                   cmp fLDx,y  ;test flags
1fd6 : d0fe                     bne *       ;trap
1fd8 : 88                       dey
1fd9 : 10e0                     bpl tlday1
                        
1fdb : a003                     ldy #3      ;testing store result
1fdd : a200                     ldx #0
1fdf : b93302           tstay   lda abst,y
1fe2 : 49c3                     eor #$c3
1fe4 : d90002                   cmp abs1,y
1fe7 : d0fe                     bne *       ;trap: store to abs data
1fe9 : 8a                       txa
1fea : 993302                   sta abst,y  ;clear
1fed : 88                       dey
1fee : 10ef                     bpl tstay
                        
1ff0 : a003                     ldy #3
1ff2 :                  tlday2
                                set_stat 0
                       >            load_flag 0
1ff2 : a900            >            lda #0
                       >
1ff4 : 48              >            pha         ;use stack to load status
1ff5 : 28              >            plp
                        
1ff6 : b90002                   lda abs1,y
1ff9 : 08                       php         ;test stores do not alter flags
1ffa : 49c3                     eor #$c3
1ffc : 28                       plp
1ffd : 912c                     sta (indt),y
1fff : 08                       php         ;flags after load/store sequence
2000 : 49c3                     eor #$c3
2002 : d120                     cmp (ind1),y   ;test result
2004 : d0fe                     bne *       ;trap
2006 : 68                       pla         ;load status
                                eor_flag $30    ;always on bits
2007 : 4930            >            eor #($30    |$30)
                        
2009 : d90502                   cmp fLDx,y  ;test flags
200c : d0fe                     bne *       ;trap
200e : 88                       dey
200f : 10e1                     bpl tlday2
                        
2011 : a003                     ldy #3
2013 :                  tlday3
                                set_stat $ff
                       >            load_flag $ff
2013 : a9ff            >            lda #$ff
                       >
2015 : 48              >            pha         ;use stack to load status
2016 : 28              >            plp
                        
2017 : b90002                   lda abs1,y
201a : 08                       php         ;test stores do not alter flags
201b : 49c3                     eor #$c3
201d : 28                       plp
201e : 912c                     sta (indt),y
2020 : 08                       php         ;flags after load/store sequence
2021 : 49c3                     eor #$c3
2023 : d120                     cmp (ind1),y   ;test result
2025 : d0fe                     bne *       ;trap
2027 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2028 : 497d            >            eor #(lo~fnz |$30)
                        
202a : d90502                   cmp fLDx,y  ;test flags
202d : d0fe                     bne *       ;trap
202f : 88                       dey
2030 : 10e1                     bpl tlday3
                        
2032 : a003                     ldy #3      ;testing store result
2034 : a200                     ldx #0
2036 : b93302           tstay1  lda abst,y
2039 : 49c3                     eor #$c3
203b : d90002                   cmp abs1,y
203e : d0fe                     bne *       ;trap: store to abs data
2040 : 8a                       txa
2041 : 993302                   sta abst,y  ;clear
2044 : 88                       dey
2045 : 10ef                     bpl tstay1
                        
2047 : a206                     ldx #6
2049 : a003                     ldy #3
204b :                  tldax4
                                set_stat 0
                       >            load_flag 0
204b : a900            >            lda #0
                       >
204d : 48              >            pha         ;use stack to load status
204e : 28              >            plp
                        
204f : a120                     lda (ind1,x)
2051 : 08                       php         ;test stores do not alter flags
2052 : 49c3                     eor #$c3
2054 : 28                       plp
2055 : 812c                     sta (indt,x)
2057 : 08                       php         ;flags after load/store sequence
2058 : 49c3                     eor #$c3
205a : d90002                   cmp abs1,y  ;test result
205d : d0fe                     bne *       ;trap
205f : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
2060 : 4930            >            eor #(0    |$30)
                        
2062 : d90502                   cmp fLDx,y  ;test flags
2065 : d0fe                     bne *       ;trap
2067 : ca                       dex
2068 : ca                       dex
2069 : 88                       dey
206a : 10df                     bpl tldax4
                        
206c : a206                     ldx #6
206e : a003                     ldy #3
2070 :                  tldax5
                                set_stat $ff
                       >            load_flag $ff
2070 : a9ff            >            lda #$ff
                       >
2072 : 48              >            pha         ;use stack to load status
2073 : 28              >            plp
                        
2074 : a120                     lda (ind1,x)
2076 : 08                       php         ;test stores do not alter flags
2077 : 49c3                     eor #$c3
2079 : 28                       plp
207a : 812c                     sta (indt,x)
207c : 08                       php         ;flags after load/store sequence
207d : 49c3                     eor #$c3
207f : d90002                   cmp abs1,y  ;test result
2082 : d0fe                     bne *       ;trap
2084 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2085 : 497d            >            eor #(lo~fnz |$30)
                        
2087 : d90502                   cmp fLDx,y  ;test flags
208a : d0fe                     bne *       ;trap
208c : ca                       dex
208d : ca                       dex
208e : 88                       dey
208f : 10df                     bpl tldax5
                        
2091 : a003                     ldy #3      ;testing store result
2093 : a200                     ldx #0
2095 : b93302           tstay2  lda abst,y
2098 : 49c3                     eor #$c3
209a : d90002                   cmp abs1,y
209d : d0fe                     bne *       ;trap: store to abs data
209f : 8a                       txa
20a0 : 993302                   sta abst,y  ;clear
20a3 : 88                       dey
20a4 : 10ef                     bpl tstay2
                        
                        ; indexed wraparound test (only zp should wrap)
20a6 : a2fd                     ldx #3+$fa
20a8 : b510             tldax6  lda zp1-$fa&$ff,x   ;wrap on indexed zp
20aa : 9d3901                   sta abst-$fa,x      ;no STX abs,x!
20ad : ca                       dex
20ae : e0fa                     cpx #$fa
20b0 : b0f6                     bcs tldax6
20b2 : a2fd                     ldx #3+$fa
20b4 : bd0601           tldax7  lda abs1-$fa,x      ;no wrap on indexed abs
20b7 : 9515                     sta zpt-$fa&$ff,x
20b9 : ca                       dex
20ba : e0fa                     cpx #$fa
20bc : b0f6                     bcs tldax7
                        
20be : a203                     ldx #3      ;testing wraparound result
20c0 : a000                     ldy #0
20c2 : b50f             tstax1  lda zpt,x
20c4 : d50a                     cmp zp1,x
20c6 : d0fe                     bne *       ;trap: store to zp,x data
20c8 : 940f                     sty zpt,x   ;clear
20ca : bd3302                   lda abst,x
20cd : dd0002                   cmp abs1,x
20d0 : d0fe                     bne *       ;trap: store to abs,x data
20d2 : 8a                       txa
20d3 : 9d3302                   sta abst,x  ;clear
20d6 : ca                       dex
20d7 : 10e9                     bpl tstax1
                        
20d9 : a0fb                     ldy #3+$f8
20db : a2fe                     ldx #6+$f8
20dd : a128             tlday4  lda (ind1-$f8&$ff,x) ;wrap on indexed zp indirect
20df : 993b01                   sta abst-$f8,y
20e2 : ca                       dex
20e3 : ca                       dex
20e4 : 88                       dey
20e5 : c0f8                     cpy #$f8
20e7 : b0f4                     bcs tlday4
20e9 : a003                     ldy #3      ;testing wraparound result
20eb : a200                     ldx #0
20ed : b93302           tstay4  lda abst,y
20f0 : d90002                   cmp abs1,y
20f3 : d0fe                     bne *       ;trap: store to abs data
20f5 : 8a                       txa
20f6 : 993302                   sta abst,y  ;clear
20f9 : 88                       dey
20fa : 10f1                     bpl tstay4
                        
20fc : a0fb                     ldy #3+$f8
20fe : b90801           tlday5  lda abs1-$f8,y  ;no wrap on indexed abs
2101 : 9134                     sta (inwt),y
2103 : 88                       dey
2104 : c0f8                     cpy #$f8
2106 : b0f6                     bcs tlday5
2108 : a003                     ldy #3      ;testing wraparound result
210a : a200                     ldx #0
210c : b93302           tstay5  lda abst,y
210f : d90002                   cmp abs1,y
2112 : d0fe                     bne *       ;trap: store to abs data
2114 : 8a                       txa
2115 : 993302                   sta abst,y  ;clear
2118 : 88                       dey
2119 : 10f1                     bpl tstay5
                        
211b : a0fb                     ldy #3+$f8
211d : a2fe                     ldx #6+$f8
211f : b12a             tlday6  lda (inw1),y    ;no wrap on zp indirect indexed
2121 : 8134                     sta (indt-$f8&$ff,x)
2123 : ca                       dex
2124 : ca                       dex
2125 : 88                       dey
2126 : c0f8                     cpy #$f8
2128 : b0f5                     bcs tlday6
212a : a003                     ldy #3      ;testing wraparound result
212c : a200                     ldx #0
212e : b93302           tstay6  lda abst,y
2131 : d90002                   cmp abs1,y
2134 : d0fe                     bne *       ;trap: store to abs data
2136 : 8a                       txa
2137 : 993302                   sta abst,y  ;clear
213a : 88                       dey
213b : 10f1                     bpl tstay6
                        
                        ; LDA / STA - zp / abs / #
                                set_stat 0
                       >            load_flag 0
213d : a900            >            lda #0
                       >
213f : 48              >            pha         ;use stack to load status
2140 : 28              >            plp
                        
2141 : a50a                     lda zp1
2143 : 08                       php         ;test stores do not alter flags
2144 : 49c3                     eor #$c3
2146 : 28                       plp
2147 : 8d3302                   sta abst
214a : 08                       php         ;flags after load/store sequence
214b : 49c3                     eor #$c3
214d : c9c3                     cmp #$c3    ;test result
214f : d0fe                     bne *       ;trap
2151 : 68                       pla         ;load status
                                eor_flag 0
2152 : 4930            >            eor #(0|$30)
                        
2154 : cd0502                   cmp fLDx    ;test flags
2157 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2159 : a900            >            lda #0
                       >
215b : 48              >            pha         ;use stack to load status
215c : 28              >            plp
                        
215d : a50b                     lda zp1+1
215f : 08                       php         ;test stores do not alter flags
2160 : 49c3                     eor #$c3
2162 : 28                       plp
2163 : 8d3402                   sta abst+1
2166 : 08                       php         ;flags after load/store sequence
2167 : 49c3                     eor #$c3
2169 : c982                     cmp #$82    ;test result
216b : d0fe                     bne *       ;trap
216d : 68                       pla         ;load status
                                eor_flag 0
216e : 4930            >            eor #(0|$30)
                        
2170 : cd0602                   cmp fLDx+1  ;test flags
2173 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2175 : a900            >            lda #0
                       >
2177 : 48              >            pha         ;use stack to load status
2178 : 28              >            plp
                        
2179 : a50c                     lda zp1+2
217b : 08                       php         ;test stores do not alter flags
217c : 49c3                     eor #$c3
217e : 28                       plp
217f : 8d3502                   sta abst+2
2182 : 08                       php         ;flags after load/store sequence
2183 : 49c3                     eor #$c3
2185 : c941                     cmp #$41    ;test result
2187 : d0fe                     bne *       ;trap
2189 : 68                       pla         ;load status
                                eor_flag 0
218a : 4930            >            eor #(0|$30)
                        
218c : cd0702                   cmp fLDx+2  ;test flags
218f : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2191 : a900            >            lda #0
                       >
2193 : 48              >            pha         ;use stack to load status
2194 : 28              >            plp
                        
2195 : a50d                     lda zp1+3
2197 : 08                       php         ;test stores do not alter flags
2198 : 49c3                     eor #$c3
219a : 28                       plp
219b : 8d3602                   sta abst+3
219e : 08                       php         ;flags after load/store sequence
219f : 49c3                     eor #$c3
21a1 : c900                     cmp #0      ;test result
21a3 : d0fe                     bne *       ;trap
21a5 : 68                       pla         ;load status
                                eor_flag 0
21a6 : 4930            >            eor #(0|$30)
                        
21a8 : cd0802                   cmp fLDx+3  ;test flags
21ab : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21ad : a9ff            >            lda #$ff
                       >
21af : 48              >            pha         ;use stack to load status
21b0 : 28              >            plp
                        
21b1 : a50a                     lda zp1
21b3 : 08                       php         ;test stores do not alter flags
21b4 : 49c3                     eor #$c3
21b6 : 28                       plp
21b7 : 8d3302                   sta abst
21ba : 08                       php         ;flags after load/store sequence
21bb : 49c3                     eor #$c3
21bd : c9c3                     cmp #$c3    ;test result
21bf : d0fe                     bne *       ;trap
21c1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21c2 : 497d            >            eor #(lo~fnz |$30)
                        
21c4 : cd0502                   cmp fLDx    ;test flags
21c7 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21c9 : a9ff            >            lda #$ff
                       >
21cb : 48              >            pha         ;use stack to load status
21cc : 28              >            plp
                        
21cd : a50b                     lda zp1+1
21cf : 08                       php         ;test stores do not alter flags
21d0 : 49c3                     eor #$c3
21d2 : 28                       plp
21d3 : 8d3402                   sta abst+1
21d6 : 08                       php         ;flags after load/store sequence
21d7 : 49c3                     eor #$c3
21d9 : c982                     cmp #$82    ;test result
21db : d0fe                     bne *       ;trap
21dd : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21de : 497d            >            eor #(lo~fnz |$30)
                        
21e0 : cd0602                   cmp fLDx+1  ;test flags
21e3 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21e5 : a9ff            >            lda #$ff
                       >
21e7 : 48              >            pha         ;use stack to load status
21e8 : 28              >            plp
                        
21e9 : a50c                     lda zp1+2
21eb : 08                       php         ;test stores do not alter flags
21ec : 49c3                     eor #$c3
21ee : 28                       plp
21ef : 8d3502                   sta abst+2
21f2 : 08                       php         ;flags after load/store sequence
21f3 : 49c3                     eor #$c3
21f5 : c941                     cmp #$41    ;test result
21f7 : d0fe                     bne *       ;trap
21f9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21fa : 497d            >            eor #(lo~fnz |$30)
                        
21fc : cd0702                   cmp fLDx+2  ;test flags
21ff : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2201 : a9ff            >            lda #$ff
                       >
2203 : 48              >            pha         ;use stack to load status
2204 : 28              >            plp
                        
2205 : a50d                     lda zp1+3
2207 : 08                       php         ;test stores do not alter flags
2208 : 49c3                     eor #$c3
220a : 28                       plp
220b : 8d3602                   sta abst+3
220e : 08                       php         ;flags after load/store sequence
220f : 49c3                     eor #$c3
2211 : c900                     cmp #0      ;test result
2213 : d0fe                     bne *       ;trap
2215 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2216 : 497d            >            eor #(lo~fnz |$30)
                        
2218 : cd0802                   cmp fLDx+3  ;test flags
221b : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
221d : a900            >            lda #0
                       >
221f : 48              >            pha         ;use stack to load status
2220 : 28              >            plp
                        
2221 : ad0002                   lda abs1
2224 : 08                       php         ;test stores do not alter flags
2225 : 49c3                     eor #$c3
2227 : 28                       plp
2228 : 850f                     sta zpt
222a : 08                       php         ;flags after load/store sequence
222b : 49c3                     eor #$c3
222d : c50a                     cmp zp1     ;test result
222f : d0fe                     bne *       ;trap
2231 : 68                       pla         ;load status
                                eor_flag 0
2232 : 4930            >            eor #(0|$30)
                        
2234 : cd0502                   cmp fLDx    ;test flags
2237 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2239 : a900            >            lda #0
                       >
223b : 48              >            pha         ;use stack to load status
223c : 28              >            plp
                        
223d : ad0102                   lda abs1+1
2240 : 08                       php         ;test stores do not alter flags
2241 : 49c3                     eor #$c3
2243 : 28                       plp
2244 : 8510                     sta zpt+1
2246 : 08                       php         ;flags after load/store sequence
2247 : 49c3                     eor #$c3
2249 : c50b                     cmp zp1+1   ;test result
224b : d0fe                     bne *       ;trap
224d : 68                       pla         ;load status
                                eor_flag 0
224e : 4930            >            eor #(0|$30)
                        
2250 : cd0602                   cmp fLDx+1  ;test flags
2253 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2255 : a900            >            lda #0
                       >
2257 : 48              >            pha         ;use stack to load status
2258 : 28              >            plp
                        
2259 : ad0202                   lda abs1+2
225c : 08                       php         ;test stores do not alter flags
225d : 49c3                     eor #$c3
225f : 28                       plp
2260 : 8511                     sta zpt+2
2262 : 08                       php         ;flags after load/store sequence
2263 : 49c3                     eor #$c3
2265 : c50c                     cmp zp1+2   ;test result
2267 : d0fe                     bne *       ;trap
2269 : 68                       pla         ;load status
                                eor_flag 0
226a : 4930            >            eor #(0|$30)
                        
226c : cd0702                   cmp fLDx+2  ;test flags
226f : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2271 : a900            >            lda #0
                       >
2273 : 48              >            pha         ;use stack to load status
2274 : 28              >            plp
                        
2275 : ad0302                   lda abs1+3
2278 : 08                       php         ;test stores do not alter flags
2279 : 49c3                     eor #$c3
227b : 28                       plp
227c : 8512                     sta zpt+3
227e : 08                       php         ;flags after load/store sequence
227f : 49c3                     eor #$c3
2281 : c50d                     cmp zp1+3   ;test result
2283 : d0fe                     bne *       ;trap
2285 : 68                       pla         ;load status
                                eor_flag 0
2286 : 4930            >            eor #(0|$30)
                        
2288 : cd0802                   cmp fLDx+3  ;test flags
228b : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
228d : a9ff            >            lda #$ff
                       >
228f : 48              >            pha         ;use stack to load status
2290 : 28              >            plp
                        
2291 : ad0002                   lda abs1
2294 : 08                       php         ;test stores do not alter flags
2295 : 49c3                     eor #$c3
2297 : 28                       plp
2298 : 850f                     sta zpt
229a : 08                       php         ;flags after load/store sequence
229b : 49c3                     eor #$c3
229d : c50a                     cmp zp1     ;test result
229f : d0fe                     bne *       ;trap
22a1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
22a2 : 497d            >            eor #(lo~fnz |$30)
                        
22a4 : cd0502                   cmp fLDx    ;test flags
22a7 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
22a9 : a9ff            >            lda #$ff
                       >
22ab : 48              >            pha         ;use stack to load status
22ac : 28              >            plp
                        
22ad : ad0102                   lda abs1+1
22b0 : 08                       php         ;test stores do not alter flags
22b1 : 49c3                     eor #$c3
22b3 : 28                       plp
22b4 : 8510                     sta zpt+1
22b6 : 08                       php         ;flags after load/store sequence
22b7 : 49c3                     eor #$c3
22b9 : c50b                     cmp zp1+1   ;test result
22bb : d0fe                     bne *       ;trap
22bd : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
22be : 497d            >            eor #(lo~fnz |$30)
                        
22c0 : cd0602                   cmp fLDx+1  ;test flags
22c3 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
22c5 : a9ff            >            lda #$ff
                       >
22c7 : 48              >            pha         ;use stack to load status
22c8 : 28              >            plp
                        
22c9 : ad0202                   lda abs1+2
22cc : 08                       php         ;test stores do not alter flags
22cd : 49c3                     eor #$c3
22cf : 28                       plp
22d0 : 8511                     sta zpt+2
22d2 : 08                       php         ;flags after load/store sequence
22d3 : 49c3                     eor #$c3
22d5 : c50c                     cmp zp1+2   ;test result
22d7 : d0fe                     bne *       ;trap
22d9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
22da : 497d            >            eor #(lo~fnz |$30)
                        
22dc : cd0702                   cmp fLDx+2  ;test flags
22df : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
22e1 : a9ff            >            lda #$ff
                       >
22e3 : 48              >            pha         ;use stack to load status
22e4 : 28              >            plp
                        
22e5 : ad0302                   lda abs1+3
22e8 : 08                       php         ;test stores do not alter flags
22e9 : 49c3                     eor #$c3
22eb : 28                       plp
22ec : 8512                     sta zpt+3
22ee : 08                       php         ;flags after load/store sequence
22ef : 49c3                     eor #$c3
22f1 : c50d                     cmp zp1+3   ;test result
22f3 : d0fe                     bne *       ;trap
22f5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
22f6 : 497d            >            eor #(lo~fnz |$30)
                        
22f8 : cd0802                   cmp fLDx+3  ;test flags
22fb : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
22fd : a900            >            lda #0
                       >
22ff : 48              >            pha         ;use stack to load status
2300 : 28              >            plp
                        
2301 : a9c3                     lda #$c3
2303 : 08                       php
2304 : cd0002                   cmp abs1    ;test result
2307 : d0fe                     bne *       ;trap
2309 : 68                       pla         ;load status
                                eor_flag 0
230a : 4930            >            eor #(0|$30)
                        
230c : cd0502                   cmp fLDx    ;test flags
230f : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2311 : a900            >            lda #0
                       >
2313 : 48              >            pha         ;use stack to load status
2314 : 28              >            plp
                        
2315 : a982                     lda #$82
2317 : 08                       php
2318 : cd0102                   cmp abs1+1  ;test result
231b : d0fe                     bne *       ;trap
231d : 68                       pla         ;load status
                                eor_flag 0
231e : 4930            >            eor #(0|$30)
                        
2320 : cd0602                   cmp fLDx+1  ;test flags
2323 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2325 : a900            >            lda #0
                       >
2327 : 48              >            pha         ;use stack to load status
2328 : 28              >            plp
                        
2329 : a941                     lda #$41
232b : 08                       php
232c : cd0202                   cmp abs1+2  ;test result
232f : d0fe                     bne *       ;trap
2331 : 68                       pla         ;load status
                                eor_flag 0
2332 : 4930            >            eor #(0|$30)
                        
2334 : cd0702                   cmp fLDx+2  ;test flags
2337 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2339 : a900            >            lda #0
                       >
233b : 48              >            pha         ;use stack to load status
233c : 28              >            plp
                        
233d : a900                     lda #0
233f : 08                       php
2340 : cd0302                   cmp abs1+3  ;test result
2343 : d0fe                     bne *       ;trap
2345 : 68                       pla         ;load status
                                eor_flag 0
2346 : 4930            >            eor #(0|$30)
                        
2348 : cd0802                   cmp fLDx+3  ;test flags
234b : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
234d : a9ff            >            lda #$ff
                       >
234f : 48              >            pha         ;use stack to load status
2350 : 28              >            plp
                        
2351 : a9c3                     lda #$c3
2353 : 08                       php
2354 : cd0002                   cmp abs1    ;test result
2357 : d0fe                     bne *       ;trap
2359 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
235a : 497d            >            eor #(lo~fnz |$30)
                        
235c : cd0502                   cmp fLDx    ;test flags
235f : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2361 : a9ff            >            lda #$ff
                       >
2363 : 48              >            pha         ;use stack to load status
2364 : 28              >            plp
                        
2365 : a982                     lda #$82
2367 : 08                       php
2368 : cd0102                   cmp abs1+1  ;test result
236b : d0fe                     bne *       ;trap
236d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
236e : 497d            >            eor #(lo~fnz |$30)
                        
2370 : cd0602                   cmp fLDx+1  ;test flags
2373 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2375 : a9ff            >            lda #$ff
                       >
2377 : 48              >            pha         ;use stack to load status
2378 : 28              >            plp
                        
2379 : a941                     lda #$41
237b : 08                       php
237c : cd0202                   cmp abs1+2  ;test result
237f : d0fe                     bne *       ;trap
2381 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2382 : 497d            >            eor #(lo~fnz |$30)
                        
2384 : cd0702                   cmp fLDx+2  ;test flags
2387 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2389 : a9ff            >            lda #$ff
                       >
238b : 48              >            pha         ;use stack to load status
238c : 28              >            plp
                        
238d : a900                     lda #0
238f : 08                       php
2390 : cd0302                   cmp abs1+3  ;test result
2393 : d0fe                     bne *       ;trap
2395 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2396 : 497d            >            eor #(lo~fnz |$30)
                        
2398 : cd0802                   cmp fLDx+3  ;test flags
239b : d0fe                     bne *       ;trap
                        
239d : a200                     ldx #0
239f : a50f                     lda zpt
23a1 : 49c3                     eor #$c3
23a3 : c50a                     cmp zp1
23a5 : d0fe                     bne *       ;trap: store to zp data
23a7 : 860f                     stx zpt     ;clear
23a9 : ad3302                   lda abst
23ac : 49c3                     eor #$c3
23ae : cd0002                   cmp abs1
23b1 : d0fe                     bne *       ;trap: store to abs data
23b3 : 8e3302                   stx abst    ;clear
23b6 : a510                     lda zpt+1
23b8 : 49c3                     eor #$c3
23ba : c50b                     cmp zp1+1
23bc : d0fe                     bne *       ;trap: store to zp data
23be : 8610                     stx zpt+1   ;clear
23c0 : ad3402                   lda abst+1
23c3 : 49c3                     eor #$c3
23c5 : cd0102                   cmp abs1+1
23c8 : d0fe                     bne *       ;trap: store to abs data
23ca : 8e3402                   stx abst+1  ;clear
23cd : a511                     lda zpt+2
23cf : 49c3                     eor #$c3
23d1 : c50c                     cmp zp1+2
23d3 : d0fe                     bne *       ;trap: store to zp data
23d5 : 8611                     stx zpt+2   ;clear
23d7 : ad3502                   lda abst+2
23da : 49c3                     eor #$c3
23dc : cd0202                   cmp abs1+2
23df : d0fe                     bne *       ;trap: store to abs data
23e1 : 8e3502                   stx abst+2  ;clear
23e4 : a512                     lda zpt+3
23e6 : 49c3                     eor #$c3
23e8 : c50d                     cmp zp1+3
23ea : d0fe                     bne *       ;trap: store to zp data
23ec : 8612                     stx zpt+3   ;clear
23ee : ad3602                   lda abst+3
23f1 : 49c3                     eor #$c3
23f3 : cd0302                   cmp abs1+3
23f6 : d0fe                     bne *       ;trap: store to abs data
23f8 : 8e3602                   stx abst+3  ;clear
                        
                        ; testing bit test & compares BIT CPX CPY CMP all addressing modes
                        ; BIT - zp / abs
                                set_a $ff,0
                       >            load_flag 0
23fb : a900            >            lda #0
                       >
23fd : 48              >            pha         ;use stack to load status
23fe : a9ff            >            lda #$ff     ;precharge accu
2400 : 28              >            plp
                        
2401 : 240d                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,fz
2403 : 08              >            php         ;save flags
2404 : 08              >            php
2405 : c9ff            >            cmp #$ff     ;test result
2407 : d0fe            >            bne *       ;trap
2409 : 68              >            pla         ;load status
                       >            cmp_flag fz
240a : c932            >            cmp #(fz|$30)&$ff
                       >
240c : d0fe            >            bne *       ;trap
240e : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
240f : a900            >            lda #0
                       >
2411 : 48              >            pha         ;use stack to load status
2412 : a901            >            lda #1     ;precharge accu
2414 : 28              >            plp
                        
2415 : 240c                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
2417 : 08              >            php         ;save flags
2418 : 08              >            php
2419 : c901            >            cmp #1     ;test result
241b : d0fe            >            bne *       ;trap
241d : 68              >            pla         ;load status
                       >            cmp_flag fv
241e : c970            >            cmp #(fv|$30)&$ff
                       >
2420 : d0fe            >            bne *       ;trap
2422 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2423 : a900            >            lda #0
                       >
2425 : 48              >            pha         ;use stack to load status
2426 : a901            >            lda #1     ;precharge accu
2428 : 28              >            plp
                        
2429 : 240b                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
242b : 08              >            php         ;save flags
242c : 08              >            php
242d : c901            >            cmp #1     ;test result
242f : d0fe            >            bne *       ;trap
2431 : 68              >            pla         ;load status
                       >            cmp_flag fnz
2432 : c9b2            >            cmp #(fnz|$30)&$ff
                       >
2434 : d0fe            >            bne *       ;trap
2436 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2437 : a900            >            lda #0
                       >
2439 : 48              >            pha         ;use stack to load status
243a : a901            >            lda #1     ;precharge accu
243c : 28              >            plp
                        
243d : 240a                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
243f : 08              >            php         ;save flags
2440 : 08              >            php
2441 : c901            >            cmp #1     ;test result
2443 : d0fe            >            bne *       ;trap
2445 : 68              >            pla         ;load status
                       >            cmp_flag fnv
2446 : c9f0            >            cmp #(fnv|$30)&$ff
                       >
2448 : d0fe            >            bne *       ;trap
244a : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
244b : a9ff            >            lda #$ff
                       >
244d : 48              >            pha         ;use stack to load status
244e : a9ff            >            lda #$ff     ;precharge accu
2450 : 28              >            plp
                        
2451 : 240d                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
2453 : 08              >            php         ;save flags
2454 : 08              >            php
2455 : c9ff            >            cmp #$ff     ;test result
2457 : d0fe            >            bne *       ;trap
2459 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv
245a : c93f            >            cmp #(~fnv|$30)&$ff
                       >
245c : d0fe            >            bne *       ;trap
245e : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
245f : a9ff            >            lda #$ff
                       >
2461 : 48              >            pha         ;use stack to load status
2462 : a901            >            lda #1     ;precharge accu
2464 : 28              >            plp
                        
2465 : 240c                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
2467 : 08              >            php         ;save flags
2468 : 08              >            php
2469 : c901            >            cmp #1     ;test result
246b : d0fe            >            bne *       ;trap
246d : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
246e : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2470 : d0fe            >            bne *       ;trap
2472 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2473 : a9ff            >            lda #$ff
                       >
2475 : 48              >            pha         ;use stack to load status
2476 : a901            >            lda #1     ;precharge accu
2478 : 28              >            plp
                        
2479 : 240b                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
247b : 08              >            php         ;save flags
247c : 08              >            php
247d : c901            >            cmp #1     ;test result
247f : d0fe            >            bne *       ;trap
2481 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
2482 : c9bf            >            cmp #(~fv|$30)&$ff
                       >
2484 : d0fe            >            bne *       ;trap
2486 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2487 : a9ff            >            lda #$ff
                       >
2489 : 48              >            pha         ;use stack to load status
248a : a901            >            lda #1     ;precharge accu
248c : 28              >            plp
                        
248d : 240a                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
248f : 08              >            php         ;save flags
2490 : 08              >            php
2491 : c901            >            cmp #1     ;test result
2493 : d0fe            >            bne *       ;trap
2495 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
2496 : c9fd            >            cmp #(~fz|$30)&$ff
                       >
2498 : d0fe            >            bne *       ;trap
249a : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,0
                       >            load_flag 0
249b : a900            >            lda #0
                       >
249d : 48              >            pha         ;use stack to load status
249e : a9ff            >            lda #$ff     ;precharge accu
24a0 : 28              >            plp
                        
24a1 : 2c0302                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,fz
24a4 : 08              >            php         ;save flags
24a5 : 08              >            php
24a6 : c9ff            >            cmp #$ff     ;test result
24a8 : d0fe            >            bne *       ;trap
24aa : 68              >            pla         ;load status
                       >            cmp_flag fz
24ab : c932            >            cmp #(fz|$30)&$ff
                       >
24ad : d0fe            >            bne *       ;trap
24af : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
24b0 : a900            >            lda #0
                       >
24b2 : 48              >            pha         ;use stack to load status
24b3 : a901            >            lda #1     ;precharge accu
24b5 : 28              >            plp
                        
24b6 : 2c0202                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
24b9 : 08              >            php         ;save flags
24ba : 08              >            php
24bb : c901            >            cmp #1     ;test result
24bd : d0fe            >            bne *       ;trap
24bf : 68              >            pla         ;load status
                       >            cmp_flag fv
24c0 : c970            >            cmp #(fv|$30)&$ff
                       >
24c2 : d0fe            >            bne *       ;trap
24c4 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
24c5 : a900            >            lda #0
                       >
24c7 : 48              >            pha         ;use stack to load status
24c8 : a901            >            lda #1     ;precharge accu
24ca : 28              >            plp
                        
24cb : 2c0102                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
24ce : 08              >            php         ;save flags
24cf : 08              >            php
24d0 : c901            >            cmp #1     ;test result
24d2 : d0fe            >            bne *       ;trap
24d4 : 68              >            pla         ;load status
                       >            cmp_flag fnz
24d5 : c9b2            >            cmp #(fnz|$30)&$ff
                       >
24d7 : d0fe            >            bne *       ;trap
24d9 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
24da : a900            >            lda #0
                       >
24dc : 48              >            pha         ;use stack to load status
24dd : a901            >            lda #1     ;precharge accu
24df : 28              >            plp
                        
24e0 : 2c0002                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
24e3 : 08              >            php         ;save flags
24e4 : 08              >            php
24e5 : c901            >            cmp #1     ;test result
24e7 : d0fe            >            bne *       ;trap
24e9 : 68              >            pla         ;load status
                       >            cmp_flag fnv
24ea : c9f0            >            cmp #(fnv|$30)&$ff
                       >
24ec : d0fe            >            bne *       ;trap
24ee : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
24ef : a9ff            >            lda #$ff
                       >
24f1 : 48              >            pha         ;use stack to load status
24f2 : a9ff            >            lda #$ff     ;precharge accu
24f4 : 28              >            plp
                        
24f5 : 2c0302                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
24f8 : 08              >            php         ;save flags
24f9 : 08              >            php
24fa : c9ff            >            cmp #$ff     ;test result
24fc : d0fe            >            bne *       ;trap
24fe : 68              >            pla         ;load status
                       >            cmp_flag ~fnv
24ff : c93f            >            cmp #(~fnv|$30)&$ff
                       >
2501 : d0fe            >            bne *       ;trap
2503 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2504 : a9ff            >            lda #$ff
                       >
2506 : 48              >            pha         ;use stack to load status
2507 : a901            >            lda #1     ;precharge accu
2509 : 28              >            plp
                        
250a : 2c0202                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
250d : 08              >            php         ;save flags
250e : 08              >            php
250f : c901            >            cmp #1     ;test result
2511 : d0fe            >            bne *       ;trap
2513 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2514 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2516 : d0fe            >            bne *       ;trap
2518 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2519 : a9ff            >            lda #$ff
                       >
251b : 48              >            pha         ;use stack to load status
251c : a901            >            lda #1     ;precharge accu
251e : 28              >            plp
                        
251f : 2c0102                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2522 : 08              >            php         ;save flags
2523 : 08              >            php
2524 : c901            >            cmp #1     ;test result
2526 : d0fe            >            bne *       ;trap
2528 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
2529 : c9bf            >            cmp #(~fv|$30)&$ff
                       >
252b : d0fe            >            bne *       ;trap
252d : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
252e : a9ff            >            lda #$ff
                       >
2530 : 48              >            pha         ;use stack to load status
2531 : a901            >            lda #1     ;precharge accu
2533 : 28              >            plp
                        
2534 : 2c0002                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
2537 : 08              >            php         ;save flags
2538 : 08              >            php
2539 : c901            >            cmp #1     ;test result
253b : d0fe            >            bne *       ;trap
253d : 68              >            pla         ;load status
                       >            cmp_flag ~fz
253e : c9fd            >            cmp #(~fz|$30)&$ff
                       >
2540 : d0fe            >            bne *       ;trap
2542 : 28              >            plp         ;restore status
                        
                        
                        ; CPX - zp / abs / #
                                set_x $80,0
                       >            load_flag 0
2543 : a900            >            lda #0
                       >
2545 : 48              >            pha         ;use stack to load status
2546 : a280            >            ldx #$80     ;precharge accu
2548 : 28              >            plp
                        
2549 : e40e                     cpx zp7f
                                tst_stat fc
254b : 08              >            php         ;save status
254c : 08              >            php         ;use stack to retrieve status
254d : 68              >            pla
                       >            cmp_flag fc
254e : c931            >            cmp #(fc|$30)&$ff
                       >
2550 : d0fe            >            bne *       ;trap
2552 : 28              >            plp         ;restore status
                        
2553 : ca                       dex
2554 : e40e                     cpx zp7f
                                tst_stat fzc
2556 : 08              >            php         ;save status
2557 : 08              >            php         ;use stack to retrieve status
2558 : 68              >            pla
                       >            cmp_flag fzc
2559 : c933            >            cmp #(fzc|$30)&$ff
                       >
255b : d0fe            >            bne *       ;trap
255d : 28              >            plp         ;restore status
                        
255e : ca                       dex
255f : e40e                     cpx zp7f
                                tst_x $7e,fn
2561 : 08              >            php         ;save flags
2562 : 08              >            php
2563 : e07e            >            cpx #$7e     ;test result
2565 : d0fe            >            bne *       ;trap
2567 : 68              >            pla         ;load status
                       >            cmp_flag fn
2568 : c9b0            >            cmp #(fn|$30)&$ff
                       >
256a : d0fe            >            bne *       ;trap
256c : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
256d : a9ff            >            lda #$ff
                       >
256f : 48              >            pha         ;use stack to load status
2570 : a280            >            ldx #$80     ;precharge accu
2572 : 28              >            plp
                        
2573 : e40e                     cpx zp7f
                                tst_stat ~fnz
2575 : 08              >            php         ;save status
2576 : 08              >            php         ;use stack to retrieve status
2577 : 68              >            pla
                       >            cmp_flag ~fnz
2578 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
257a : d0fe            >            bne *       ;trap
257c : 28              >            plp         ;restore status
                        
257d : ca                       dex
257e : e40e                     cpx zp7f
                                tst_stat ~fn
2580 : 08              >            php         ;save status
2581 : 08              >            php         ;use stack to retrieve status
2582 : 68              >            pla
                       >            cmp_flag ~fn
2583 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2585 : d0fe            >            bne *       ;trap
2587 : 28              >            plp         ;restore status
                        
2588 : ca                       dex
2589 : e40e                     cpx zp7f
                                tst_x $7e,~fzc
258b : 08              >            php         ;save flags
258c : 08              >            php
258d : e07e            >            cpx #$7e     ;test result
258f : d0fe            >            bne *       ;trap
2591 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2592 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2594 : d0fe            >            bne *       ;trap
2596 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
2597 : a900            >            lda #0
                       >
2599 : 48              >            pha         ;use stack to load status
259a : a280            >            ldx #$80     ;precharge accu
259c : 28              >            plp
                        
259d : ec0402                   cpx abs7f
                                tst_stat fc
25a0 : 08              >            php         ;save status
25a1 : 08              >            php         ;use stack to retrieve status
25a2 : 68              >            pla
                       >            cmp_flag fc
25a3 : c931            >            cmp #(fc|$30)&$ff
                       >
25a5 : d0fe            >            bne *       ;trap
25a7 : 28              >            plp         ;restore status
                        
25a8 : ca                       dex
25a9 : ec0402                   cpx abs7f
                                tst_stat fzc
25ac : 08              >            php         ;save status
25ad : 08              >            php         ;use stack to retrieve status
25ae : 68              >            pla
                       >            cmp_flag fzc
25af : c933            >            cmp #(fzc|$30)&$ff
                       >
25b1 : d0fe            >            bne *       ;trap
25b3 : 28              >            plp         ;restore status
                        
25b4 : ca                       dex
25b5 : ec0402                   cpx abs7f
                                tst_x $7e,fn
25b8 : 08              >            php         ;save flags
25b9 : 08              >            php
25ba : e07e            >            cpx #$7e     ;test result
25bc : d0fe            >            bne *       ;trap
25be : 68              >            pla         ;load status
                       >            cmp_flag fn
25bf : c9b0            >            cmp #(fn|$30)&$ff
                       >
25c1 : d0fe            >            bne *       ;trap
25c3 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
25c4 : a9ff            >            lda #$ff
                       >
25c6 : 48              >            pha         ;use stack to load status
25c7 : a280            >            ldx #$80     ;precharge accu
25c9 : 28              >            plp
                        
25ca : ec0402                   cpx abs7f
                                tst_stat ~fnz
25cd : 08              >            php         ;save status
25ce : 08              >            php         ;use stack to retrieve status
25cf : 68              >            pla
                       >            cmp_flag ~fnz
25d0 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
25d2 : d0fe            >            bne *       ;trap
25d4 : 28              >            plp         ;restore status
                        
25d5 : ca                       dex
25d6 : ec0402                   cpx abs7f
                                tst_stat ~fn
25d9 : 08              >            php         ;save status
25da : 08              >            php         ;use stack to retrieve status
25db : 68              >            pla
                       >            cmp_flag ~fn
25dc : c97f            >            cmp #(~fn|$30)&$ff
                       >
25de : d0fe            >            bne *       ;trap
25e0 : 28              >            plp         ;restore status
                        
25e1 : ca                       dex
25e2 : ec0402                   cpx abs7f
                                tst_x $7e,~fzc
25e5 : 08              >            php         ;save flags
25e6 : 08              >            php
25e7 : e07e            >            cpx #$7e     ;test result
25e9 : d0fe            >            bne *       ;trap
25eb : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
25ec : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
25ee : d0fe            >            bne *       ;trap
25f0 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
25f1 : a900            >            lda #0
                       >
25f3 : 48              >            pha         ;use stack to load status
25f4 : a280            >            ldx #$80     ;precharge accu
25f6 : 28              >            plp
                        
25f7 : e07f                     cpx #$7f
                                tst_stat fc
25f9 : 08              >            php         ;save status
25fa : 08              >            php         ;use stack to retrieve status
25fb : 68              >            pla
                       >            cmp_flag fc
25fc : c931            >            cmp #(fc|$30)&$ff
                       >
25fe : d0fe            >            bne *       ;trap
2600 : 28              >            plp         ;restore status
                        
2601 : ca                       dex
2602 : e07f                     cpx #$7f
                                tst_stat fzc
2604 : 08              >            php         ;save status
2605 : 08              >            php         ;use stack to retrieve status
2606 : 68              >            pla
                       >            cmp_flag fzc
2607 : c933            >            cmp #(fzc|$30)&$ff
                       >
2609 : d0fe            >            bne *       ;trap
260b : 28              >            plp         ;restore status
                        
260c : ca                       dex
260d : e07f                     cpx #$7f
                                tst_x $7e,fn
260f : 08              >            php         ;save flags
2610 : 08              >            php
2611 : e07e            >            cpx #$7e     ;test result
2613 : d0fe            >            bne *       ;trap
2615 : 68              >            pla         ;load status
                       >            cmp_flag fn
2616 : c9b0            >            cmp #(fn|$30)&$ff
                       >
2618 : d0fe            >            bne *       ;trap
261a : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
261b : a9ff            >            lda #$ff
                       >
261d : 48              >            pha         ;use stack to load status
261e : a280            >            ldx #$80     ;precharge accu
2620 : 28              >            plp
                        
2621 : e07f                     cpx #$7f
                                tst_stat ~fnz
2623 : 08              >            php         ;save status
2624 : 08              >            php         ;use stack to retrieve status
2625 : 68              >            pla
                       >            cmp_flag ~fnz
2626 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2628 : d0fe            >            bne *       ;trap
262a : 28              >            plp         ;restore status
                        
262b : ca                       dex
262c : e07f                     cpx #$7f
                                tst_stat ~fn
262e : 08              >            php         ;save status
262f : 08              >            php         ;use stack to retrieve status
2630 : 68              >            pla
                       >            cmp_flag ~fn
2631 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2633 : d0fe            >            bne *       ;trap
2635 : 28              >            plp         ;restore status
                        
2636 : ca                       dex
2637 : e07f                     cpx #$7f
                                tst_x $7e,~fzc
2639 : 08              >            php         ;save flags
263a : 08              >            php
263b : e07e            >            cpx #$7e     ;test result
263d : d0fe            >            bne *       ;trap
263f : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2640 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2642 : d0fe            >            bne *       ;trap
2644 : 28              >            plp         ;restore status
                        
                        
                        ; CPY - zp / abs / #
                                set_y $80,0
                       >            load_flag 0
2645 : a900            >            lda #0
                       >
2647 : 48              >            pha         ;use stack to load status
2648 : a080            >            ldy #$80     ;precharge accu
264a : 28              >            plp
                        
264b : c40e                     cpy zp7f
                                tst_stat fc
264d : 08              >            php         ;save status
264e : 08              >            php         ;use stack to retrieve status
264f : 68              >            pla
                       >            cmp_flag fc
2650 : c931            >            cmp #(fc|$30)&$ff
                       >
2652 : d0fe            >            bne *       ;trap
2654 : 28              >            plp         ;restore status
                        
2655 : 88                       dey
2656 : c40e                     cpy zp7f
                                tst_stat fzc
2658 : 08              >            php         ;save status
2659 : 08              >            php         ;use stack to retrieve status
265a : 68              >            pla
                       >            cmp_flag fzc
265b : c933            >            cmp #(fzc|$30)&$ff
                       >
265d : d0fe            >            bne *       ;trap
265f : 28              >            plp         ;restore status
                        
2660 : 88                       dey
2661 : c40e                     cpy zp7f
                                tst_y $7e,fn
2663 : 08              >            php         ;save flags
2664 : 08              >            php
2665 : c07e            >            cpy #$7e     ;test result
2667 : d0fe            >            bne *       ;trap
2669 : 68              >            pla         ;load status
                       >            cmp_flag fn
266a : c9b0            >            cmp #(fn|$30)&$ff
                       >
266c : d0fe            >            bne *       ;trap
266e : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
266f : a9ff            >            lda #$ff
                       >
2671 : 48              >            pha         ;use stack to load status
2672 : a080            >            ldy #$80     ;precharge accu
2674 : 28              >            plp
                        
2675 : c40e                     cpy zp7f
                                tst_stat ~fnz
2677 : 08              >            php         ;save status
2678 : 08              >            php         ;use stack to retrieve status
2679 : 68              >            pla
                       >            cmp_flag ~fnz
267a : c97d            >            cmp #(~fnz|$30)&$ff
                       >
267c : d0fe            >            bne *       ;trap
267e : 28              >            plp         ;restore status
                        
267f : 88                       dey
2680 : c40e                     cpy zp7f
                                tst_stat ~fn
2682 : 08              >            php         ;save status
2683 : 08              >            php         ;use stack to retrieve status
2684 : 68              >            pla
                       >            cmp_flag ~fn
2685 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2687 : d0fe            >            bne *       ;trap
2689 : 28              >            plp         ;restore status
                        
268a : 88                       dey
268b : c40e                     cpy zp7f
                                tst_y $7e,~fzc
268d : 08              >            php         ;save flags
268e : 08              >            php
268f : c07e            >            cpy #$7e     ;test result
2691 : d0fe            >            bne *       ;trap
2693 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2694 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2696 : d0fe            >            bne *       ;trap
2698 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
2699 : a900            >            lda #0
                       >
269b : 48              >            pha         ;use stack to load status
269c : a080            >            ldy #$80     ;precharge accu
269e : 28              >            plp
                        
269f : cc0402                   cpy abs7f
                                tst_stat fc
26a2 : 08              >            php         ;save status
26a3 : 08              >            php         ;use stack to retrieve status
26a4 : 68              >            pla
                       >            cmp_flag fc
26a5 : c931            >            cmp #(fc|$30)&$ff
                       >
26a7 : d0fe            >            bne *       ;trap
26a9 : 28              >            plp         ;restore status
                        
26aa : 88                       dey
26ab : cc0402                   cpy abs7f
                                tst_stat fzc
26ae : 08              >            php         ;save status
26af : 08              >            php         ;use stack to retrieve status
26b0 : 68              >            pla
                       >            cmp_flag fzc
26b1 : c933            >            cmp #(fzc|$30)&$ff
                       >
26b3 : d0fe            >            bne *       ;trap
26b5 : 28              >            plp         ;restore status
                        
26b6 : 88                       dey
26b7 : cc0402                   cpy abs7f
                                tst_y $7e,fn
26ba : 08              >            php         ;save flags
26bb : 08              >            php
26bc : c07e            >            cpy #$7e     ;test result
26be : d0fe            >            bne *       ;trap
26c0 : 68              >            pla         ;load status
                       >            cmp_flag fn
26c1 : c9b0            >            cmp #(fn|$30)&$ff
                       >
26c3 : d0fe            >            bne *       ;trap
26c5 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
26c6 : a9ff            >            lda #$ff
                       >
26c8 : 48              >            pha         ;use stack to load status
26c9 : a080            >            ldy #$80     ;precharge accu
26cb : 28              >            plp
                        
26cc : cc0402                   cpy abs7f
                                tst_stat ~fnz
26cf : 08              >            php         ;save status
26d0 : 08              >            php         ;use stack to retrieve status
26d1 : 68              >            pla
                       >            cmp_flag ~fnz
26d2 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
26d4 : d0fe            >            bne *       ;trap
26d6 : 28              >            plp         ;restore status
                        
26d7 : 88                       dey
26d8 : cc0402                   cpy abs7f
                                tst_stat ~fn
26db : 08              >            php         ;save status
26dc : 08              >            php         ;use stack to retrieve status
26dd : 68              >            pla
                       >            cmp_flag ~fn
26de : c97f            >            cmp #(~fn|$30)&$ff
                       >
26e0 : d0fe            >            bne *       ;trap
26e2 : 28              >            plp         ;restore status
                        
26e3 : 88                       dey
26e4 : cc0402                   cpy abs7f
                                tst_y $7e,~fzc
26e7 : 08              >            php         ;save flags
26e8 : 08              >            php
26e9 : c07e            >            cpy #$7e     ;test result
26eb : d0fe            >            bne *       ;trap
26ed : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
26ee : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
26f0 : d0fe            >            bne *       ;trap
26f2 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
26f3 : a900            >            lda #0
                       >
26f5 : 48              >            pha         ;use stack to load status
26f6 : a080            >            ldy #$80     ;precharge accu
26f8 : 28              >            plp
                        
26f9 : c07f                     cpy #$7f
                                tst_stat fc
26fb : 08              >            php         ;save status
26fc : 08              >            php         ;use stack to retrieve status
26fd : 68              >            pla
                       >            cmp_flag fc
26fe : c931            >            cmp #(fc|$30)&$ff
                       >
2700 : d0fe            >            bne *       ;trap
2702 : 28              >            plp         ;restore status
                        
2703 : 88                       dey
2704 : c07f                     cpy #$7f
                                tst_stat fzc
2706 : 08              >            php         ;save status
2707 : 08              >            php         ;use stack to retrieve status
2708 : 68              >            pla
                       >            cmp_flag fzc
2709 : c933            >            cmp #(fzc|$30)&$ff
                       >
270b : d0fe            >            bne *       ;trap
270d : 28              >            plp         ;restore status
                        
270e : 88                       dey
270f : c07f                     cpy #$7f
                                tst_y $7e,fn
2711 : 08              >            php         ;save flags
2712 : 08              >            php
2713 : c07e            >            cpy #$7e     ;test result
2715 : d0fe            >            bne *       ;trap
2717 : 68              >            pla         ;load status
                       >            cmp_flag fn
2718 : c9b0            >            cmp #(fn|$30)&$ff
                       >
271a : d0fe            >            bne *       ;trap
271c : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
271d : a9ff            >            lda #$ff
                       >
271f : 48              >            pha         ;use stack to load status
2720 : a080            >            ldy #$80     ;precharge accu
2722 : 28              >            plp
                        
2723 : c07f                     cpy #$7f
                                tst_stat ~fnz
2725 : 08              >            php         ;save status
2726 : 08              >            php         ;use stack to retrieve status
2727 : 68              >            pla
                       >            cmp_flag ~fnz
2728 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
272a : d0fe            >            bne *       ;trap
272c : 28              >            plp         ;restore status
                        
272d : 88                       dey
272e : c07f                     cpy #$7f
                                tst_stat ~fn
2730 : 08              >            php         ;save status
2731 : 08              >            php         ;use stack to retrieve status
2732 : 68              >            pla
                       >            cmp_flag ~fn
2733 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2735 : d0fe            >            bne *       ;trap
2737 : 28              >            plp         ;restore status
                        
2738 : 88                       dey
2739 : c07f                     cpy #$7f
                                tst_y $7e,~fzc
273b : 08              >            php         ;save flags
273c : 08              >            php
273d : c07e            >            cpy #$7e     ;test result
273f : d0fe            >            bne *       ;trap
2741 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2742 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2744 : d0fe            >            bne *       ;trap
2746 : 28              >            plp         ;restore status
                        
                        
                        ; CMP - zp / abs / #
                                set_a $80,0
                       >            load_flag 0
2747 : a900            >            lda #0
                       >
2749 : 48              >            pha         ;use stack to load status
274a : a980            >            lda #$80     ;precharge accu
274c : 28              >            plp
                        
274d : c50e                     cmp zp7f
                                tst_a $80,fc
274f : 08              >            php         ;save flags
2750 : 08              >            php
2751 : c980            >            cmp #$80     ;test result
2753 : d0fe            >            bne *       ;trap
2755 : 68              >            pla         ;load status
                       >            cmp_flag fc
2756 : c931            >            cmp #(fc|$30)&$ff
                       >
2758 : d0fe            >            bne *       ;trap
275a : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
275b : a900            >            lda #0
                       >
275d : 48              >            pha         ;use stack to load status
275e : a97f            >            lda #$7f     ;precharge accu
2760 : 28              >            plp
                        
2761 : c50e                     cmp zp7f
                                tst_a $7f,fzc
2763 : 08              >            php         ;save flags
2764 : 08              >            php
2765 : c97f            >            cmp #$7f     ;test result
2767 : d0fe            >            bne *       ;trap
2769 : 68              >            pla         ;load status
                       >            cmp_flag fzc
276a : c933            >            cmp #(fzc|$30)&$ff
                       >
276c : d0fe            >            bne *       ;trap
276e : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
276f : a900            >            lda #0
                       >
2771 : 48              >            pha         ;use stack to load status
2772 : a97e            >            lda #$7e     ;precharge accu
2774 : 28              >            plp
                        
2775 : c50e                     cmp zp7f
                                tst_a $7e,fn
2777 : 08              >            php         ;save flags
2778 : 08              >            php
2779 : c97e            >            cmp #$7e     ;test result
277b : d0fe            >            bne *       ;trap
277d : 68              >            pla         ;load status
                       >            cmp_flag fn
277e : c9b0            >            cmp #(fn|$30)&$ff
                       >
2780 : d0fe            >            bne *       ;trap
2782 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2783 : a9ff            >            lda #$ff
                       >
2785 : 48              >            pha         ;use stack to load status
2786 : a980            >            lda #$80     ;precharge accu
2788 : 28              >            plp
                        
2789 : c50e                     cmp zp7f
                                tst_a $80,~fnz
278b : 08              >            php         ;save flags
278c : 08              >            php
278d : c980            >            cmp #$80     ;test result
278f : d0fe            >            bne *       ;trap
2791 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2792 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2794 : d0fe            >            bne *       ;trap
2796 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2797 : a9ff            >            lda #$ff
                       >
2799 : 48              >            pha         ;use stack to load status
279a : a97f            >            lda #$7f     ;precharge accu
279c : 28              >            plp
                        
279d : c50e                     cmp zp7f
                                tst_a $7f,~fn
279f : 08              >            php         ;save flags
27a0 : 08              >            php
27a1 : c97f            >            cmp #$7f     ;test result
27a3 : d0fe            >            bne *       ;trap
27a5 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
27a6 : c97f            >            cmp #(~fn|$30)&$ff
                       >
27a8 : d0fe            >            bne *       ;trap
27aa : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
27ab : a9ff            >            lda #$ff
                       >
27ad : 48              >            pha         ;use stack to load status
27ae : a97e            >            lda #$7e     ;precharge accu
27b0 : 28              >            plp
                        
27b1 : c50e                     cmp zp7f
                                tst_a $7e,~fzc
27b3 : 08              >            php         ;save flags
27b4 : 08              >            php
27b5 : c97e            >            cmp #$7e     ;test result
27b7 : d0fe            >            bne *       ;trap
27b9 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
27ba : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
27bc : d0fe            >            bne *       ;trap
27be : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
27bf : a900            >            lda #0
                       >
27c1 : 48              >            pha         ;use stack to load status
27c2 : a980            >            lda #$80     ;precharge accu
27c4 : 28              >            plp
                        
27c5 : cd0402                   cmp abs7f
                                tst_a $80,fc
27c8 : 08              >            php         ;save flags
27c9 : 08              >            php
27ca : c980            >            cmp #$80     ;test result
27cc : d0fe            >            bne *       ;trap
27ce : 68              >            pla         ;load status
                       >            cmp_flag fc
27cf : c931            >            cmp #(fc|$30)&$ff
                       >
27d1 : d0fe            >            bne *       ;trap
27d3 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
27d4 : a900            >            lda #0
                       >
27d6 : 48              >            pha         ;use stack to load status
27d7 : a97f            >            lda #$7f     ;precharge accu
27d9 : 28              >            plp
                        
27da : cd0402                   cmp abs7f
                                tst_a $7f,fzc
27dd : 08              >            php         ;save flags
27de : 08              >            php
27df : c97f            >            cmp #$7f     ;test result
27e1 : d0fe            >            bne *       ;trap
27e3 : 68              >            pla         ;load status
                       >            cmp_flag fzc
27e4 : c933            >            cmp #(fzc|$30)&$ff
                       >
27e6 : d0fe            >            bne *       ;trap
27e8 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
27e9 : a900            >            lda #0
                       >
27eb : 48              >            pha         ;use stack to load status
27ec : a97e            >            lda #$7e     ;precharge accu
27ee : 28              >            plp
                        
27ef : cd0402                   cmp abs7f
                                tst_a $7e,fn
27f2 : 08              >            php         ;save flags
27f3 : 08              >            php
27f4 : c97e            >            cmp #$7e     ;test result
27f6 : d0fe            >            bne *       ;trap
27f8 : 68              >            pla         ;load status
                       >            cmp_flag fn
27f9 : c9b0            >            cmp #(fn|$30)&$ff
                       >
27fb : d0fe            >            bne *       ;trap
27fd : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
27fe : a9ff            >            lda #$ff
                       >
2800 : 48              >            pha         ;use stack to load status
2801 : a980            >            lda #$80     ;precharge accu
2803 : 28              >            plp
                        
2804 : cd0402                   cmp abs7f
                                tst_a $80,~fnz
2807 : 08              >            php         ;save flags
2808 : 08              >            php
2809 : c980            >            cmp #$80     ;test result
280b : d0fe            >            bne *       ;trap
280d : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
280e : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2810 : d0fe            >            bne *       ;trap
2812 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2813 : a9ff            >            lda #$ff
                       >
2815 : 48              >            pha         ;use stack to load status
2816 : a97f            >            lda #$7f     ;precharge accu
2818 : 28              >            plp
                        
2819 : cd0402                   cmp abs7f
                                tst_a $7f,~fn
281c : 08              >            php         ;save flags
281d : 08              >            php
281e : c97f            >            cmp #$7f     ;test result
2820 : d0fe            >            bne *       ;trap
2822 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2823 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2825 : d0fe            >            bne *       ;trap
2827 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2828 : a9ff            >            lda #$ff
                       >
282a : 48              >            pha         ;use stack to load status
282b : a97e            >            lda #$7e     ;precharge accu
282d : 28              >            plp
                        
282e : cd0402                   cmp abs7f
                                tst_a $7e,~fzc
2831 : 08              >            php         ;save flags
2832 : 08              >            php
2833 : c97e            >            cmp #$7e     ;test result
2835 : d0fe            >            bne *       ;trap
2837 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2838 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
283a : d0fe            >            bne *       ;trap
283c : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
283d : a900            >            lda #0
                       >
283f : 48              >            pha         ;use stack to load status
2840 : a980            >            lda #$80     ;precharge accu
2842 : 28              >            plp
                        
2843 : c97f                     cmp #$7f
                                tst_a $80,fc
2845 : 08              >            php         ;save flags
2846 : 08              >            php
2847 : c980            >            cmp #$80     ;test result
2849 : d0fe            >            bne *       ;trap
284b : 68              >            pla         ;load status
                       >            cmp_flag fc
284c : c931            >            cmp #(fc|$30)&$ff
                       >
284e : d0fe            >            bne *       ;trap
2850 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2851 : a900            >            lda #0
                       >
2853 : 48              >            pha         ;use stack to load status
2854 : a97f            >            lda #$7f     ;precharge accu
2856 : 28              >            plp
                        
2857 : c97f                     cmp #$7f
                                tst_a $7f,fzc
2859 : 08              >            php         ;save flags
285a : 08              >            php
285b : c97f            >            cmp #$7f     ;test result
285d : d0fe            >            bne *       ;trap
285f : 68              >            pla         ;load status
                       >            cmp_flag fzc
2860 : c933            >            cmp #(fzc|$30)&$ff
                       >
2862 : d0fe            >            bne *       ;trap
2864 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2865 : a900            >            lda #0
                       >
2867 : 48              >            pha         ;use stack to load status
2868 : a97e            >            lda #$7e     ;precharge accu
286a : 28              >            plp
                        
286b : c97f                     cmp #$7f
                                tst_a $7e,fn
286d : 08              >            php         ;save flags
286e : 08              >            php
286f : c97e            >            cmp #$7e     ;test result
2871 : d0fe            >            bne *       ;trap
2873 : 68              >            pla         ;load status
                       >            cmp_flag fn
2874 : c9b0            >            cmp #(fn|$30)&$ff
                       >
2876 : d0fe            >            bne *       ;trap
2878 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2879 : a9ff            >            lda #$ff
                       >
287b : 48              >            pha         ;use stack to load status
287c : a980            >            lda #$80     ;precharge accu
287e : 28              >            plp
                        
287f : c97f                     cmp #$7f
                                tst_a $80,~fnz
2881 : 08              >            php         ;save flags
2882 : 08              >            php
2883 : c980            >            cmp #$80     ;test result
2885 : d0fe            >            bne *       ;trap
2887 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2888 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
288a : d0fe            >            bne *       ;trap
288c : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
288d : a9ff            >            lda #$ff
                       >
288f : 48              >            pha         ;use stack to load status
2890 : a97f            >            lda #$7f     ;precharge accu
2892 : 28              >            plp
                        
2893 : c97f                     cmp #$7f
                                tst_a $7f,~fn
2895 : 08              >            php         ;save flags
2896 : 08              >            php
2897 : c97f            >            cmp #$7f     ;test result
2899 : d0fe            >            bne *       ;trap
289b : 68              >            pla         ;load status
                       >            cmp_flag ~fn
289c : c97f            >            cmp #(~fn|$30)&$ff
                       >
289e : d0fe            >            bne *       ;trap
28a0 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
28a1 : a9ff            >            lda #$ff
                       >
28a3 : 48              >            pha         ;use stack to load status
28a4 : a97e            >            lda #$7e     ;precharge accu
28a6 : 28              >            plp
                        
28a7 : c97f                     cmp #$7f
                                tst_a $7e,~fzc
28a9 : 08              >            php         ;save flags
28aa : 08              >            php
28ab : c97e            >            cmp #$7e     ;test result
28ad : d0fe            >            bne *       ;trap
28af : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
28b0 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
28b2 : d0fe            >            bne *       ;trap
28b4 : 28              >            plp         ;restore status
                        
                        
28b5 : a204                     ldx #4          ;with indexing by X
                                set_a $80,0
                       >            load_flag 0
28b7 : a900            >            lda #0
                       >
28b9 : 48              >            pha         ;use stack to load status
28ba : a980            >            lda #$80     ;precharge accu
28bc : 28              >            plp
                        
28bd : d50a                     cmp zp1,x
                                tst_a $80,fc
28bf : 08              >            php         ;save flags
28c0 : 08              >            php
28c1 : c980            >            cmp #$80     ;test result
28c3 : d0fe            >            bne *       ;trap
28c5 : 68              >            pla         ;load status
                       >            cmp_flag fc
28c6 : c931            >            cmp #(fc|$30)&$ff
                       >
28c8 : d0fe            >            bne *       ;trap
28ca : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
28cb : a900            >            lda #0
                       >
28cd : 48              >            pha         ;use stack to load status
28ce : a97f            >            lda #$7f     ;precharge accu
28d0 : 28              >            plp
                        
28d1 : d50a                     cmp zp1,x
                                tst_a $7f,fzc
28d3 : 08              >            php         ;save flags
28d4 : 08              >            php
28d5 : c97f            >            cmp #$7f     ;test result
28d7 : d0fe            >            bne *       ;trap
28d9 : 68              >            pla         ;load status
                       >            cmp_flag fzc
28da : c933            >            cmp #(fzc|$30)&$ff
                       >
28dc : d0fe            >            bne *       ;trap
28de : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
28df : a900            >            lda #0
                       >
28e1 : 48              >            pha         ;use stack to load status
28e2 : a97e            >            lda #$7e     ;precharge accu
28e4 : 28              >            plp
                        
28e5 : d50a                     cmp zp1,x
                                tst_a $7e,fn
28e7 : 08              >            php         ;save flags
28e8 : 08              >            php
28e9 : c97e            >            cmp #$7e     ;test result
28eb : d0fe            >            bne *       ;trap
28ed : 68              >            pla         ;load status
                       >            cmp_flag fn
28ee : c9b0            >            cmp #(fn|$30)&$ff
                       >
28f0 : d0fe            >            bne *       ;trap
28f2 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
28f3 : a9ff            >            lda #$ff
                       >
28f5 : 48              >            pha         ;use stack to load status
28f6 : a980            >            lda #$80     ;precharge accu
28f8 : 28              >            plp
                        
28f9 : d50a                     cmp zp1,x
                                tst_a $80,~fnz
28fb : 08              >            php         ;save flags
28fc : 08              >            php
28fd : c980            >            cmp #$80     ;test result
28ff : d0fe            >            bne *       ;trap
2901 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2902 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2904 : d0fe            >            bne *       ;trap
2906 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2907 : a9ff            >            lda #$ff
                       >
2909 : 48              >            pha         ;use stack to load status
290a : a97f            >            lda #$7f     ;precharge accu
290c : 28              >            plp
                        
290d : d50a                     cmp zp1,x
                                tst_a $7f,~fn
290f : 08              >            php         ;save flags
2910 : 08              >            php
2911 : c97f            >            cmp #$7f     ;test result
2913 : d0fe            >            bne *       ;trap
2915 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2916 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2918 : d0fe            >            bne *       ;trap
291a : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
291b : a9ff            >            lda #$ff
                       >
291d : 48              >            pha         ;use stack to load status
291e : a97e            >            lda #$7e     ;precharge accu
2920 : 28              >            plp
                        
2921 : d50a                     cmp zp1,x
                                tst_a $7e,~fzc
2923 : 08              >            php         ;save flags
2924 : 08              >            php
2925 : c97e            >            cmp #$7e     ;test result
2927 : d0fe            >            bne *       ;trap
2929 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
292a : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
292c : d0fe            >            bne *       ;trap
292e : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
292f : a900            >            lda #0
                       >
2931 : 48              >            pha         ;use stack to load status
2932 : a980            >            lda #$80     ;precharge accu
2934 : 28              >            plp
                        
2935 : dd0002                   cmp abs1,x
                                tst_a $80,fc
2938 : 08              >            php         ;save flags
2939 : 08              >            php
293a : c980            >            cmp #$80     ;test result
293c : d0fe            >            bne *       ;trap
293e : 68              >            pla         ;load status
                       >            cmp_flag fc
293f : c931            >            cmp #(fc|$30)&$ff
                       >
2941 : d0fe            >            bne *       ;trap
2943 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2944 : a900            >            lda #0
                       >
2946 : 48              >            pha         ;use stack to load status
2947 : a97f            >            lda #$7f     ;precharge accu
2949 : 28              >            plp
                        
294a : dd0002                   cmp abs1,x
                                tst_a $7f,fzc
294d : 08              >            php         ;save flags
294e : 08              >            php
294f : c97f            >            cmp #$7f     ;test result
2951 : d0fe            >            bne *       ;trap
2953 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2954 : c933            >            cmp #(fzc|$30)&$ff
                       >
2956 : d0fe            >            bne *       ;trap
2958 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2959 : a900            >            lda #0
                       >
295b : 48              >            pha         ;use stack to load status
295c : a97e            >            lda #$7e     ;precharge accu
295e : 28              >            plp
                        
295f : dd0002                   cmp abs1,x
                                tst_a $7e,fn
2962 : 08              >            php         ;save flags
2963 : 08              >            php
2964 : c97e            >            cmp #$7e     ;test result
2966 : d0fe            >            bne *       ;trap
2968 : 68              >            pla         ;load status
                       >            cmp_flag fn
2969 : c9b0            >            cmp #(fn|$30)&$ff
                       >
296b : d0fe            >            bne *       ;trap
296d : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
296e : a9ff            >            lda #$ff
                       >
2970 : 48              >            pha         ;use stack to load status
2971 : a980            >            lda #$80     ;precharge accu
2973 : 28              >            plp
                        
2974 : dd0002                   cmp abs1,x
                                tst_a $80,~fnz
2977 : 08              >            php         ;save flags
2978 : 08              >            php
2979 : c980            >            cmp #$80     ;test result
297b : d0fe            >            bne *       ;trap
297d : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
297e : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2980 : d0fe            >            bne *       ;trap
2982 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2983 : a9ff            >            lda #$ff
                       >
2985 : 48              >            pha         ;use stack to load status
2986 : a97f            >            lda #$7f     ;precharge accu
2988 : 28              >            plp
                        
2989 : dd0002                   cmp abs1,x
                                tst_a $7f,~fn
298c : 08              >            php         ;save flags
298d : 08              >            php
298e : c97f            >            cmp #$7f     ;test result
2990 : d0fe            >            bne *       ;trap
2992 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2993 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2995 : d0fe            >            bne *       ;trap
2997 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2998 : a9ff            >            lda #$ff
                       >
299a : 48              >            pha         ;use stack to load status
299b : a97e            >            lda #$7e     ;precharge accu
299d : 28              >            plp
                        
299e : dd0002                   cmp abs1,x
                                tst_a $7e,~fzc
29a1 : 08              >            php         ;save flags
29a2 : 08              >            php
29a3 : c97e            >            cmp #$7e     ;test result
29a5 : d0fe            >            bne *       ;trap
29a7 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
29a8 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
29aa : d0fe            >            bne *       ;trap
29ac : 28              >            plp         ;restore status
                        
                        
29ad : a004                     ldy #4          ;with indexing by Y
29af : a208                     ldx #8          ;with indexed indirect
                                set_a $80,0
                       >            load_flag 0
29b1 : a900            >            lda #0
                       >
29b3 : 48              >            pha         ;use stack to load status
29b4 : a980            >            lda #$80     ;precharge accu
29b6 : 28              >            plp
                        
29b7 : d90002                   cmp abs1,y
                                tst_a $80,fc
29ba : 08              >            php         ;save flags
29bb : 08              >            php
29bc : c980            >            cmp #$80     ;test result
29be : d0fe            >            bne *       ;trap
29c0 : 68              >            pla         ;load status
                       >            cmp_flag fc
29c1 : c931            >            cmp #(fc|$30)&$ff
                       >
29c3 : d0fe            >            bne *       ;trap
29c5 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
29c6 : a900            >            lda #0
                       >
29c8 : 48              >            pha         ;use stack to load status
29c9 : a97f            >            lda #$7f     ;precharge accu
29cb : 28              >            plp
                        
29cc : d90002                   cmp abs1,y
                                tst_a $7f,fzc
29cf : 08              >            php         ;save flags
29d0 : 08              >            php
29d1 : c97f            >            cmp #$7f     ;test result
29d3 : d0fe            >            bne *       ;trap
29d5 : 68              >            pla         ;load status
                       >            cmp_flag fzc
29d6 : c933            >            cmp #(fzc|$30)&$ff
                       >
29d8 : d0fe            >            bne *       ;trap
29da : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
29db : a900            >            lda #0
                       >
29dd : 48              >            pha         ;use stack to load status
29de : a97e            >            lda #$7e     ;precharge accu
29e0 : 28              >            plp
                        
29e1 : d90002                   cmp abs1,y
                                tst_a $7e,fn
29e4 : 08              >            php         ;save flags
29e5 : 08              >            php
29e6 : c97e            >            cmp #$7e     ;test result
29e8 : d0fe            >            bne *       ;trap
29ea : 68              >            pla         ;load status
                       >            cmp_flag fn
29eb : c9b0            >            cmp #(fn|$30)&$ff
                       >
29ed : d0fe            >            bne *       ;trap
29ef : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
29f0 : a9ff            >            lda #$ff
                       >
29f2 : 48              >            pha         ;use stack to load status
29f3 : a980            >            lda #$80     ;precharge accu
29f5 : 28              >            plp
                        
29f6 : d90002                   cmp abs1,y
                                tst_a $80,~fnz
29f9 : 08              >            php         ;save flags
29fa : 08              >            php
29fb : c980            >            cmp #$80     ;test result
29fd : d0fe            >            bne *       ;trap
29ff : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2a00 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2a02 : d0fe            >            bne *       ;trap
2a04 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2a05 : a9ff            >            lda #$ff
                       >
2a07 : 48              >            pha         ;use stack to load status
2a08 : a97f            >            lda #$7f     ;precharge accu
2a0a : 28              >            plp
                        
2a0b : d90002                   cmp abs1,y
                                tst_a $7f,~fn
2a0e : 08              >            php         ;save flags
2a0f : 08              >            php
2a10 : c97f            >            cmp #$7f     ;test result
2a12 : d0fe            >            bne *       ;trap
2a14 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2a15 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2a17 : d0fe            >            bne *       ;trap
2a19 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2a1a : a9ff            >            lda #$ff
                       >
2a1c : 48              >            pha         ;use stack to load status
2a1d : a97e            >            lda #$7e     ;precharge accu
2a1f : 28              >            plp
                        
2a20 : d90002                   cmp abs1,y
                                tst_a $7e,~fzc
2a23 : 08              >            php         ;save flags
2a24 : 08              >            php
2a25 : c97e            >            cmp #$7e     ;test result
2a27 : d0fe            >            bne *       ;trap
2a29 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2a2a : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2a2c : d0fe            >            bne *       ;trap
2a2e : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2a2f : a900            >            lda #0
                       >
2a31 : 48              >            pha         ;use stack to load status
2a32 : a980            >            lda #$80     ;precharge accu
2a34 : 28              >            plp
                        
2a35 : c120                     cmp (ind1,x)
                                tst_a $80,fc
2a37 : 08              >            php         ;save flags
2a38 : 08              >            php
2a39 : c980            >            cmp #$80     ;test result
2a3b : d0fe            >            bne *       ;trap
2a3d : 68              >            pla         ;load status
                       >            cmp_flag fc
2a3e : c931            >            cmp #(fc|$30)&$ff
                       >
2a40 : d0fe            >            bne *       ;trap
2a42 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2a43 : a900            >            lda #0
                       >
2a45 : 48              >            pha         ;use stack to load status
2a46 : a97f            >            lda #$7f     ;precharge accu
2a48 : 28              >            plp
                        
2a49 : c120                     cmp (ind1,x)
                                tst_a $7f,fzc
2a4b : 08              >            php         ;save flags
2a4c : 08              >            php
2a4d : c97f            >            cmp #$7f     ;test result
2a4f : d0fe            >            bne *       ;trap
2a51 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2a52 : c933            >            cmp #(fzc|$30)&$ff
                       >
2a54 : d0fe            >            bne *       ;trap
2a56 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2a57 : a900            >            lda #0
                       >
2a59 : 48              >            pha         ;use stack to load status
2a5a : a97e            >            lda #$7e     ;precharge accu
2a5c : 28              >            plp
                        
2a5d : c120                     cmp (ind1,x)
                                tst_a $7e,fn
2a5f : 08              >            php         ;save flags
2a60 : 08              >            php
2a61 : c97e            >            cmp #$7e     ;test result
2a63 : d0fe            >            bne *       ;trap
2a65 : 68              >            pla         ;load status
                       >            cmp_flag fn
2a66 : c9b0            >            cmp #(fn|$30)&$ff
                       >
2a68 : d0fe            >            bne *       ;trap
2a6a : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2a6b : a9ff            >            lda #$ff
                       >
2a6d : 48              >            pha         ;use stack to load status
2a6e : a980            >            lda #$80     ;precharge accu
2a70 : 28              >            plp
                        
2a71 : c120                     cmp (ind1,x)
                                tst_a $80,~fnz
2a73 : 08              >            php         ;save flags
2a74 : 08              >            php
2a75 : c980            >            cmp #$80     ;test result
2a77 : d0fe            >            bne *       ;trap
2a79 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2a7a : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2a7c : d0fe            >            bne *       ;trap
2a7e : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2a7f : a9ff            >            lda #$ff
                       >
2a81 : 48              >            pha         ;use stack to load status
2a82 : a97f            >            lda #$7f     ;precharge accu
2a84 : 28              >            plp
                        
2a85 : c120                     cmp (ind1,x)
                                tst_a $7f,~fn
2a87 : 08              >            php         ;save flags
2a88 : 08              >            php
2a89 : c97f            >            cmp #$7f     ;test result
2a8b : d0fe            >            bne *       ;trap
2a8d : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2a8e : c97f            >            cmp #(~fn|$30)&$ff
                       >
2a90 : d0fe            >            bne *       ;trap
2a92 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2a93 : a9ff            >            lda #$ff
                       >
2a95 : 48              >            pha         ;use stack to load status
2a96 : a97e            >            lda #$7e     ;precharge accu
2a98 : 28              >            plp
                        
2a99 : c120                     cmp (ind1,x)
                                tst_a $7e,~fzc
2a9b : 08              >            php         ;save flags
2a9c : 08              >            php
2a9d : c97e            >            cmp #$7e     ;test result
2a9f : d0fe            >            bne *       ;trap
2aa1 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2aa2 : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2aa4 : d0fe            >            bne *       ;trap
2aa6 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2aa7 : a900            >            lda #0
                       >
2aa9 : 48              >            pha         ;use stack to load status
2aaa : a980            >            lda #$80     ;precharge accu
2aac : 28              >            plp
                        
2aad : d120                     cmp (ind1),y
                                tst_a $80,fc
2aaf : 08              >            php         ;save flags
2ab0 : 08              >            php
2ab1 : c980            >            cmp #$80     ;test result
2ab3 : d0fe            >            bne *       ;trap
2ab5 : 68              >            pla         ;load status
                       >            cmp_flag fc
2ab6 : c931            >            cmp #(fc|$30)&$ff
                       >
2ab8 : d0fe            >            bne *       ;trap
2aba : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2abb : a900            >            lda #0
                       >
2abd : 48              >            pha         ;use stack to load status
2abe : a97f            >            lda #$7f     ;precharge accu
2ac0 : 28              >            plp
                        
2ac1 : d120                     cmp (ind1),y
                                tst_a $7f,fzc
2ac3 : 08              >            php         ;save flags
2ac4 : 08              >            php
2ac5 : c97f            >            cmp #$7f     ;test result
2ac7 : d0fe            >            bne *       ;trap
2ac9 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2aca : c933            >            cmp #(fzc|$30)&$ff
                       >
2acc : d0fe            >            bne *       ;trap
2ace : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2acf : a900            >            lda #0
                       >
2ad1 : 48              >            pha         ;use stack to load status
2ad2 : a97e            >            lda #$7e     ;precharge accu
2ad4 : 28              >            plp
                        
2ad5 : d120                     cmp (ind1),y
                                tst_a $7e,fn
2ad7 : 08              >            php         ;save flags
2ad8 : 08              >            php
2ad9 : c97e            >            cmp #$7e     ;test result
2adb : d0fe            >            bne *       ;trap
2add : 68              >            pla         ;load status
                       >            cmp_flag fn
2ade : c9b0            >            cmp #(fn|$30)&$ff
                       >
2ae0 : d0fe            >            bne *       ;trap
2ae2 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2ae3 : a9ff            >            lda #$ff
                       >
2ae5 : 48              >            pha         ;use stack to load status
2ae6 : a980            >            lda #$80     ;precharge accu
2ae8 : 28              >            plp
                        
2ae9 : d120                     cmp (ind1),y
                                tst_a $80,~fnz
2aeb : 08              >            php         ;save flags
2aec : 08              >            php
2aed : c980            >            cmp #$80     ;test result
2aef : d0fe            >            bne *       ;trap
2af1 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2af2 : c97d            >            cmp #(~fnz|$30)&$ff
                       >
2af4 : d0fe            >            bne *       ;trap
2af6 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2af7 : a9ff            >            lda #$ff
                       >
2af9 : 48              >            pha         ;use stack to load status
2afa : a97f            >            lda #$7f     ;precharge accu
2afc : 28              >            plp
                        
2afd : d120                     cmp (ind1),y
                                tst_a $7f,~fn
2aff : 08              >            php         ;save flags
2b00 : 08              >            php
2b01 : c97f            >            cmp #$7f     ;test result
2b03 : d0fe            >            bne *       ;trap
2b05 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2b06 : c97f            >            cmp #(~fn|$30)&$ff
                       >
2b08 : d0fe            >            bne *       ;trap
2b0a : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2b0b : a9ff            >            lda #$ff
                       >
2b0d : 48              >            pha         ;use stack to load status
2b0e : a97e            >            lda #$7e     ;precharge accu
2b10 : 28              >            plp
                        
2b11 : d120                     cmp (ind1),y
                                tst_a $7e,~fzc
2b13 : 08              >            php         ;save flags
2b14 : 08              >            php
2b15 : c97e            >            cmp #$7e     ;test result
2b17 : d0fe            >            bne *       ;trap
2b19 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2b1a : c9fc            >            cmp #(~fzc|$30)&$ff
                       >
2b1c : d0fe            >            bne *       ;trap
2b1e : 28              >            plp         ;restore status
                        
                        
                        ; testing shifts - ASL LSR ROL ROR all addressing modes
                        ; shifts - accumulator
2b1f : a203                     ldx #3
2b21 :                  tasl
                                set_ax zp1,0
                       >            load_flag 0
2b21 : a900            >            lda #0
                       >
2b23 : 48              >            pha         ;use stack to load status
2b24 : b50a            >            lda zp1,x    ;precharge accu
2b26 : 28              >            plp
                        
2b27 : 0a                       asl a
                                tst_ax rASL,fASL,0
2b28 : 08              >            php         ;save flags
2b29 : dd0902          >            cmp rASL,x    ;test result
2b2c : d0fe            >            bne *       ;trap
2b2e : 68              >            pla         ;load status
                       >            eor_flag 0
2b2f : 4930            >            eor #(0|$30)
                       >
2b31 : dd1902          >            cmp fASL,x    ;test flags
2b34 : d0fe            >            bne *       ;trap
                        
2b36 : ca                       dex
2b37 : 10e8                     bpl tasl
2b39 : a203                     ldx #3
2b3b :                  tasl1
                                set_ax zp1,$ff
                       >            load_flag $ff
2b3b : a9ff            >            lda #$ff
                       >
2b3d : 48              >            pha         ;use stack to load status
2b3e : b50a            >            lda zp1,x    ;precharge accu
2b40 : 28              >            plp
                        
2b41 : 0a                       asl a
                                tst_ax rASL,fASL,$ff-fnzc
2b42 : 08              >            php         ;save flags
2b43 : dd0902          >            cmp rASL,x    ;test result
2b46 : d0fe            >            bne *       ;trap
2b48 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2b49 : 497c            >            eor #($ff-fnzc|$30)
                       >
2b4b : dd1902          >            cmp fASL,x    ;test flags
2b4e : d0fe            >            bne *       ;trap
                        
2b50 : ca                       dex
2b51 : 10e8                     bpl tasl1
                        
2b53 : a203                     ldx #3
2b55 :                  tlsr
                                set_ax zp1,0
                       >            load_flag 0
2b55 : a900            >            lda #0
                       >
2b57 : 48              >            pha         ;use stack to load status
2b58 : b50a            >            lda zp1,x    ;precharge accu
2b5a : 28              >            plp
                        
2b5b : 4a                       lsr a
                                tst_ax rLSR,fLSR,0
2b5c : 08              >            php         ;save flags
2b5d : dd1102          >            cmp rLSR,x    ;test result
2b60 : d0fe            >            bne *       ;trap
2b62 : 68              >            pla         ;load status
                       >            eor_flag 0
2b63 : 4930            >            eor #(0|$30)
                       >
2b65 : dd2102          >            cmp fLSR,x    ;test flags
2b68 : d0fe            >            bne *       ;trap
                        
2b6a : ca                       dex
2b6b : 10e8                     bpl tlsr
2b6d : a203                     ldx #3
2b6f :                  tlsr1
                                set_ax zp1,$ff
                       >            load_flag $ff
2b6f : a9ff            >            lda #$ff
                       >
2b71 : 48              >            pha         ;use stack to load status
2b72 : b50a            >            lda zp1,x    ;precharge accu
2b74 : 28              >            plp
                        
2b75 : 4a                       lsr a
                                tst_ax rLSR,fLSR,$ff-fnzc
2b76 : 08              >            php         ;save flags
2b77 : dd1102          >            cmp rLSR,x    ;test result
2b7a : d0fe            >            bne *       ;trap
2b7c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2b7d : 497c            >            eor #($ff-fnzc|$30)
                       >
2b7f : dd2102          >            cmp fLSR,x    ;test flags
2b82 : d0fe            >            bne *       ;trap
                        
2b84 : ca                       dex
2b85 : 10e8                     bpl tlsr1
                        
2b87 : a203                     ldx #3
2b89 :                  trol
                                set_ax zp1,0
                       >            load_flag 0
2b89 : a900            >            lda #0
                       >
2b8b : 48              >            pha         ;use stack to load status
2b8c : b50a            >            lda zp1,x    ;precharge accu
2b8e : 28              >            plp
                        
2b8f : 2a                       rol a
                                tst_ax rROL,fROL,0
2b90 : 08              >            php         ;save flags
2b91 : dd0902          >            cmp rROL,x    ;test result
2b94 : d0fe            >            bne *       ;trap
2b96 : 68              >            pla         ;load status
                       >            eor_flag 0
2b97 : 4930            >            eor #(0|$30)
                       >
2b99 : dd1902          >            cmp fROL,x    ;test flags
2b9c : d0fe            >            bne *       ;trap
                        
2b9e : ca                       dex
2b9f : 10e8                     bpl trol
2ba1 : a203                     ldx #3
2ba3 :                  trol1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2ba3 : a9fe            >            lda #$ff-fc
                       >
2ba5 : 48              >            pha         ;use stack to load status
2ba6 : b50a            >            lda zp1,x    ;precharge accu
2ba8 : 28              >            plp
                        
2ba9 : 2a                       rol a
                                tst_ax rROL,fROL,$ff-fnzc
2baa : 08              >            php         ;save flags
2bab : dd0902          >            cmp rROL,x    ;test result
2bae : d0fe            >            bne *       ;trap
2bb0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2bb1 : 497c            >            eor #($ff-fnzc|$30)
                       >
2bb3 : dd1902          >            cmp fROL,x    ;test flags
2bb6 : d0fe            >            bne *       ;trap
                        
2bb8 : ca                       dex
2bb9 : 10e8                     bpl trol1
                        
2bbb : a203                     ldx #3
2bbd :                  trolc
                                set_ax zp1,fc
                       >            load_flag fc
2bbd : a901            >            lda #fc
                       >
2bbf : 48              >            pha         ;use stack to load status
2bc0 : b50a            >            lda zp1,x    ;precharge accu
2bc2 : 28              >            plp
                        
2bc3 : 2a                       rol a
                                tst_ax rROLc,fROLc,0
2bc4 : 08              >            php         ;save flags
2bc5 : dd0d02          >            cmp rROLc,x    ;test result
2bc8 : d0fe            >            bne *       ;trap
2bca : 68              >            pla         ;load status
                       >            eor_flag 0
2bcb : 4930            >            eor #(0|$30)
                       >
2bcd : dd1d02          >            cmp fROLc,x    ;test flags
2bd0 : d0fe            >            bne *       ;trap
                        
2bd2 : ca                       dex
2bd3 : 10e8                     bpl trolc
2bd5 : a203                     ldx #3
2bd7 :                  trolc1
                                set_ax zp1,$ff
                       >            load_flag $ff
2bd7 : a9ff            >            lda #$ff
                       >
2bd9 : 48              >            pha         ;use stack to load status
2bda : b50a            >            lda zp1,x    ;precharge accu
2bdc : 28              >            plp
                        
2bdd : 2a                       rol a
                                tst_ax rROLc,fROLc,$ff-fnzc
2bde : 08              >            php         ;save flags
2bdf : dd0d02          >            cmp rROLc,x    ;test result
2be2 : d0fe            >            bne *       ;trap
2be4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2be5 : 497c            >            eor #($ff-fnzc|$30)
                       >
2be7 : dd1d02          >            cmp fROLc,x    ;test flags
2bea : d0fe            >            bne *       ;trap
                        
2bec : ca                       dex
2bed : 10e8                     bpl trolc1
                        
2bef : a203                     ldx #3
2bf1 :                  tror
                                set_ax zp1,0
                       >            load_flag 0
2bf1 : a900            >            lda #0
                       >
2bf3 : 48              >            pha         ;use stack to load status
2bf4 : b50a            >            lda zp1,x    ;precharge accu
2bf6 : 28              >            plp
                        
2bf7 : 6a                       ror a
                                tst_ax rROR,fROR,0
2bf8 : 08              >            php         ;save flags
2bf9 : dd1102          >            cmp rROR,x    ;test result
2bfc : d0fe            >            bne *       ;trap
2bfe : 68              >            pla         ;load status
                       >            eor_flag 0
2bff : 4930            >            eor #(0|$30)
                       >
2c01 : dd2102          >            cmp fROR,x    ;test flags
2c04 : d0fe            >            bne *       ;trap
                        
2c06 : ca                       dex
2c07 : 10e8                     bpl tror
2c09 : a203                     ldx #3
2c0b :                  tror1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2c0b : a9fe            >            lda #$ff-fc
                       >
2c0d : 48              >            pha         ;use stack to load status
2c0e : b50a            >            lda zp1,x    ;precharge accu
2c10 : 28              >            plp
                        
2c11 : 6a                       ror a
                                tst_ax rROR,fROR,$ff-fnzc
2c12 : 08              >            php         ;save flags
2c13 : dd1102          >            cmp rROR,x    ;test result
2c16 : d0fe            >            bne *       ;trap
2c18 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c19 : 497c            >            eor #($ff-fnzc|$30)
                       >
2c1b : dd2102          >            cmp fROR,x    ;test flags
2c1e : d0fe            >            bne *       ;trap
                        
2c20 : ca                       dex
2c21 : 10e8                     bpl tror1
                        
2c23 : a203                     ldx #3
2c25 :                  trorc
                                set_ax zp1,fc
                       >            load_flag fc
2c25 : a901            >            lda #fc
                       >
2c27 : 48              >            pha         ;use stack to load status
2c28 : b50a            >            lda zp1,x    ;precharge accu
2c2a : 28              >            plp
                        
2c2b : 6a                       ror a
                                tst_ax rRORc,fRORc,0
2c2c : 08              >            php         ;save flags
2c2d : dd1502          >            cmp rRORc,x    ;test result
2c30 : d0fe            >            bne *       ;trap
2c32 : 68              >            pla         ;load status
                       >            eor_flag 0
2c33 : 4930            >            eor #(0|$30)
                       >
2c35 : dd2502          >            cmp fRORc,x    ;test flags
2c38 : d0fe            >            bne *       ;trap
                        
2c3a : ca                       dex
2c3b : 10e8                     bpl trorc
2c3d : a203                     ldx #3
2c3f :                  trorc1
                                set_ax zp1,$ff
                       >            load_flag $ff
2c3f : a9ff            >            lda #$ff
                       >
2c41 : 48              >            pha         ;use stack to load status
2c42 : b50a            >            lda zp1,x    ;precharge accu
2c44 : 28              >            plp
                        
2c45 : 6a                       ror a
                                tst_ax rRORc,fRORc,$ff-fnzc
2c46 : 08              >            php         ;save flags
2c47 : dd1502          >            cmp rRORc,x    ;test result
2c4a : d0fe            >            bne *       ;trap
2c4c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c4d : 497c            >            eor #($ff-fnzc|$30)
                       >
2c4f : dd2502          >            cmp fRORc,x    ;test flags
2c52 : d0fe            >            bne *       ;trap
                        
2c54 : ca                       dex
2c55 : 10e8                     bpl trorc1
                        
                        ; shifts - zeropage
2c57 : a203                     ldx #3
2c59 :                  tasl2
                                set_z zp1,0
                       >            load_flag 0
2c59 : a900            >            lda #0
                       >
2c5b : 48              >            pha         ;use stack to load status
2c5c : b50a            >            lda zp1,x    ;load to zeropage
2c5e : 850f            >            sta zpt
2c60 : 28              >            plp
                        
2c61 : 060f                     asl zpt
                                tst_z rASL,fASL,0
2c63 : 08              >            php         ;save flags
2c64 : a50f            >            lda zpt
2c66 : dd0902          >            cmp rASL,x    ;test result
2c69 : d0fe            >            bne *       ;trap
2c6b : 68              >            pla         ;load status
                       >            eor_flag 0
2c6c : 4930            >            eor #(0|$30)
                       >
2c6e : dd1902          >            cmp fASL,x    ;test flags
2c71 : d0fe            >            bne *       ;trap
                        
2c73 : ca                       dex
2c74 : 10e3                     bpl tasl2
2c76 : a203                     ldx #3
2c78 :                  tasl3
                                set_z zp1,$ff
                       >            load_flag $ff
2c78 : a9ff            >            lda #$ff
                       >
2c7a : 48              >            pha         ;use stack to load status
2c7b : b50a            >            lda zp1,x    ;load to zeropage
2c7d : 850f            >            sta zpt
2c7f : 28              >            plp
                        
2c80 : 060f                     asl zpt
                                tst_z rASL,fASL,$ff-fnzc
2c82 : 08              >            php         ;save flags
2c83 : a50f            >            lda zpt
2c85 : dd0902          >            cmp rASL,x    ;test result
2c88 : d0fe            >            bne *       ;trap
2c8a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c8b : 497c            >            eor #($ff-fnzc|$30)
                       >
2c8d : dd1902          >            cmp fASL,x    ;test flags
2c90 : d0fe            >            bne *       ;trap
                        
2c92 : ca                       dex
2c93 : 10e3                     bpl tasl3
                        
2c95 : a203                     ldx #3
2c97 :                  tlsr2
                                set_z zp1,0
                       >            load_flag 0
2c97 : a900            >            lda #0
                       >
2c99 : 48              >            pha         ;use stack to load status
2c9a : b50a            >            lda zp1,x    ;load to zeropage
2c9c : 850f            >            sta zpt
2c9e : 28              >            plp
                        
2c9f : 460f                     lsr zpt
                                tst_z rLSR,fLSR,0
2ca1 : 08              >            php         ;save flags
2ca2 : a50f            >            lda zpt
2ca4 : dd1102          >            cmp rLSR,x    ;test result
2ca7 : d0fe            >            bne *       ;trap
2ca9 : 68              >            pla         ;load status
                       >            eor_flag 0
2caa : 4930            >            eor #(0|$30)
                       >
2cac : dd2102          >            cmp fLSR,x    ;test flags
2caf : d0fe            >            bne *       ;trap
                        
2cb1 : ca                       dex
2cb2 : 10e3                     bpl tlsr2
2cb4 : a203                     ldx #3
2cb6 :                  tlsr3
                                set_z zp1,$ff
                       >            load_flag $ff
2cb6 : a9ff            >            lda #$ff
                       >
2cb8 : 48              >            pha         ;use stack to load status
2cb9 : b50a            >            lda zp1,x    ;load to zeropage
2cbb : 850f            >            sta zpt
2cbd : 28              >            plp
                        
2cbe : 460f                     lsr zpt
                                tst_z rLSR,fLSR,$ff-fnzc
2cc0 : 08              >            php         ;save flags
2cc1 : a50f            >            lda zpt
2cc3 : dd1102          >            cmp rLSR,x    ;test result
2cc6 : d0fe            >            bne *       ;trap
2cc8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2cc9 : 497c            >            eor #($ff-fnzc|$30)
                       >
2ccb : dd2102          >            cmp fLSR,x    ;test flags
2cce : d0fe            >            bne *       ;trap
                        
2cd0 : ca                       dex
2cd1 : 10e3                     bpl tlsr3
                        
2cd3 : a203                     ldx #3
2cd5 :                  trol2
                                set_z zp1,0
                       >            load_flag 0
2cd5 : a900            >            lda #0
                       >
2cd7 : 48              >            pha         ;use stack to load status
2cd8 : b50a            >            lda zp1,x    ;load to zeropage
2cda : 850f            >            sta zpt
2cdc : 28              >            plp
                        
2cdd : 260f                     rol zpt
                                tst_z rROL,fROL,0
2cdf : 08              >            php         ;save flags
2ce0 : a50f            >            lda zpt
2ce2 : dd0902          >            cmp rROL,x    ;test result
2ce5 : d0fe            >            bne *       ;trap
2ce7 : 68              >            pla         ;load status
                       >            eor_flag 0
2ce8 : 4930            >            eor #(0|$30)
                       >
2cea : dd1902          >            cmp fROL,x    ;test flags
2ced : d0fe            >            bne *       ;trap
                        
2cef : ca                       dex
2cf0 : 10e3                     bpl trol2
2cf2 : a203                     ldx #3
2cf4 :                  trol3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2cf4 : a9fe            >            lda #$ff-fc
                       >
2cf6 : 48              >            pha         ;use stack to load status
2cf7 : b50a            >            lda zp1,x    ;load to zeropage
2cf9 : 850f            >            sta zpt
2cfb : 28              >            plp
                        
2cfc : 260f                     rol zpt
                                tst_z rROL,fROL,$ff-fnzc
2cfe : 08              >            php         ;save flags
2cff : a50f            >            lda zpt
2d01 : dd0902          >            cmp rROL,x    ;test result
2d04 : d0fe            >            bne *       ;trap
2d06 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d07 : 497c            >            eor #($ff-fnzc|$30)
                       >
2d09 : dd1902          >            cmp fROL,x    ;test flags
2d0c : d0fe            >            bne *       ;trap
                        
2d0e : ca                       dex
2d0f : 10e3                     bpl trol3
                        
2d11 : a203                     ldx #3
2d13 :                  trolc2
                                set_z zp1,fc
                       >            load_flag fc
2d13 : a901            >            lda #fc
                       >
2d15 : 48              >            pha         ;use stack to load status
2d16 : b50a            >            lda zp1,x    ;load to zeropage
2d18 : 850f            >            sta zpt
2d1a : 28              >            plp
                        
2d1b : 260f                     rol zpt
                                tst_z rROLc,fROLc,0
2d1d : 08              >            php         ;save flags
2d1e : a50f            >            lda zpt
2d20 : dd0d02          >            cmp rROLc,x    ;test result
2d23 : d0fe            >            bne *       ;trap
2d25 : 68              >            pla         ;load status
                       >            eor_flag 0
2d26 : 4930            >            eor #(0|$30)
                       >
2d28 : dd1d02          >            cmp fROLc,x    ;test flags
2d2b : d0fe            >            bne *       ;trap
                        
2d2d : ca                       dex
2d2e : 10e3                     bpl trolc2
2d30 : a203                     ldx #3
2d32 :                  trolc3
                                set_z zp1,$ff
                       >            load_flag $ff
2d32 : a9ff            >            lda #$ff
                       >
2d34 : 48              >            pha         ;use stack to load status
2d35 : b50a            >            lda zp1,x    ;load to zeropage
2d37 : 850f            >            sta zpt
2d39 : 28              >            plp
                        
2d3a : 260f                     rol zpt
                                tst_z rROLc,fROLc,$ff-fnzc
2d3c : 08              >            php         ;save flags
2d3d : a50f            >            lda zpt
2d3f : dd0d02          >            cmp rROLc,x    ;test result
2d42 : d0fe            >            bne *       ;trap
2d44 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d45 : 497c            >            eor #($ff-fnzc|$30)
                       >
2d47 : dd1d02          >            cmp fROLc,x    ;test flags
2d4a : d0fe            >            bne *       ;trap
                        
2d4c : ca                       dex
2d4d : 10e3                     bpl trolc3
                        
2d4f : a203                     ldx #3
2d51 :                  tror2
                                set_z zp1,0
                       >            load_flag 0
2d51 : a900            >            lda #0
                       >
2d53 : 48              >            pha         ;use stack to load status
2d54 : b50a            >            lda zp1,x    ;load to zeropage
2d56 : 850f            >            sta zpt
2d58 : 28              >            plp
                        
2d59 : 660f                     ror zpt
                                tst_z rROR,fROR,0
2d5b : 08              >            php         ;save flags
2d5c : a50f            >            lda zpt
2d5e : dd1102          >            cmp rROR,x    ;test result
2d61 : d0fe            >            bne *       ;trap
2d63 : 68              >            pla         ;load status
                       >            eor_flag 0
2d64 : 4930            >            eor #(0|$30)
                       >
2d66 : dd2102          >            cmp fROR,x    ;test flags
2d69 : d0fe            >            bne *       ;trap
                        
2d6b : ca                       dex
2d6c : 10e3                     bpl tror2
2d6e : a203                     ldx #3
2d70 :                  tror3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2d70 : a9fe            >            lda #$ff-fc
                       >
2d72 : 48              >            pha         ;use stack to load status
2d73 : b50a            >            lda zp1,x    ;load to zeropage
2d75 : 850f            >            sta zpt
2d77 : 28              >            plp
                        
2d78 : 660f                     ror zpt
                                tst_z rROR,fROR,$ff-fnzc
2d7a : 08              >            php         ;save flags
2d7b : a50f            >            lda zpt
2d7d : dd1102          >            cmp rROR,x    ;test result
2d80 : d0fe            >            bne *       ;trap
2d82 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d83 : 497c            >            eor #($ff-fnzc|$30)
                       >
2d85 : dd2102          >            cmp fROR,x    ;test flags
2d88 : d0fe            >            bne *       ;trap
                        
2d8a : ca                       dex
2d8b : 10e3                     bpl tror3
                        
2d8d : a203                     ldx #3
2d8f :                  trorc2
                                set_z zp1,fc
                       >            load_flag fc
2d8f : a901            >            lda #fc
                       >
2d91 : 48              >            pha         ;use stack to load status
2d92 : b50a            >            lda zp1,x    ;load to zeropage
2d94 : 850f            >            sta zpt
2d96 : 28              >            plp
                        
2d97 : 660f                     ror zpt
                                tst_z rRORc,fRORc,0
2d99 : 08              >            php         ;save flags
2d9a : a50f            >            lda zpt
2d9c : dd1502          >            cmp rRORc,x    ;test result
2d9f : d0fe            >            bne *       ;trap
2da1 : 68              >            pla         ;load status
                       >            eor_flag 0
2da2 : 4930            >            eor #(0|$30)
                       >
2da4 : dd2502          >            cmp fRORc,x    ;test flags
2da7 : d0fe            >            bne *       ;trap
                        
2da9 : ca                       dex
2daa : 10e3                     bpl trorc2
2dac : a203                     ldx #3
2dae :                  trorc3
                                set_z zp1,$ff
                       >            load_flag $ff
2dae : a9ff            >            lda #$ff
                       >
2db0 : 48              >            pha         ;use stack to load status
2db1 : b50a            >            lda zp1,x    ;load to zeropage
2db3 : 850f            >            sta zpt
2db5 : 28              >            plp
                        
2db6 : 660f                     ror zpt
                                tst_z rRORc,fRORc,$ff-fnzc
2db8 : 08              >            php         ;save flags
2db9 : a50f            >            lda zpt
2dbb : dd1502          >            cmp rRORc,x    ;test result
2dbe : d0fe            >            bne *       ;trap
2dc0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2dc1 : 497c            >            eor #($ff-fnzc|$30)
                       >
2dc3 : dd2502          >            cmp fRORc,x    ;test flags
2dc6 : d0fe            >            bne *       ;trap
                        
2dc8 : ca                       dex
2dc9 : 10e3                     bpl trorc3
                        
                        ; shifts - absolute
2dcb : a203                     ldx #3
2dcd :                  tasl4
                                set_abs zp1,0
                       >            load_flag 0
2dcd : a900            >            lda #0
                       >
2dcf : 48              >            pha         ;use stack to load status
2dd0 : b50a            >            lda zp1,x    ;load to memory
2dd2 : 8d3302          >            sta abst
2dd5 : 28              >            plp
                        
2dd6 : 0e3302                   asl abst
                                tst_abs rASL,fASL,0
2dd9 : 08              >            php         ;save flags
2dda : ad3302          >            lda abst
2ddd : dd0902          >            cmp rASL,x    ;test result
2de0 : d0fe            >            bne *       ;trap
2de2 : 68              >            pla         ;load status
                       >            eor_flag 0
2de3 : 4930            >            eor #(0|$30)
                       >
2de5 : dd1902          >            cmp fASL,x    ;test flags
2de8 : d0fe            >            bne *       ;trap
                        
2dea : ca                       dex
2deb : 10e0                     bpl tasl4
2ded : a203                     ldx #3
2def :                  tasl5
                                set_abs zp1,$ff
                       >            load_flag $ff
2def : a9ff            >            lda #$ff
                       >
2df1 : 48              >            pha         ;use stack to load status
2df2 : b50a            >            lda zp1,x    ;load to memory
2df4 : 8d3302          >            sta abst
2df7 : 28              >            plp
                        
2df8 : 0e3302                   asl abst
                                tst_abs rASL,fASL,$ff-fnzc
2dfb : 08              >            php         ;save flags
2dfc : ad3302          >            lda abst
2dff : dd0902          >            cmp rASL,x    ;test result
2e02 : d0fe            >            bne *       ;trap
2e04 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2e05 : 497c            >            eor #($ff-fnzc|$30)
                       >
2e07 : dd1902          >            cmp fASL,x    ;test flags
2e0a : d0fe            >            bne *       ;trap
                        
2e0c : ca                       dex
2e0d : 10e0                     bpl tasl5
                        
2e0f : a203                     ldx #3
2e11 :                  tlsr4
                                set_abs zp1,0
                       >            load_flag 0
2e11 : a900            >            lda #0
                       >
2e13 : 48              >            pha         ;use stack to load status
2e14 : b50a            >            lda zp1,x    ;load to memory
2e16 : 8d3302          >            sta abst
2e19 : 28              >            plp
                        
2e1a : 4e3302                   lsr abst
                                tst_abs rLSR,fLSR,0
2e1d : 08              >            php         ;save flags
2e1e : ad3302          >            lda abst
2e21 : dd1102          >            cmp rLSR,x    ;test result
2e24 : d0fe            >            bne *       ;trap
2e26 : 68              >            pla         ;load status
                       >            eor_flag 0
2e27 : 4930            >            eor #(0|$30)
                       >
2e29 : dd2102          >            cmp fLSR,x    ;test flags
2e2c : d0fe            >            bne *       ;trap
                        
2e2e : ca                       dex
2e2f : 10e0                     bpl tlsr4
2e31 : a203                     ldx #3
2e33 :                  tlsr5
                                set_abs zp1,$ff
                       >            load_flag $ff
2e33 : a9ff            >            lda #$ff
                       >
2e35 : 48              >            pha         ;use stack to load status
2e36 : b50a            >            lda zp1,x    ;load to memory
2e38 : 8d3302          >            sta abst
2e3b : 28              >            plp
                        
2e3c : 4e3302                   lsr abst
                                tst_abs rLSR,fLSR,$ff-fnzc
2e3f : 08              >            php         ;save flags
2e40 : ad3302          >            lda abst
2e43 : dd1102          >            cmp rLSR,x    ;test result
2e46 : d0fe            >            bne *       ;trap
2e48 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2e49 : 497c            >            eor #($ff-fnzc|$30)
                       >
2e4b : dd2102          >            cmp fLSR,x    ;test flags
2e4e : d0fe            >            bne *       ;trap
                        
2e50 : ca                       dex
2e51 : 10e0                     bpl tlsr5
                        
2e53 : a203                     ldx #3
2e55 :                  trol4
                                set_abs zp1,0
                       >            load_flag 0
2e55 : a900            >            lda #0
                       >
2e57 : 48              >            pha         ;use stack to load status
2e58 : b50a            >            lda zp1,x    ;load to memory
2e5a : 8d3302          >            sta abst
2e5d : 28              >            plp
                        
2e5e : 2e3302                   rol abst
                                tst_abs rROL,fROL,0
2e61 : 08              >            php         ;save flags
2e62 : ad3302          >            lda abst
2e65 : dd0902          >            cmp rROL,x    ;test result
2e68 : d0fe            >            bne *       ;trap
2e6a : 68              >            pla         ;load status
                       >            eor_flag 0
2e6b : 4930            >            eor #(0|$30)
                       >
2e6d : dd1902          >            cmp fROL,x    ;test flags
2e70 : d0fe            >            bne *       ;trap
                        
2e72 : ca                       dex
2e73 : 10e0                     bpl trol4
2e75 : a203                     ldx #3
2e77 :                  trol5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
2e77 : a9fe            >            lda #$ff-fc
                       >
2e79 : 48              >            pha         ;use stack to load status
2e7a : b50a            >            lda zp1,x    ;load to memory
2e7c : 8d3302          >            sta abst
2e7f : 28              >            plp
                        
2e80 : 2e3302                   rol abst
                                tst_abs rROL,fROL,$ff-fnzc
2e83 : 08              >            php         ;save flags
2e84 : ad3302          >            lda abst
2e87 : dd0902          >            cmp rROL,x    ;test result
2e8a : d0fe            >            bne *       ;trap
2e8c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2e8d : 497c            >            eor #($ff-fnzc|$30)
                       >
2e8f : dd1902          >            cmp fROL,x    ;test flags
2e92 : d0fe            >            bne *       ;trap
                        
2e94 : ca                       dex
2e95 : 10e0                     bpl trol5
                        
2e97 : a203                     ldx #3
2e99 :                  trolc4
                                set_abs zp1,fc
                       >            load_flag fc
2e99 : a901            >            lda #fc
                       >
2e9b : 48              >            pha         ;use stack to load status
2e9c : b50a            >            lda zp1,x    ;load to memory
2e9e : 8d3302          >            sta abst
2ea1 : 28              >            plp
                        
2ea2 : 2e3302                   rol abst
                                tst_abs rROLc,fROLc,0
2ea5 : 08              >            php         ;save flags
2ea6 : ad3302          >            lda abst
2ea9 : dd0d02          >            cmp rROLc,x    ;test result
2eac : d0fe            >            bne *       ;trap
2eae : 68              >            pla         ;load status
                       >            eor_flag 0
2eaf : 4930            >            eor #(0|$30)
                       >
2eb1 : dd1d02          >            cmp fROLc,x    ;test flags
2eb4 : d0fe            >            bne *       ;trap
                        
2eb6 : ca                       dex
2eb7 : 10e0                     bpl trolc4
2eb9 : a203                     ldx #3
2ebb :                  trolc5
                                set_abs zp1,$ff
                       >            load_flag $ff
2ebb : a9ff            >            lda #$ff
                       >
2ebd : 48              >            pha         ;use stack to load status
2ebe : b50a            >            lda zp1,x    ;load to memory
2ec0 : 8d3302          >            sta abst
2ec3 : 28              >            plp
                        
2ec4 : 2e3302                   rol abst
                                tst_abs rROLc,fROLc,$ff-fnzc
2ec7 : 08              >            php         ;save flags
2ec8 : ad3302          >            lda abst
2ecb : dd0d02          >            cmp rROLc,x    ;test result
2ece : d0fe            >            bne *       ;trap
2ed0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2ed1 : 497c            >            eor #($ff-fnzc|$30)
                       >
2ed3 : dd1d02          >            cmp fROLc,x    ;test flags
2ed6 : d0fe            >            bne *       ;trap
                        
2ed8 : ca                       dex
2ed9 : 10e0                     bpl trolc5
                        
2edb : a203                     ldx #3
2edd :                  tror4
                                set_abs zp1,0
                       >            load_flag 0
2edd : a900            >            lda #0
                       >
2edf : 48              >            pha         ;use stack to load status
2ee0 : b50a            >            lda zp1,x    ;load to memory
2ee2 : 8d3302          >            sta abst
2ee5 : 28              >            plp
                        
2ee6 : 6e3302                   ror abst
                                tst_abs rROR,fROR,0
2ee9 : 08              >            php         ;save flags
2eea : ad3302          >            lda abst
2eed : dd1102          >            cmp rROR,x    ;test result
2ef0 : d0fe            >            bne *       ;trap
2ef2 : 68              >            pla         ;load status
                       >            eor_flag 0
2ef3 : 4930            >            eor #(0|$30)
                       >
2ef5 : dd2102          >            cmp fROR,x    ;test flags
2ef8 : d0fe            >            bne *       ;trap
                        
2efa : ca                       dex
2efb : 10e0                     bpl tror4
2efd : a203                     ldx #3
2eff :                  tror5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
2eff : a9fe            >            lda #$ff-fc
                       >
2f01 : 48              >            pha         ;use stack to load status
2f02 : b50a            >            lda zp1,x    ;load to memory
2f04 : 8d3302          >            sta abst
2f07 : 28              >            plp
                        
2f08 : 6e3302                   ror abst
                                tst_abs rROR,fROR,$ff-fnzc
2f0b : 08              >            php         ;save flags
2f0c : ad3302          >            lda abst
2f0f : dd1102          >            cmp rROR,x    ;test result
2f12 : d0fe            >            bne *       ;trap
2f14 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f15 : 497c            >            eor #($ff-fnzc|$30)
                       >
2f17 : dd2102          >            cmp fROR,x    ;test flags
2f1a : d0fe            >            bne *       ;trap
                        
2f1c : ca                       dex
2f1d : 10e0                     bpl tror5
                        
2f1f : a203                     ldx #3
2f21 :                  trorc4
                                set_abs zp1,fc
                       >            load_flag fc
2f21 : a901            >            lda #fc
                       >
2f23 : 48              >            pha         ;use stack to load status
2f24 : b50a            >            lda zp1,x    ;load to memory
2f26 : 8d3302          >            sta abst
2f29 : 28              >            plp
                        
2f2a : 6e3302                   ror abst
                                tst_abs rRORc,fRORc,0
2f2d : 08              >            php         ;save flags
2f2e : ad3302          >            lda abst
2f31 : dd1502          >            cmp rRORc,x    ;test result
2f34 : d0fe            >            bne *       ;trap
2f36 : 68              >            pla         ;load status
                       >            eor_flag 0
2f37 : 4930            >            eor #(0|$30)
                       >
2f39 : dd2502          >            cmp fRORc,x    ;test flags
2f3c : d0fe            >            bne *       ;trap
                        
2f3e : ca                       dex
2f3f : 10e0                     bpl trorc4
2f41 : a203                     ldx #3
2f43 :                  trorc5
                                set_abs zp1,$ff
                       >            load_flag $ff
2f43 : a9ff            >            lda #$ff
                       >
2f45 : 48              >            pha         ;use stack to load status
2f46 : b50a            >            lda zp1,x    ;load to memory
2f48 : 8d3302          >            sta abst
2f4b : 28              >            plp
                        
2f4c : 6e3302                   ror abst
                                tst_abs rRORc,fRORc,$ff-fnzc
2f4f : 08              >            php         ;save flags
2f50 : ad3302          >            lda abst
2f53 : dd1502          >            cmp rRORc,x    ;test result
2f56 : d0fe            >            bne *       ;trap
2f58 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f59 : 497c            >            eor #($ff-fnzc|$30)
                       >
2f5b : dd2502          >            cmp fRORc,x    ;test flags
2f5e : d0fe            >            bne *       ;trap
                        
2f60 : ca                       dex
2f61 : 10e0                     bpl trorc5
                        
                        ; shifts - zp indexed
2f63 : a203                     ldx #3
2f65 :                  tasl6
                                set_zx zp1,0
                       >            load_flag 0
2f65 : a900            >            lda #0
                       >
2f67 : 48              >            pha         ;use stack to load status
2f68 : b50a            >            lda zp1,x    ;load to zeropage
2f6a : 950f            >            sta zpt,x
2f6c : 28              >            plp
                        
2f6d : 160f                     asl zpt,x
                                tst_zx rASL,fASL,0
2f6f : 08              >            php         ;save flags
2f70 : b50f            >            lda zpt,x
2f72 : dd0902          >            cmp rASL,x    ;test result
2f75 : d0fe            >            bne *       ;trap
2f77 : 68              >            pla         ;load status
                       >            eor_flag 0
2f78 : 4930            >            eor #(0|$30)
                       >
2f7a : dd1902          >            cmp fASL,x    ;test flags
2f7d : d0fe            >            bne *       ;trap
                        
2f7f : ca                       dex
2f80 : 10e3                     bpl tasl6
2f82 : a203                     ldx #3
2f84 :                  tasl7
                                set_zx zp1,$ff
                       >            load_flag $ff
2f84 : a9ff            >            lda #$ff
                       >
2f86 : 48              >            pha         ;use stack to load status
2f87 : b50a            >            lda zp1,x    ;load to zeropage
2f89 : 950f            >            sta zpt,x
2f8b : 28              >            plp
                        
2f8c : 160f                     asl zpt,x
                                tst_zx rASL,fASL,$ff-fnzc
2f8e : 08              >            php         ;save flags
2f8f : b50f            >            lda zpt,x
2f91 : dd0902          >            cmp rASL,x    ;test result
2f94 : d0fe            >            bne *       ;trap
2f96 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f97 : 497c            >            eor #($ff-fnzc|$30)
                       >
2f99 : dd1902          >            cmp fASL,x    ;test flags
2f9c : d0fe            >            bne *       ;trap
                        
2f9e : ca                       dex
2f9f : 10e3                     bpl tasl7
                        
2fa1 : a203                     ldx #3
2fa3 :                  tlsr6
                                set_zx zp1,0
                       >            load_flag 0
2fa3 : a900            >            lda #0
                       >
2fa5 : 48              >            pha         ;use stack to load status
2fa6 : b50a            >            lda zp1,x    ;load to zeropage
2fa8 : 950f            >            sta zpt,x
2faa : 28              >            plp
                        
2fab : 560f                     lsr zpt,x
                                tst_zx rLSR,fLSR,0
2fad : 08              >            php         ;save flags
2fae : b50f            >            lda zpt,x
2fb0 : dd1102          >            cmp rLSR,x    ;test result
2fb3 : d0fe            >            bne *       ;trap
2fb5 : 68              >            pla         ;load status
                       >            eor_flag 0
2fb6 : 4930            >            eor #(0|$30)
                       >
2fb8 : dd2102          >            cmp fLSR,x    ;test flags
2fbb : d0fe            >            bne *       ;trap
                        
2fbd : ca                       dex
2fbe : 10e3                     bpl tlsr6
2fc0 : a203                     ldx #3
2fc2 :                  tlsr7
                                set_zx zp1,$ff
                       >            load_flag $ff
2fc2 : a9ff            >            lda #$ff
                       >
2fc4 : 48              >            pha         ;use stack to load status
2fc5 : b50a            >            lda zp1,x    ;load to zeropage
2fc7 : 950f            >            sta zpt,x
2fc9 : 28              >            plp
                        
2fca : 560f                     lsr zpt,x
                                tst_zx rLSR,fLSR,$ff-fnzc
2fcc : 08              >            php         ;save flags
2fcd : b50f            >            lda zpt,x
2fcf : dd1102          >            cmp rLSR,x    ;test result
2fd2 : d0fe            >            bne *       ;trap
2fd4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2fd5 : 497c            >            eor #($ff-fnzc|$30)
                       >
2fd7 : dd2102          >            cmp fLSR,x    ;test flags
2fda : d0fe            >            bne *       ;trap
                        
2fdc : ca                       dex
2fdd : 10e3                     bpl tlsr7
                        
2fdf : a203                     ldx #3
2fe1 :                  trol6
                                set_zx zp1,0
                       >            load_flag 0
2fe1 : a900            >            lda #0
                       >
2fe3 : 48              >            pha         ;use stack to load status
2fe4 : b50a            >            lda zp1,x    ;load to zeropage
2fe6 : 950f            >            sta zpt,x
2fe8 : 28              >            plp
                        
2fe9 : 360f                     rol zpt,x
                                tst_zx rROL,fROL,0
2feb : 08              >            php         ;save flags
2fec : b50f            >            lda zpt,x
2fee : dd0902          >            cmp rROL,x    ;test result
2ff1 : d0fe            >            bne *       ;trap
2ff3 : 68              >            pla         ;load status
                       >            eor_flag 0
2ff4 : 4930            >            eor #(0|$30)
                       >
2ff6 : dd1902          >            cmp fROL,x    ;test flags
2ff9 : d0fe            >            bne *       ;trap
                        
2ffb : ca                       dex
2ffc : 10e3                     bpl trol6
2ffe : a203                     ldx #3
3000 :                  trol7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
3000 : a9fe            >            lda #$ff-fc
                       >
3002 : 48              >            pha         ;use stack to load status
3003 : b50a            >            lda zp1,x    ;load to zeropage
3005 : 950f            >            sta zpt,x
3007 : 28              >            plp
                        
3008 : 360f                     rol zpt,x
                                tst_zx rROL,fROL,$ff-fnzc
300a : 08              >            php         ;save flags
300b : b50f            >            lda zpt,x
300d : dd0902          >            cmp rROL,x    ;test result
3010 : d0fe            >            bne *       ;trap
3012 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3013 : 497c            >            eor #($ff-fnzc|$30)
                       >
3015 : dd1902          >            cmp fROL,x    ;test flags
3018 : d0fe            >            bne *       ;trap
                        
301a : ca                       dex
301b : 10e3                     bpl trol7
                        
301d : a203                     ldx #3
301f :                  trolc6
                                set_zx zp1,fc
                       >            load_flag fc
301f : a901            >            lda #fc
                       >
3021 : 48              >            pha         ;use stack to load status
3022 : b50a            >            lda zp1,x    ;load to zeropage
3024 : 950f            >            sta zpt,x
3026 : 28              >            plp
                        
3027 : 360f                     rol zpt,x
                                tst_zx rROLc,fROLc,0
3029 : 08              >            php         ;save flags
302a : b50f            >            lda zpt,x
302c : dd0d02          >            cmp rROLc,x    ;test result
302f : d0fe            >            bne *       ;trap
3031 : 68              >            pla         ;load status
                       >            eor_flag 0
3032 : 4930            >            eor #(0|$30)
                       >
3034 : dd1d02          >            cmp fROLc,x    ;test flags
3037 : d0fe            >            bne *       ;trap
                        
3039 : ca                       dex
303a : 10e3                     bpl trolc6
303c : a203                     ldx #3
303e :                  trolc7
                                set_zx zp1,$ff
                       >            load_flag $ff
303e : a9ff            >            lda #$ff
                       >
3040 : 48              >            pha         ;use stack to load status
3041 : b50a            >            lda zp1,x    ;load to zeropage
3043 : 950f            >            sta zpt,x
3045 : 28              >            plp
                        
3046 : 360f                     rol zpt,x
                                tst_zx rROLc,fROLc,$ff-fnzc
3048 : 08              >            php         ;save flags
3049 : b50f            >            lda zpt,x
304b : dd0d02          >            cmp rROLc,x    ;test result
304e : d0fe            >            bne *       ;trap
3050 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3051 : 497c            >            eor #($ff-fnzc|$30)
                       >
3053 : dd1d02          >            cmp fROLc,x    ;test flags
3056 : d0fe            >            bne *       ;trap
                        
3058 : ca                       dex
3059 : 10e3                     bpl trolc7
                        
305b : a203                     ldx #3
305d :                  tror6
                                set_zx zp1,0
                       >            load_flag 0
305d : a900            >            lda #0
                       >
305f : 48              >            pha         ;use stack to load status
3060 : b50a            >            lda zp1,x    ;load to zeropage
3062 : 950f            >            sta zpt,x
3064 : 28              >            plp
                        
3065 : 760f                     ror zpt,x
                                tst_zx rROR,fROR,0
3067 : 08              >            php         ;save flags
3068 : b50f            >            lda zpt,x
306a : dd1102          >            cmp rROR,x    ;test result
306d : d0fe            >            bne *       ;trap
306f : 68              >            pla         ;load status
                       >            eor_flag 0
3070 : 4930            >            eor #(0|$30)
                       >
3072 : dd2102          >            cmp fROR,x    ;test flags
3075 : d0fe            >            bne *       ;trap
                        
3077 : ca                       dex
3078 : 10e3                     bpl tror6
307a : a203                     ldx #3
307c :                  tror7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
307c : a9fe            >            lda #$ff-fc
                       >
307e : 48              >            pha         ;use stack to load status
307f : b50a            >            lda zp1,x    ;load to zeropage
3081 : 950f            >            sta zpt,x
3083 : 28              >            plp
                        
3084 : 760f                     ror zpt,x
                                tst_zx rROR,fROR,$ff-fnzc
3086 : 08              >            php         ;save flags
3087 : b50f            >            lda zpt,x
3089 : dd1102          >            cmp rROR,x    ;test result
308c : d0fe            >            bne *       ;trap
308e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
308f : 497c            >            eor #($ff-fnzc|$30)
                       >
3091 : dd2102          >            cmp fROR,x    ;test flags
3094 : d0fe            >            bne *       ;trap
                        
3096 : ca                       dex
3097 : 10e3                     bpl tror7
                        
3099 : a203                     ldx #3
309b :                  trorc6
                                set_zx zp1,fc
                       >            load_flag fc
309b : a901            >            lda #fc
                       >
309d : 48              >            pha         ;use stack to load status
309e : b50a            >            lda zp1,x    ;load to zeropage
30a0 : 950f            >            sta zpt,x
30a2 : 28              >            plp
                        
30a3 : 760f                     ror zpt,x
                                tst_zx rRORc,fRORc,0
30a5 : 08              >            php         ;save flags
30a6 : b50f            >            lda zpt,x
30a8 : dd1502          >            cmp rRORc,x    ;test result
30ab : d0fe            >            bne *       ;trap
30ad : 68              >            pla         ;load status
                       >            eor_flag 0
30ae : 4930            >            eor #(0|$30)
                       >
30b0 : dd2502          >            cmp fRORc,x    ;test flags
30b3 : d0fe            >            bne *       ;trap
                        
30b5 : ca                       dex
30b6 : 10e3                     bpl trorc6
30b8 : a203                     ldx #3
30ba :                  trorc7
                                set_zx zp1,$ff
                       >            load_flag $ff
30ba : a9ff            >            lda #$ff
                       >
30bc : 48              >            pha         ;use stack to load status
30bd : b50a            >            lda zp1,x    ;load to zeropage
30bf : 950f            >            sta zpt,x
30c1 : 28              >            plp
                        
30c2 : 760f                     ror zpt,x
                                tst_zx rRORc,fRORc,$ff-fnzc
30c4 : 08              >            php         ;save flags
30c5 : b50f            >            lda zpt,x
30c7 : dd1502          >            cmp rRORc,x    ;test result
30ca : d0fe            >            bne *       ;trap
30cc : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
30cd : 497c            >            eor #($ff-fnzc|$30)
                       >
30cf : dd2502          >            cmp fRORc,x    ;test flags
30d2 : d0fe            >            bne *       ;trap
                        
30d4 : ca                       dex
30d5 : 10e3                     bpl trorc7
                        
                        ; shifts - abs indexed
30d7 : a203                     ldx #3
30d9 :                  tasl8
                                set_absx zp1,0
                       >            load_flag 0
30d9 : a900            >            lda #0
                       >
30db : 48              >            pha         ;use stack to load status
30dc : b50a            >            lda zp1,x    ;load to memory
30de : 9d3302          >            sta abst,x
30e1 : 28              >            plp
                        
30e2 : 1e3302                   asl abst,x
                                tst_absx rASL,fASL,0
30e5 : 08              >            php         ;save flags
30e6 : bd3302          >            lda abst,x
30e9 : dd0902          >            cmp rASL,x    ;test result
30ec : d0fe            >            bne *       ;trap
30ee : 68              >            pla         ;load status
                       >            eor_flag 0
30ef : 4930            >            eor #(0|$30)
                       >
30f1 : dd1902          >            cmp fASL,x    ;test flags
30f4 : d0fe            >            bne *       ;trap
                        
30f6 : ca                       dex
30f7 : 10e0                     bpl tasl8
30f9 : a203                     ldx #3
30fb :                  tasl9
                                set_absx zp1,$ff
                       >            load_flag $ff
30fb : a9ff            >            lda #$ff
                       >
30fd : 48              >            pha         ;use stack to load status
30fe : b50a            >            lda zp1,x    ;load to memory
3100 : 9d3302          >            sta abst,x
3103 : 28              >            plp
                        
3104 : 1e3302                   asl abst,x
                                tst_absx rASL,fASL,$ff-fnzc
3107 : 08              >            php         ;save flags
3108 : bd3302          >            lda abst,x
310b : dd0902          >            cmp rASL,x    ;test result
310e : d0fe            >            bne *       ;trap
3110 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3111 : 497c            >            eor #($ff-fnzc|$30)
                       >
3113 : dd1902          >            cmp fASL,x    ;test flags
3116 : d0fe            >            bne *       ;trap
                        
3118 : ca                       dex
3119 : 10e0                     bpl tasl9
                        
311b : a203                     ldx #3
311d :                  tlsr8
                                set_absx zp1,0
                       >            load_flag 0
311d : a900            >            lda #0
                       >
311f : 48              >            pha         ;use stack to load status
3120 : b50a            >            lda zp1,x    ;load to memory
3122 : 9d3302          >            sta abst,x
3125 : 28              >            plp
                        
3126 : 5e3302                   lsr abst,x
                                tst_absx rLSR,fLSR,0
3129 : 08              >            php         ;save flags
312a : bd3302          >            lda abst,x
312d : dd1102          >            cmp rLSR,x    ;test result
3130 : d0fe            >            bne *       ;trap
3132 : 68              >            pla         ;load status
                       >            eor_flag 0
3133 : 4930            >            eor #(0|$30)
                       >
3135 : dd2102          >            cmp fLSR,x    ;test flags
3138 : d0fe            >            bne *       ;trap
                        
313a : ca                       dex
313b : 10e0                     bpl tlsr8
313d : a203                     ldx #3
313f :                  tlsr9
                                set_absx zp1,$ff
                       >            load_flag $ff
313f : a9ff            >            lda #$ff
                       >
3141 : 48              >            pha         ;use stack to load status
3142 : b50a            >            lda zp1,x    ;load to memory
3144 : 9d3302          >            sta abst,x
3147 : 28              >            plp
                        
3148 : 5e3302                   lsr abst,x
                                tst_absx rLSR,fLSR,$ff-fnzc
314b : 08              >            php         ;save flags
314c : bd3302          >            lda abst,x
314f : dd1102          >            cmp rLSR,x    ;test result
3152 : d0fe            >            bne *       ;trap
3154 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3155 : 497c            >            eor #($ff-fnzc|$30)
                       >
3157 : dd2102          >            cmp fLSR,x    ;test flags
315a : d0fe            >            bne *       ;trap
                        
315c : ca                       dex
315d : 10e0                     bpl tlsr9
                        
315f : a203                     ldx #3
3161 :                  trol8
                                set_absx zp1,0
                       >            load_flag 0
3161 : a900            >            lda #0
                       >
3163 : 48              >            pha         ;use stack to load status
3164 : b50a            >            lda zp1,x    ;load to memory
3166 : 9d3302          >            sta abst,x
3169 : 28              >            plp
                        
316a : 3e3302                   rol abst,x
                                tst_absx rROL,fROL,0
316d : 08              >            php         ;save flags
316e : bd3302          >            lda abst,x
3171 : dd0902          >            cmp rROL,x    ;test result
3174 : d0fe            >            bne *       ;trap
3176 : 68              >            pla         ;load status
                       >            eor_flag 0
3177 : 4930            >            eor #(0|$30)
                       >
3179 : dd1902          >            cmp fROL,x    ;test flags
317c : d0fe            >            bne *       ;trap
                        
317e : ca                       dex
317f : 10e0                     bpl trol8
3181 : a203                     ldx #3
3183 :                  trol9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
3183 : a9fe            >            lda #$ff-fc
                       >
3185 : 48              >            pha         ;use stack to load status
3186 : b50a            >            lda zp1,x    ;load to memory
3188 : 9d3302          >            sta abst,x
318b : 28              >            plp
                        
318c : 3e3302                   rol abst,x
                                tst_absx rROL,fROL,$ff-fnzc
318f : 08              >            php         ;save flags
3190 : bd3302          >            lda abst,x
3193 : dd0902          >            cmp rROL,x    ;test result
3196 : d0fe            >            bne *       ;trap
3198 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3199 : 497c            >            eor #($ff-fnzc|$30)
                       >
319b : dd1902          >            cmp fROL,x    ;test flags
319e : d0fe            >            bne *       ;trap
                        
31a0 : ca                       dex
31a1 : 10e0                     bpl trol9
                        
31a3 : a203                     ldx #3
31a5 :                  trolc8
                                set_absx zp1,fc
                       >            load_flag fc
31a5 : a901            >            lda #fc
                       >
31a7 : 48              >            pha         ;use stack to load status
31a8 : b50a            >            lda zp1,x    ;load to memory
31aa : 9d3302          >            sta abst,x
31ad : 28              >            plp
                        
31ae : 3e3302                   rol abst,x
                                tst_absx rROLc,fROLc,0
31b1 : 08              >            php         ;save flags
31b2 : bd3302          >            lda abst,x
31b5 : dd0d02          >            cmp rROLc,x    ;test result
31b8 : d0fe            >            bne *       ;trap
31ba : 68              >            pla         ;load status
                       >            eor_flag 0
31bb : 4930            >            eor #(0|$30)
                       >
31bd : dd1d02          >            cmp fROLc,x    ;test flags
31c0 : d0fe            >            bne *       ;trap
                        
31c2 : ca                       dex
31c3 : 10e0                     bpl trolc8
31c5 : a203                     ldx #3
31c7 :                  trolc9
                                set_absx zp1,$ff
                       >            load_flag $ff
31c7 : a9ff            >            lda #$ff
                       >
31c9 : 48              >            pha         ;use stack to load status
31ca : b50a            >            lda zp1,x    ;load to memory
31cc : 9d3302          >            sta abst,x
31cf : 28              >            plp
                        
31d0 : 3e3302                   rol abst,x
                                tst_absx rROLc,fROLc,$ff-fnzc
31d3 : 08              >            php         ;save flags
31d4 : bd3302          >            lda abst,x
31d7 : dd0d02          >            cmp rROLc,x    ;test result
31da : d0fe            >            bne *       ;trap
31dc : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
31dd : 497c            >            eor #($ff-fnzc|$30)
                       >
31df : dd1d02          >            cmp fROLc,x    ;test flags
31e2 : d0fe            >            bne *       ;trap
                        
31e4 : ca                       dex
31e5 : 10e0                     bpl trolc9
                        
31e7 : a203                     ldx #3
31e9 :                  tror8
                                set_absx zp1,0
                       >            load_flag 0
31e9 : a900            >            lda #0
                       >
31eb : 48              >            pha         ;use stack to load status
31ec : b50a            >            lda zp1,x    ;load to memory
31ee : 9d3302          >            sta abst,x
31f1 : 28              >            plp
                        
31f2 : 7e3302                   ror abst,x
                                tst_absx rROR,fROR,0
31f5 : 08              >            php         ;save flags
31f6 : bd3302          >            lda abst,x
31f9 : dd1102          >            cmp rROR,x    ;test result
31fc : d0fe            >            bne *       ;trap
31fe : 68              >            pla         ;load status
                       >            eor_flag 0
31ff : 4930            >            eor #(0|$30)
                       >
3201 : dd2102          >            cmp fROR,x    ;test flags
3204 : d0fe            >            bne *       ;trap
                        
3206 : ca                       dex
3207 : 10e0                     bpl tror8
3209 : a203                     ldx #3
320b :                  tror9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
320b : a9fe            >            lda #$ff-fc
                       >
320d : 48              >            pha         ;use stack to load status
320e : b50a            >            lda zp1,x    ;load to memory
3210 : 9d3302          >            sta abst,x
3213 : 28              >            plp
                        
3214 : 7e3302                   ror abst,x
                                tst_absx rROR,fROR,$ff-fnzc
3217 : 08              >            php         ;save flags
3218 : bd3302          >            lda abst,x
321b : dd1102          >            cmp rROR,x    ;test result
321e : d0fe            >            bne *       ;trap
3220 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3221 : 497c            >            eor #($ff-fnzc|$30)
                       >
3223 : dd2102          >            cmp fROR,x    ;test flags
3226 : d0fe            >            bne *       ;trap
                        
3228 : ca                       dex
3229 : 10e0                     bpl tror9
                        
322b : a203                     ldx #3
322d :                  trorc8
                                set_absx zp1,fc
                       >            load_flag fc
322d : a901            >            lda #fc
                       >
322f : 48              >            pha         ;use stack to load status
3230 : b50a            >            lda zp1,x    ;load to memory
3232 : 9d3302          >            sta abst,x
3235 : 28              >            plp
                        
3236 : 7e3302                   ror abst,x
                                tst_absx rRORc,fRORc,0
3239 : 08              >            php         ;save flags
323a : bd3302          >            lda abst,x
323d : dd1502          >            cmp rRORc,x    ;test result
3240 : d0fe            >            bne *       ;trap
3242 : 68              >            pla         ;load status
                       >            eor_flag 0
3243 : 4930            >            eor #(0|$30)
                       >
3245 : dd2502          >            cmp fRORc,x    ;test flags
3248 : d0fe            >            bne *       ;trap
                        
324a : ca                       dex
324b : 10e0                     bpl trorc8
324d : a203                     ldx #3
324f :                  trorc9
                                set_absx zp1,$ff
                       >            load_flag $ff
324f : a9ff            >            lda #$ff
                       >
3251 : 48              >            pha         ;use stack to load status
3252 : b50a            >            lda zp1,x    ;load to memory
3254 : 9d3302          >            sta abst,x
3257 : 28              >            plp
                        
3258 : 7e3302                   ror abst,x
                                tst_absx rRORc,fRORc,$ff-fnzc
325b : 08              >            php         ;save flags
325c : bd3302          >            lda abst,x
325f : dd1502          >            cmp rRORc,x    ;test result
3262 : d0fe            >            bne *       ;trap
3264 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3265 : 497c            >            eor #($ff-fnzc|$30)
                       >
3267 : dd2502          >            cmp fRORc,x    ;test flags
326a : d0fe            >            bne *       ;trap
                        
326c : ca                       dex
326d : 10e0                     bpl trorc9
                        
                        ; testing memory increment/decrement - INC DEC all addressing modes
                        ; zeropage
326f : a200                     ldx #0
3271 : a97e                     lda #$7e
3273 : 850f                     sta zpt
3275 :                  tinc
                                set_stat 0
                       >            load_flag 0
3275 : a900            >            lda #0
                       >
3277 : 48              >            pha         ;use stack to load status
3278 : 28              >            plp
                        
3279 : e60f                     inc zpt
                                tst_z rINC,fINC,0
327b : 08              >            php         ;save flags
327c : a50f            >            lda zpt
327e : dd2902          >            cmp rINC,x    ;test result
3281 : d0fe            >            bne *       ;trap
3283 : 68              >            pla         ;load status
                       >            eor_flag 0
3284 : 4930            >            eor #(0|$30)
                       >
3286 : dd2e02          >            cmp fINC,x    ;test flags
3289 : d0fe            >            bne *       ;trap
                        
328b : e8                       inx
328c : e002                     cpx #2
328e : d004                     bne tinc1
3290 : a9fe                     lda #$fe
3292 : 850f                     sta zpt
3294 : e005             tinc1   cpx #5
3296 : d0dd                     bne tinc
3298 : ca                       dex
3299 : e60f                     inc zpt
329b :                  tdec
                                set_stat 0
                       >            load_flag 0
329b : a900            >            lda #0
                       >
329d : 48              >            pha         ;use stack to load status
329e : 28              >            plp
                        
329f : c60f                     dec zpt
                                tst_z rINC,fINC,0
32a1 : 08              >            php         ;save flags
32a2 : a50f            >            lda zpt
32a4 : dd2902          >            cmp rINC,x    ;test result
32a7 : d0fe            >            bne *       ;trap
32a9 : 68              >            pla         ;load status
                       >            eor_flag 0
32aa : 4930            >            eor #(0|$30)
                       >
32ac : dd2e02          >            cmp fINC,x    ;test flags
32af : d0fe            >            bne *       ;trap
                        
32b1 : ca                       dex
32b2 : 300a                     bmi tdec1
32b4 : e001                     cpx #1
32b6 : d0e3                     bne tdec
32b8 : a981                     lda #$81
32ba : 850f                     sta zpt
32bc : d0dd                     bne tdec
32be :                  tdec1
32be : a200                     ldx #0
32c0 : a97e                     lda #$7e
32c2 : 850f                     sta zpt
32c4 :                  tinc10
                                set_stat $ff
                       >            load_flag $ff
32c4 : a9ff            >            lda #$ff
                       >
32c6 : 48              >            pha         ;use stack to load status
32c7 : 28              >            plp
                        
32c8 : e60f                     inc zpt
                                tst_z rINC,fINC,$ff-fnz
32ca : 08              >            php         ;save flags
32cb : a50f            >            lda zpt
32cd : dd2902          >            cmp rINC,x    ;test result
32d0 : d0fe            >            bne *       ;trap
32d2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
32d3 : 497d            >            eor #($ff-fnz|$30)
                       >
32d5 : dd2e02          >            cmp fINC,x    ;test flags
32d8 : d0fe            >            bne *       ;trap
                        
32da : e8                       inx
32db : e002                     cpx #2
32dd : d004                     bne tinc11
32df : a9fe                     lda #$fe
32e1 : 850f                     sta zpt
32e3 : e005             tinc11  cpx #5
32e5 : d0dd                     bne tinc10
32e7 : ca                       dex
32e8 : e60f                     inc zpt
32ea :                  tdec10
                                set_stat $ff
                       >            load_flag $ff
32ea : a9ff            >            lda #$ff
                       >
32ec : 48              >            pha         ;use stack to load status
32ed : 28              >            plp
                        
32ee : c60f                     dec zpt
                                tst_z rINC,fINC,$ff-fnz
32f0 : 08              >            php         ;save flags
32f1 : a50f            >            lda zpt
32f3 : dd2902          >            cmp rINC,x    ;test result
32f6 : d0fe            >            bne *       ;trap
32f8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
32f9 : 497d            >            eor #($ff-fnz|$30)
                       >
32fb : dd2e02          >            cmp fINC,x    ;test flags
32fe : d0fe            >            bne *       ;trap
                        
3300 : ca                       dex
3301 : 300a                     bmi tdec11
3303 : e001                     cpx #1
3305 : d0e3                     bne tdec10
3307 : a981                     lda #$81
3309 : 850f                     sta zpt
330b : d0dd                     bne tdec10
330d :                  tdec11
                        
                        ; absolute memory
330d : a200                     ldx #0
330f : a97e                     lda #$7e
3311 : 8d3302                   sta abst
3314 :                  tinc2
                                set_stat 0
                       >            load_flag 0
3314 : a900            >            lda #0
                       >
3316 : 48              >            pha         ;use stack to load status
3317 : 28              >            plp
                        
3318 : ee3302                   inc abst
                                tst_abs rINC,fINC,0
331b : 08              >            php         ;save flags
331c : ad3302          >            lda abst
331f : dd2902          >            cmp rINC,x    ;test result
3322 : d0fe            >            bne *       ;trap
3324 : 68              >            pla         ;load status
                       >            eor_flag 0
3325 : 4930            >            eor #(0|$30)
                       >
3327 : dd2e02          >            cmp fINC,x    ;test flags
332a : d0fe            >            bne *       ;trap
                        
332c : e8                       inx
332d : e002                     cpx #2
332f : d005                     bne tinc3
3331 : a9fe                     lda #$fe
3333 : 8d3302                   sta abst
3336 : e005             tinc3   cpx #5
3338 : d0da                     bne tinc2
333a : ca                       dex
333b : ee3302                   inc abst
333e :                  tdec2
                                set_stat 0
                       >            load_flag 0
333e : a900            >            lda #0
                       >
3340 : 48              >            pha         ;use stack to load status
3341 : 28              >            plp
                        
3342 : ce3302                   dec abst
                                tst_abs rINC,fINC,0
3345 : 08              >            php         ;save flags
3346 : ad3302          >            lda abst
3349 : dd2902          >            cmp rINC,x    ;test result
334c : d0fe            >            bne *       ;trap
334e : 68              >            pla         ;load status
                       >            eor_flag 0
334f : 4930            >            eor #(0|$30)
                       >
3351 : dd2e02          >            cmp fINC,x    ;test flags
3354 : d0fe            >            bne *       ;trap
                        
3356 : ca                       dex
3357 : 300b                     bmi tdec3
3359 : e001                     cpx #1
335b : d0e1                     bne tdec2
335d : a981                     lda #$81
335f : 8d3302                   sta abst
3362 : d0da                     bne tdec2
3364 :                  tdec3
3364 : a200                     ldx #0
3366 : a97e                     lda #$7e
3368 : 8d3302                   sta abst
336b :                  tinc12
                                set_stat $ff
                       >            load_flag $ff
336b : a9ff            >            lda #$ff
                       >
336d : 48              >            pha         ;use stack to load status
336e : 28              >            plp
                        
336f : ee3302                   inc abst
                                tst_abs rINC,fINC,$ff-fnz
3372 : 08              >            php         ;save flags
3373 : ad3302          >            lda abst
3376 : dd2902          >            cmp rINC,x    ;test result
3379 : d0fe            >            bne *       ;trap
337b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
337c : 497d            >            eor #($ff-fnz|$30)
                       >
337e : dd2e02          >            cmp fINC,x    ;test flags
3381 : d0fe            >            bne *       ;trap
                        
3383 : e8                       inx
3384 : e002                     cpx #2
3386 : d005                     bne tinc13
3388 : a9fe                     lda #$fe
338a : 8d3302                   sta abst
338d : e005             tinc13   cpx #5
338f : d0da                     bne tinc12
3391 : ca                       dex
3392 : ee3302                   inc abst
3395 :                  tdec12
                                set_stat $ff
                       >            load_flag $ff
3395 : a9ff            >            lda #$ff
                       >
3397 : 48              >            pha         ;use stack to load status
3398 : 28              >            plp
                        
3399 : ce3302                   dec abst
                                tst_abs rINC,fINC,$ff-fnz
339c : 08              >            php         ;save flags
339d : ad3302          >            lda abst
33a0 : dd2902          >            cmp rINC,x    ;test result
33a3 : d0fe            >            bne *       ;trap
33a5 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
33a6 : 497d            >            eor #($ff-fnz|$30)
                       >
33a8 : dd2e02          >            cmp fINC,x    ;test flags
33ab : d0fe            >            bne *       ;trap
                        
33ad : ca                       dex
33ae : 300b                     bmi tdec13
33b0 : e001                     cpx #1
33b2 : d0e1                     bne tdec12
33b4 : a981                     lda #$81
33b6 : 8d3302                   sta abst
33b9 : d0da                     bne tdec12
33bb :                  tdec13
                        
                        ; zeropage indexed
33bb : a200                     ldx #0
33bd : a97e                     lda #$7e
33bf : 950f             tinc4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
33c1 : a900            >            lda #0
                       >
33c3 : 48              >            pha         ;use stack to load status
33c4 : 28              >            plp
                        
33c5 : f60f                     inc zpt,x
                                tst_zx rINC,fINC,0
33c7 : 08              >            php         ;save flags
33c8 : b50f            >            lda zpt,x
33ca : dd2902          >            cmp rINC,x    ;test result
33cd : d0fe            >            bne *       ;trap
33cf : 68              >            pla         ;load status
                       >            eor_flag 0
33d0 : 4930            >            eor #(0|$30)
                       >
33d2 : dd2e02          >            cmp fINC,x    ;test flags
33d5 : d0fe            >            bne *       ;trap
                        
33d7 : b50f                     lda zpt,x
33d9 : e8                       inx
33da : e002                     cpx #2
33dc : d002                     bne tinc5
33de : a9fe                     lda #$fe
33e0 : e005             tinc5   cpx #5
33e2 : d0db                     bne tinc4
33e4 : ca                       dex
33e5 : a902                     lda #2
33e7 : 950f             tdec4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
33e9 : a900            >            lda #0
                       >
33eb : 48              >            pha         ;use stack to load status
33ec : 28              >            plp
                        
33ed : d60f                     dec zpt,x
                                tst_zx rINC,fINC,0
33ef : 08              >            php         ;save flags
33f0 : b50f            >            lda zpt,x
33f2 : dd2902          >            cmp rINC,x    ;test result
33f5 : d0fe            >            bne *       ;trap
33f7 : 68              >            pla         ;load status
                       >            eor_flag 0
33f8 : 4930            >            eor #(0|$30)
                       >
33fa : dd2e02          >            cmp fINC,x    ;test flags
33fd : d0fe            >            bne *       ;trap
                        
33ff : b50f                     lda zpt,x
3401 : ca                       dex
3402 : 3008                     bmi tdec5
3404 : e001                     cpx #1
3406 : d0df                     bne tdec4
3408 : a981                     lda #$81
340a : d0db                     bne tdec4
340c :                  tdec5
340c : a200                     ldx #0
340e : a97e                     lda #$7e
3410 : 950f             tinc14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
3412 : a9ff            >            lda #$ff
                       >
3414 : 48              >            pha         ;use stack to load status
3415 : 28              >            plp
                        
3416 : f60f                     inc zpt,x
                                tst_zx rINC,fINC,$ff-fnz
3418 : 08              >            php         ;save flags
3419 : b50f            >            lda zpt,x
341b : dd2902          >            cmp rINC,x    ;test result
341e : d0fe            >            bne *       ;trap
3420 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3421 : 497d            >            eor #($ff-fnz|$30)
                       >
3423 : dd2e02          >            cmp fINC,x    ;test flags
3426 : d0fe            >            bne *       ;trap
                        
3428 : b50f                     lda zpt,x
342a : e8                       inx
342b : e002                     cpx #2
342d : d002                     bne tinc15
342f : a9fe                     lda #$fe
3431 : e005             tinc15  cpx #5
3433 : d0db                     bne tinc14
3435 : ca                       dex
3436 : a902                     lda #2
3438 : 950f             tdec14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
343a : a9ff            >            lda #$ff
                       >
343c : 48              >            pha         ;use stack to load status
343d : 28              >            plp
                        
343e : d60f                     dec zpt,x
                                tst_zx rINC,fINC,$ff-fnz
3440 : 08              >            php         ;save flags
3441 : b50f            >            lda zpt,x
3443 : dd2902          >            cmp rINC,x    ;test result
3446 : d0fe            >            bne *       ;trap
3448 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3449 : 497d            >            eor #($ff-fnz|$30)
                       >
344b : dd2e02          >            cmp fINC,x    ;test flags
344e : d0fe            >            bne *       ;trap
                        
3450 : b50f                     lda zpt,x
3452 : ca                       dex
3453 : 3008                     bmi tdec15
3455 : e001                     cpx #1
3457 : d0df                     bne tdec14
3459 : a981                     lda #$81
345b : d0db                     bne tdec14
345d :                  tdec15
                        
                        ; memory indexed
345d : a200                     ldx #0
345f : a97e                     lda #$7e
3461 : 9d3302           tinc6   sta abst,x
                                set_stat 0
                       >            load_flag 0
3464 : a900            >            lda #0
                       >
3466 : 48              >            pha         ;use stack to load status
3467 : 28              >            plp
                        
3468 : fe3302                   inc abst,x
                                tst_absx rINC,fINC,0
346b : 08              >            php         ;save flags
346c : bd3302          >            lda abst,x
346f : dd2902          >            cmp rINC,x    ;test result
3472 : d0fe            >            bne *       ;trap
3474 : 68              >            pla         ;load status
                       >            eor_flag 0
3475 : 4930            >            eor #(0|$30)
                       >
3477 : dd2e02          >            cmp fINC,x    ;test flags
347a : d0fe            >            bne *       ;trap
                        
347c : bd3302                   lda abst,x
347f : e8                       inx
3480 : e002                     cpx #2
3482 : d002                     bne tinc7
3484 : a9fe                     lda #$fe
3486 : e005             tinc7   cpx #5
3488 : d0d7                     bne tinc6
348a : ca                       dex
348b : a902                     lda #2
348d : 9d3302           tdec6   sta abst,x
                                set_stat 0
                       >            load_flag 0
3490 : a900            >            lda #0
                       >
3492 : 48              >            pha         ;use stack to load status
3493 : 28              >            plp
                        
3494 : de3302                   dec abst,x
                                tst_absx rINC,fINC,0
3497 : 08              >            php         ;save flags
3498 : bd3302          >            lda abst,x
349b : dd2902          >            cmp rINC,x    ;test result
349e : d0fe            >            bne *       ;trap
34a0 : 68              >            pla         ;load status
                       >            eor_flag 0
34a1 : 4930            >            eor #(0|$30)
                       >
34a3 : dd2e02          >            cmp fINC,x    ;test flags
34a6 : d0fe            >            bne *       ;trap
                        
34a8 : bd3302                   lda abst,x
34ab : ca                       dex
34ac : 3008                     bmi tdec7
34ae : e001                     cpx #1
34b0 : d0db                     bne tdec6
34b2 : a981                     lda #$81
34b4 : d0d7                     bne tdec6
34b6 :                  tdec7
34b6 : a200                     ldx #0
34b8 : a97e                     lda #$7e
34ba : 9d3302           tinc16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
34bd : a9ff            >            lda #$ff
                       >
34bf : 48              >            pha         ;use stack to load status
34c0 : 28              >            plp
                        
34c1 : fe3302                   inc abst,x
                                tst_absx rINC,fINC,$ff-fnz
34c4 : 08              >            php         ;save flags
34c5 : bd3302          >            lda abst,x
34c8 : dd2902          >            cmp rINC,x    ;test result
34cb : d0fe            >            bne *       ;trap
34cd : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
34ce : 497d            >            eor #($ff-fnz|$30)
                       >
34d0 : dd2e02          >            cmp fINC,x    ;test flags
34d3 : d0fe            >            bne *       ;trap
                        
34d5 : bd3302                   lda abst,x
34d8 : e8                       inx
34d9 : e002                     cpx #2
34db : d002                     bne tinc17
34dd : a9fe                     lda #$fe
34df : e005             tinc17  cpx #5
34e1 : d0d7                     bne tinc16
34e3 : ca                       dex
34e4 : a902                     lda #2
34e6 : 9d3302           tdec16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
34e9 : a9ff            >            lda #$ff
                       >
34eb : 48              >            pha         ;use stack to load status
34ec : 28              >            plp
                        
34ed : de3302                   dec abst,x
                                tst_absx rINC,fINC,$ff-fnz
34f0 : 08              >            php         ;save flags
34f1 : bd3302          >            lda abst,x
34f4 : dd2902          >            cmp rINC,x    ;test result
34f7 : d0fe            >            bne *       ;trap
34f9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
34fa : 497d            >            eor #($ff-fnz|$30)
                       >
34fc : dd2e02          >            cmp fINC,x    ;test flags
34ff : d0fe            >            bne *       ;trap
                        
3501 : bd3302                   lda abst,x
3504 : ca                       dex
3505 : 3008                     bmi tdec17
3507 : e001                     cpx #1
3509 : d0db                     bne tdec16
350b : a981                     lda #$81
350d : d0d7                     bne tdec16
350f :                  tdec17
                        
                        ; testing logical instructions - AND EOR ORA all addressing modes
                        ; AND
350f : a203                     ldx #3      ;immediate - self modifying code
3511 : b518             tand    lda zpAN,x
3513 : 8d1e35                   sta tandi1
                                set_ax  absANa,0
                       >            load_flag 0
3516 : a900            >            lda #0
                       >
3518 : 48              >            pha         ;use stack to load status
3519 : bd4802          >            lda absANa,x    ;precharge accu
351c : 28              >            plp
                        
351e =                  tandi1  equ *+1     ;target for immediate operand
351d : 2963                     and #99
                                tst_ax  absrlo,absflo,0
351f : 08              >            php         ;save flags
3520 : dd5002          >            cmp absrlo,x    ;test result
3523 : d0fe            >            bne *       ;trap
3525 : 68              >            pla         ;load status
                       >            eor_flag 0
3526 : 4930            >            eor #(0|$30)
                       >
3528 : dd5402          >            cmp absflo,x    ;test flags
352b : d0fe            >            bne *       ;trap
                        
352d : ca                       dex
352e : 10e1                     bpl tand
3530 : a203                     ldx #3
3532 : b518             tand1   lda zpAN,x
3534 : 8d3f35                   sta tandi2
                                set_ax  absANa,$ff
                       >            load_flag $ff
3537 : a9ff            >            lda #$ff
                       >
3539 : 48              >            pha         ;use stack to load status
353a : bd4802          >            lda absANa,x    ;precharge accu
353d : 28              >            plp
                        
353f =                  tandi2  equ *+1     ;target for immediate operand
353e : 2963                     and #99
                                tst_ax  absrlo,absflo,$ff-fnz
3540 : 08              >            php         ;save flags
3541 : dd5002          >            cmp absrlo,x    ;test result
3544 : d0fe            >            bne *       ;trap
3546 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3547 : 497d            >            eor #($ff-fnz|$30)
                       >
3549 : dd5402          >            cmp absflo,x    ;test flags
354c : d0fe            >            bne *       ;trap
                        
354e : ca                       dex
354f : 10e1                     bpl tand1
                        
3551 : a203                     ldx #3      ;zp
3553 : b518             tand2    lda zpAN,x
3555 : 850f                     sta zpt
                                set_ax  absANa,0
                       >            load_flag 0
3557 : a900            >            lda #0
                       >
3559 : 48              >            pha         ;use stack to load status
355a : bd4802          >            lda absANa,x    ;precharge accu
355d : 28              >            plp
                        
355e : 250f                     and zpt
                                tst_ax  absrlo,absflo,0
3560 : 08              >            php         ;save flags
3561 : dd5002          >            cmp absrlo,x    ;test result
3564 : d0fe            >            bne *       ;trap
3566 : 68              >            pla         ;load status
                       >            eor_flag 0
3567 : 4930            >            eor #(0|$30)
                       >
3569 : dd5402          >            cmp absflo,x    ;test flags
356c : d0fe            >            bne *       ;trap
                        
356e : ca                       dex
356f : 10e2                     bpl tand2
3571 : a203                     ldx #3
3573 : b518             tand3   lda zpAN,x
3575 : 850f                     sta zpt
                                set_ax  absANa,$ff
                       >            load_flag $ff
3577 : a9ff            >            lda #$ff
                       >
3579 : 48              >            pha         ;use stack to load status
357a : bd4802          >            lda absANa,x    ;precharge accu
357d : 28              >            plp
                        
357e : 250f                     and zpt
                                tst_ax  absrlo,absflo,$ff-fnz
3580 : 08              >            php         ;save flags
3581 : dd5002          >            cmp absrlo,x    ;test result
3584 : d0fe            >            bne *       ;trap
3586 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3587 : 497d            >            eor #($ff-fnz|$30)
                       >
3589 : dd5402          >            cmp absflo,x    ;test flags
358c : d0fe            >            bne *       ;trap
                        
358e : ca                       dex
358f : 10e2                     bpl tand3
                        
3591 : a203                     ldx #3      ;abs
3593 : b518             tand4   lda zpAN,x
3595 : 8d3302                   sta abst
                                set_ax  absANa,0
                       >            load_flag 0
3598 : a900            >            lda #0
                       >
359a : 48              >            pha         ;use stack to load status
359b : bd4802          >            lda absANa,x    ;precharge accu
359e : 28              >            plp
                        
359f : 2d3302                   and abst
                                tst_ax  absrlo,absflo,0
35a2 : 08              >            php         ;save flags
35a3 : dd5002          >            cmp absrlo,x    ;test result
35a6 : d0fe            >            bne *       ;trap
35a8 : 68              >            pla         ;load status
                       >            eor_flag 0
35a9 : 4930            >            eor #(0|$30)
                       >
35ab : dd5402          >            cmp absflo,x    ;test flags
35ae : d0fe            >            bne *       ;trap
                        
35b0 : ca                       dex
35b1 : 10e0                     bpl tand4
35b3 : a203                     ldx #3
35b5 : b518             tand5   lda zpAN,x
35b7 : 8d3302                   sta abst
                                set_ax  absANa,$ff
                       >            load_flag $ff
35ba : a9ff            >            lda #$ff
                       >
35bc : 48              >            pha         ;use stack to load status
35bd : bd4802          >            lda absANa,x    ;precharge accu
35c0 : 28              >            plp
                        
35c1 : 2d3302                   and abst
                                tst_ax  absrlo,absflo,$ff-fnz
35c4 : 08              >            php         ;save flags
35c5 : dd5002          >            cmp absrlo,x    ;test result
35c8 : d0fe            >            bne *       ;trap
35ca : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
35cb : 497d            >            eor #($ff-fnz|$30)
                       >
35cd : dd5402          >            cmp absflo,x    ;test flags
35d0 : d0fe            >            bne *       ;trap
                        
35d2 : ca                       dex
35d3 : 1002                     bpl tand6
                        
35d5 : a203                     ldx #3      ;zp,x
35d7 :                  tand6
                                set_ax  absANa,0
                       >            load_flag 0
35d7 : a900            >            lda #0
                       >
35d9 : 48              >            pha         ;use stack to load status
35da : bd4802          >            lda absANa,x    ;precharge accu
35dd : 28              >            plp
                        
35de : 3518                     and zpAN,x
                                tst_ax  absrlo,absflo,0
35e0 : 08              >            php         ;save flags
35e1 : dd5002          >            cmp absrlo,x    ;test result
35e4 : d0fe            >            bne *       ;trap
35e6 : 68              >            pla         ;load status
                       >            eor_flag 0
35e7 : 4930            >            eor #(0|$30)
                       >
35e9 : dd5402          >            cmp absflo,x    ;test flags
35ec : d0fe            >            bne *       ;trap
                        
35ee : ca                       dex
35ef : 10e6                     bpl tand6
35f1 : a203                     ldx #3
35f3 :                  tand7
                                set_ax  absANa,$ff
                       >            load_flag $ff
35f3 : a9ff            >            lda #$ff
                       >
35f5 : 48              >            pha         ;use stack to load status
35f6 : bd4802          >            lda absANa,x    ;precharge accu
35f9 : 28              >            plp
                        
35fa : 3518                     and zpAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
35fc : 08              >            php         ;save flags
35fd : dd5002          >            cmp absrlo,x    ;test result
3600 : d0fe            >            bne *       ;trap
3602 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3603 : 497d            >            eor #($ff-fnz|$30)
                       >
3605 : dd5402          >            cmp absflo,x    ;test flags
3608 : d0fe            >            bne *       ;trap
                        
360a : ca                       dex
360b : 10e6                     bpl tand7
                        
360d : a203                     ldx #3      ;abs,x
360f :                  tand8
                                set_ax  absANa,0
                       >            load_flag 0
360f : a900            >            lda #0
                       >
3611 : 48              >            pha         ;use stack to load status
3612 : bd4802          >            lda absANa,x    ;precharge accu
3615 : 28              >            plp
                        
3616 : 3d3c02                   and absAN,x
                                tst_ax  absrlo,absflo,0
3619 : 08              >            php         ;save flags
361a : dd5002          >            cmp absrlo,x    ;test result
361d : d0fe            >            bne *       ;trap
361f : 68              >            pla         ;load status
                       >            eor_flag 0
3620 : 4930            >            eor #(0|$30)
                       >
3622 : dd5402          >            cmp absflo,x    ;test flags
3625 : d0fe            >            bne *       ;trap
                        
3627 : ca                       dex
3628 : 10e5                     bpl tand8
362a : a203                     ldx #3
362c :                  tand9
                                set_ax  absANa,$ff
                       >            load_flag $ff
362c : a9ff            >            lda #$ff
                       >
362e : 48              >            pha         ;use stack to load status
362f : bd4802          >            lda absANa,x    ;precharge accu
3632 : 28              >            plp
                        
3633 : 3d3c02                   and absAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
3636 : 08              >            php         ;save flags
3637 : dd5002          >            cmp absrlo,x    ;test result
363a : d0fe            >            bne *       ;trap
363c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
363d : 497d            >            eor #($ff-fnz|$30)
                       >
363f : dd5402          >            cmp absflo,x    ;test flags
3642 : d0fe            >            bne *       ;trap
                        
3644 : ca                       dex
3645 : 10e5                     bpl tand9
                        
3647 : a003                     ldy #3      ;abs,y
3649 :                  tand10
                                set_ay  absANa,0
                       >            load_flag 0
3649 : a900            >            lda #0
                       >
364b : 48              >            pha         ;use stack to load status
364c : b94802          >            lda absANa,y    ;precharge accu
364f : 28              >            plp
                        
3650 : 393c02                   and absAN,y
                                tst_ay  absrlo,absflo,0
3653 : 08              >            php         ;save flags
3654 : d95002          >            cmp absrlo,y    ;test result
3657 : d0fe            >            bne *       ;trap
3659 : 68              >            pla         ;load status
                       >            eor_flag 0
365a : 4930            >            eor #(0|$30)
                       >
365c : d95402          >            cmp absflo,y    ;test flags
365f : d0fe            >            bne *       ;trap
                        
3661 : 88                       dey
3662 : 10e5                     bpl tand10
3664 : a003                     ldy #3
3666 :                  tand11
                                set_ay  absANa,$ff
                       >            load_flag $ff
3666 : a9ff            >            lda #$ff
                       >
3668 : 48              >            pha         ;use stack to load status
3669 : b94802          >            lda absANa,y    ;precharge accu
366c : 28              >            plp
                        
366d : 393c02                   and absAN,y
                                tst_ay  absrlo,absflo,$ff-fnz
3670 : 08              >            php         ;save flags
3671 : d95002          >            cmp absrlo,y    ;test result
3674 : d0fe            >            bne *       ;trap
3676 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3677 : 497d            >            eor #($ff-fnz|$30)
                       >
3679 : d95402          >            cmp absflo,y    ;test flags
367c : d0fe            >            bne *       ;trap
                        
367e : 88                       dey
367f : 10e5                     bpl tand11
                        
3681 : a206                     ldx #6      ;(zp,x)
3683 : a003                     ldy #3
3685 :                  tand12
                                set_ay  absANa,0
                       >            load_flag 0
3685 : a900            >            lda #0
                       >
3687 : 48              >            pha         ;use stack to load status
3688 : b94802          >            lda absANa,y    ;precharge accu
368b : 28              >            plp
                        
368c : 2136                     and (indAN,x)
                                tst_ay  absrlo,absflo,0
368e : 08              >            php         ;save flags
368f : d95002          >            cmp absrlo,y    ;test result
3692 : d0fe            >            bne *       ;trap
3694 : 68              >            pla         ;load status
                       >            eor_flag 0
3695 : 4930            >            eor #(0|$30)
                       >
3697 : d95402          >            cmp absflo,y    ;test flags
369a : d0fe            >            bne *       ;trap
                        
369c : ca                       dex
369d : ca                       dex
369e : 88                       dey
369f : 10e4                     bpl tand12
36a1 : a206                     ldx #6
36a3 : a003                     ldy #3
36a5 :                  tand13
                                set_ay  absANa,$ff
                       >            load_flag $ff
36a5 : a9ff            >            lda #$ff
                       >
36a7 : 48              >            pha         ;use stack to load status
36a8 : b94802          >            lda absANa,y    ;precharge accu
36ab : 28              >            plp
                        
36ac : 2136                     and (indAN,x)
                                tst_ay  absrlo,absflo,$ff-fnz
36ae : 08              >            php         ;save flags
36af : d95002          >            cmp absrlo,y    ;test result
36b2 : d0fe            >            bne *       ;trap
36b4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
36b5 : 497d            >            eor #($ff-fnz|$30)
                       >
36b7 : d95402          >            cmp absflo,y    ;test flags
36ba : d0fe            >            bne *       ;trap
                        
36bc : ca                       dex
36bd : ca                       dex
36be : 88                       dey
36bf : 10e4                     bpl tand13
                        
36c1 : a003                     ldy #3      ;(zp),y
36c3 :                  tand14
                                set_ay  absANa,0
                       >            load_flag 0
36c3 : a900            >            lda #0
                       >
36c5 : 48              >            pha         ;use stack to load status
36c6 : b94802          >            lda absANa,y    ;precharge accu
36c9 : 28              >            plp
                        
36ca : 3136                     and (indAN),y
                                tst_ay  absrlo,absflo,0
36cc : 08              >            php         ;save flags
36cd : d95002          >            cmp absrlo,y    ;test result
36d0 : d0fe            >            bne *       ;trap
36d2 : 68              >            pla         ;load status
                       >            eor_flag 0
36d3 : 4930            >            eor #(0|$30)
                       >
36d5 : d95402          >            cmp absflo,y    ;test flags
36d8 : d0fe            >            bne *       ;trap
                        
36da : 88                       dey
36db : 10e6                     bpl tand14
36dd : a003                     ldy #3
36df :                  tand15
                                set_ay  absANa,$ff
                       >            load_flag $ff
36df : a9ff            >            lda #$ff
                       >
36e1 : 48              >            pha         ;use stack to load status
36e2 : b94802          >            lda absANa,y    ;precharge accu
36e5 : 28              >            plp
                        
36e6 : 3136                     and (indAN),y
                                tst_ay  absrlo,absflo,$ff-fnz
36e8 : 08              >            php         ;save flags
36e9 : d95002          >            cmp absrlo,y    ;test result
36ec : d0fe            >            bne *       ;trap
36ee : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
36ef : 497d            >            eor #($ff-fnz|$30)
                       >
36f1 : d95402          >            cmp absflo,y    ;test flags
36f4 : d0fe            >            bne *       ;trap
                        
36f6 : 88                       dey
36f7 : 10e6                     bpl tand15
                        
                        ; EOR
36f9 : a203                     ldx #3      ;immediate - self modifying code
36fb : b51c             teor    lda zpEO,x
36fd : 8d0837                   sta teori1
                                set_ax  absEOa,0
                       >            load_flag 0
3700 : a900            >            lda #0
                       >
3702 : 48              >            pha         ;use stack to load status
3703 : bd4c02          >            lda absEOa,x    ;precharge accu
3706 : 28              >            plp
                        
3708 =                  teori1  equ *+1     ;target for immediate opereor
3707 : 4963                     eor #99
                                tst_ax  absrlo,absflo,0
3709 : 08              >            php         ;save flags
370a : dd5002          >            cmp absrlo,x    ;test result
370d : d0fe            >            bne *       ;trap
370f : 68              >            pla         ;load status
                       >            eor_flag 0
3710 : 4930            >            eor #(0|$30)
                       >
3712 : dd5402          >            cmp absflo,x    ;test flags
3715 : d0fe            >            bne *       ;trap
                        
3717 : ca                       dex
3718 : 10e1                     bpl teor
371a : a203                     ldx #3
371c : b51c             teor1   lda zpEO,x
371e : 8d2937                   sta teori2
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3721 : a9ff            >            lda #$ff
                       >
3723 : 48              >            pha         ;use stack to load status
3724 : bd4c02          >            lda absEOa,x    ;precharge accu
3727 : 28              >            plp
                        
3729 =                  teori2  equ *+1     ;target for immediate opereor
3728 : 4963                     eor #99
                                tst_ax  absrlo,absflo,$ff-fnz
372a : 08              >            php         ;save flags
372b : dd5002          >            cmp absrlo,x    ;test result
372e : d0fe            >            bne *       ;trap
3730 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3731 : 497d            >            eor #($ff-fnz|$30)
                       >
3733 : dd5402          >            cmp absflo,x    ;test flags
3736 : d0fe            >            bne *       ;trap
                        
3738 : ca                       dex
3739 : 10e1                     bpl teor1
                        
373b : a203                     ldx #3      ;zp
373d : b51c             teor2    lda zpEO,x
373f : 850f                     sta zpt
                                set_ax  absEOa,0
                       >            load_flag 0
3741 : a900            >            lda #0
                       >
3743 : 48              >            pha         ;use stack to load status
3744 : bd4c02          >            lda absEOa,x    ;precharge accu
3747 : 28              >            plp
                        
3748 : 450f                     eor zpt
                                tst_ax  absrlo,absflo,0
374a : 08              >            php         ;save flags
374b : dd5002          >            cmp absrlo,x    ;test result
374e : d0fe            >            bne *       ;trap
3750 : 68              >            pla         ;load status
                       >            eor_flag 0
3751 : 4930            >            eor #(0|$30)
                       >
3753 : dd5402          >            cmp absflo,x    ;test flags
3756 : d0fe            >            bne *       ;trap
                        
3758 : ca                       dex
3759 : 10e2                     bpl teor2
375b : a203                     ldx #3
375d : b51c             teor3   lda zpEO,x
375f : 850f                     sta zpt
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3761 : a9ff            >            lda #$ff
                       >
3763 : 48              >            pha         ;use stack to load status
3764 : bd4c02          >            lda absEOa,x    ;precharge accu
3767 : 28              >            plp
                        
3768 : 450f                     eor zpt
                                tst_ax  absrlo,absflo,$ff-fnz
376a : 08              >            php         ;save flags
376b : dd5002          >            cmp absrlo,x    ;test result
376e : d0fe            >            bne *       ;trap
3770 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3771 : 497d            >            eor #($ff-fnz|$30)
                       >
3773 : dd5402          >            cmp absflo,x    ;test flags
3776 : d0fe            >            bne *       ;trap
                        
3778 : ca                       dex
3779 : 10e2                     bpl teor3
                        
377b : a203                     ldx #3      ;abs
377d : b51c             teor4   lda zpEO,x
377f : 8d3302                   sta abst
                                set_ax  absEOa,0
                       >            load_flag 0
3782 : a900            >            lda #0
                       >
3784 : 48              >            pha         ;use stack to load status
3785 : bd4c02          >            lda absEOa,x    ;precharge accu
3788 : 28              >            plp
                        
3789 : 4d3302                   eor abst
                                tst_ax  absrlo,absflo,0
378c : 08              >            php         ;save flags
378d : dd5002          >            cmp absrlo,x    ;test result
3790 : d0fe            >            bne *       ;trap
3792 : 68              >            pla         ;load status
                       >            eor_flag 0
3793 : 4930            >            eor #(0|$30)
                       >
3795 : dd5402          >            cmp absflo,x    ;test flags
3798 : d0fe            >            bne *       ;trap
                        
379a : ca                       dex
379b : 10e0                     bpl teor4
379d : a203                     ldx #3
379f : b51c             teor5   lda zpEO,x
37a1 : 8d3302                   sta abst
                                set_ax  absEOa,$ff
                       >            load_flag $ff
37a4 : a9ff            >            lda #$ff
                       >
37a6 : 48              >            pha         ;use stack to load status
37a7 : bd4c02          >            lda absEOa,x    ;precharge accu
37aa : 28              >            plp
                        
37ab : 4d3302                   eor abst
                                tst_ax  absrlo,absflo,$ff-fnz
37ae : 08              >            php         ;save flags
37af : dd5002          >            cmp absrlo,x    ;test result
37b2 : d0fe            >            bne *       ;trap
37b4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
37b5 : 497d            >            eor #($ff-fnz|$30)
                       >
37b7 : dd5402          >            cmp absflo,x    ;test flags
37ba : d0fe            >            bne *       ;trap
                        
37bc : ca                       dex
37bd : 1002                     bpl teor6
                        
37bf : a203                     ldx #3      ;zp,x
37c1 :                  teor6
                                set_ax  absEOa,0
                       >            load_flag 0
37c1 : a900            >            lda #0
                       >
37c3 : 48              >            pha         ;use stack to load status
37c4 : bd4c02          >            lda absEOa,x    ;precharge accu
37c7 : 28              >            plp
                        
37c8 : 551c                     eor zpEO,x
                                tst_ax  absrlo,absflo,0
37ca : 08              >            php         ;save flags
37cb : dd5002          >            cmp absrlo,x    ;test result
37ce : d0fe            >            bne *       ;trap
37d0 : 68              >            pla         ;load status
                       >            eor_flag 0
37d1 : 4930            >            eor #(0|$30)
                       >
37d3 : dd5402          >            cmp absflo,x    ;test flags
37d6 : d0fe            >            bne *       ;trap
                        
37d8 : ca                       dex
37d9 : 10e6                     bpl teor6
37db : a203                     ldx #3
37dd :                  teor7
                                set_ax  absEOa,$ff
                       >            load_flag $ff
37dd : a9ff            >            lda #$ff
                       >
37df : 48              >            pha         ;use stack to load status
37e0 : bd4c02          >            lda absEOa,x    ;precharge accu
37e3 : 28              >            plp
                        
37e4 : 551c                     eor zpEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
37e6 : 08              >            php         ;save flags
37e7 : dd5002          >            cmp absrlo,x    ;test result
37ea : d0fe            >            bne *       ;trap
37ec : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
37ed : 497d            >            eor #($ff-fnz|$30)
                       >
37ef : dd5402          >            cmp absflo,x    ;test flags
37f2 : d0fe            >            bne *       ;trap
                        
37f4 : ca                       dex
37f5 : 10e6                     bpl teor7
                        
37f7 : a203                     ldx #3      ;abs,x
37f9 :                  teor8
                                set_ax  absEOa,0
                       >            load_flag 0
37f9 : a900            >            lda #0
                       >
37fb : 48              >            pha         ;use stack to load status
37fc : bd4c02          >            lda absEOa,x    ;precharge accu
37ff : 28              >            plp
                        
3800 : 5d4002                   eor absEO,x
                                tst_ax  absrlo,absflo,0
3803 : 08              >            php         ;save flags
3804 : dd5002          >            cmp absrlo,x    ;test result
3807 : d0fe            >            bne *       ;trap
3809 : 68              >            pla         ;load status
                       >            eor_flag 0
380a : 4930            >            eor #(0|$30)
                       >
380c : dd5402          >            cmp absflo,x    ;test flags
380f : d0fe            >            bne *       ;trap
                        
3811 : ca                       dex
3812 : 10e5                     bpl teor8
3814 : a203                     ldx #3
3816 :                  teor9
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3816 : a9ff            >            lda #$ff
                       >
3818 : 48              >            pha         ;use stack to load status
3819 : bd4c02          >            lda absEOa,x    ;precharge accu
381c : 28              >            plp
                        
381d : 5d4002                   eor absEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
3820 : 08              >            php         ;save flags
3821 : dd5002          >            cmp absrlo,x    ;test result
3824 : d0fe            >            bne *       ;trap
3826 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3827 : 497d            >            eor #($ff-fnz|$30)
                       >
3829 : dd5402          >            cmp absflo,x    ;test flags
382c : d0fe            >            bne *       ;trap
                        
382e : ca                       dex
382f : 10e5                     bpl teor9
                        
3831 : a003                     ldy #3      ;abs,y
3833 :                  teor10
                                set_ay  absEOa,0
                       >            load_flag 0
3833 : a900            >            lda #0
                       >
3835 : 48              >            pha         ;use stack to load status
3836 : b94c02          >            lda absEOa,y    ;precharge accu
3839 : 28              >            plp
                        
383a : 594002                   eor absEO,y
                                tst_ay  absrlo,absflo,0
383d : 08              >            php         ;save flags
383e : d95002          >            cmp absrlo,y    ;test result
3841 : d0fe            >            bne *       ;trap
3843 : 68              >            pla         ;load status
                       >            eor_flag 0
3844 : 4930            >            eor #(0|$30)
                       >
3846 : d95402          >            cmp absflo,y    ;test flags
3849 : d0fe            >            bne *       ;trap
                        
384b : 88                       dey
384c : 10e5                     bpl teor10
384e : a003                     ldy #3
3850 :                  teor11
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3850 : a9ff            >            lda #$ff
                       >
3852 : 48              >            pha         ;use stack to load status
3853 : b94c02          >            lda absEOa,y    ;precharge accu
3856 : 28              >            plp
                        
3857 : 594002                   eor absEO,y
                                tst_ay  absrlo,absflo,$ff-fnz
385a : 08              >            php         ;save flags
385b : d95002          >            cmp absrlo,y    ;test result
385e : d0fe            >            bne *       ;trap
3860 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3861 : 497d            >            eor #($ff-fnz|$30)
                       >
3863 : d95402          >            cmp absflo,y    ;test flags
3866 : d0fe            >            bne *       ;trap
                        
3868 : 88                       dey
3869 : 10e5                     bpl teor11
                        
386b : a206                     ldx #6      ;(zp,x)
386d : a003                     ldy #3
386f :                  teor12
                                set_ay  absEOa,0
                       >            load_flag 0
386f : a900            >            lda #0
                       >
3871 : 48              >            pha         ;use stack to load status
3872 : b94c02          >            lda absEOa,y    ;precharge accu
3875 : 28              >            plp
                        
3876 : 413e                     eor (indEO,x)
                                tst_ay  absrlo,absflo,0
3878 : 08              >            php         ;save flags
3879 : d95002          >            cmp absrlo,y    ;test result
387c : d0fe            >            bne *       ;trap
387e : 68              >            pla         ;load status
                       >            eor_flag 0
387f : 4930            >            eor #(0|$30)
                       >
3881 : d95402          >            cmp absflo,y    ;test flags
3884 : d0fe            >            bne *       ;trap
                        
3886 : ca                       dex
3887 : ca                       dex
3888 : 88                       dey
3889 : 10e4                     bpl teor12
388b : a206                     ldx #6
388d : a003                     ldy #3
388f :                  teor13
                                set_ay  absEOa,$ff
                       >            load_flag $ff
388f : a9ff            >            lda #$ff
                       >
3891 : 48              >            pha         ;use stack to load status
3892 : b94c02          >            lda absEOa,y    ;precharge accu
3895 : 28              >            plp
                        
3896 : 413e                     eor (indEO,x)
                                tst_ay  absrlo,absflo,$ff-fnz
3898 : 08              >            php         ;save flags
3899 : d95002          >            cmp absrlo,y    ;test result
389c : d0fe            >            bne *       ;trap
389e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
389f : 497d            >            eor #($ff-fnz|$30)
                       >
38a1 : d95402          >            cmp absflo,y    ;test flags
38a4 : d0fe            >            bne *       ;trap
                        
38a6 : ca                       dex
38a7 : ca                       dex
38a8 : 88                       dey
38a9 : 10e4                     bpl teor13
                        
38ab : a003                     ldy #3      ;(zp),y
38ad :                  teor14
                                set_ay  absEOa,0
                       >            load_flag 0
38ad : a900            >            lda #0
                       >
38af : 48              >            pha         ;use stack to load status
38b0 : b94c02          >            lda absEOa,y    ;precharge accu
38b3 : 28              >            plp
                        
38b4 : 513e                     eor (indEO),y
                                tst_ay  absrlo,absflo,0
38b6 : 08              >            php         ;save flags
38b7 : d95002          >            cmp absrlo,y    ;test result
38ba : d0fe            >            bne *       ;trap
38bc : 68              >            pla         ;load status
                       >            eor_flag 0
38bd : 4930            >            eor #(0|$30)
                       >
38bf : d95402          >            cmp absflo,y    ;test flags
38c2 : d0fe            >            bne *       ;trap
                        
38c4 : 88                       dey
38c5 : 10e6                     bpl teor14
38c7 : a003                     ldy #3
38c9 :                  teor15
                                set_ay  absEOa,$ff
                       >            load_flag $ff
38c9 : a9ff            >            lda #$ff
                       >
38cb : 48              >            pha         ;use stack to load status
38cc : b94c02          >            lda absEOa,y    ;precharge accu
38cf : 28              >            plp
                        
38d0 : 513e                     eor (indEO),y
                                tst_ay  absrlo,absflo,$ff-fnz
38d2 : 08              >            php         ;save flags
38d3 : d95002          >            cmp absrlo,y    ;test result
38d6 : d0fe            >            bne *       ;trap
38d8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
38d9 : 497d            >            eor #($ff-fnz|$30)
                       >
38db : d95402          >            cmp absflo,y    ;test flags
38de : d0fe            >            bne *       ;trap
                        
38e0 : 88                       dey
38e1 : 10e6                     bpl teor15
                        
                        ; OR
38e3 : a203                     ldx #3      ;immediate - self modifying code
38e5 : b514             tora    lda zpOR,x
38e7 : 8df238                   sta torai1
                                set_ax  absORa,0
                       >            load_flag 0
38ea : a900            >            lda #0
                       >
38ec : 48              >            pha         ;use stack to load status
38ed : bd4402          >            lda absORa,x    ;precharge accu
38f0 : 28              >            plp
                        
38f2 =                  torai1  equ *+1     ;target for immediate operora
38f1 : 0963                     ora #99
                                tst_ax  absrlo,absflo,0
38f3 : 08              >            php         ;save flags
38f4 : dd5002          >            cmp absrlo,x    ;test result
38f7 : d0fe            >            bne *       ;trap
38f9 : 68              >            pla         ;load status
                       >            eor_flag 0
38fa : 4930            >            eor #(0|$30)
                       >
38fc : dd5402          >            cmp absflo,x    ;test flags
38ff : d0fe            >            bne *       ;trap
                        
3901 : ca                       dex
3902 : 10e1                     bpl tora
3904 : a203                     ldx #3
3906 : b514             tora1   lda zpOR,x
3908 : 8d1339                   sta torai2
                                set_ax  absORa,$ff
                       >            load_flag $ff
390b : a9ff            >            lda #$ff
                       >
390d : 48              >            pha         ;use stack to load status
390e : bd4402          >            lda absORa,x    ;precharge accu
3911 : 28              >            plp
                        
3913 =                  torai2  equ *+1     ;target for immediate operora
3912 : 0963                     ora #99
                                tst_ax  absrlo,absflo,$ff-fnz
3914 : 08              >            php         ;save flags
3915 : dd5002          >            cmp absrlo,x    ;test result
3918 : d0fe            >            bne *       ;trap
391a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
391b : 497d            >            eor #($ff-fnz|$30)
                       >
391d : dd5402          >            cmp absflo,x    ;test flags
3920 : d0fe            >            bne *       ;trap
                        
3922 : ca                       dex
3923 : 10e1                     bpl tora1
                        
3925 : a203                     ldx #3      ;zp
3927 : b514             tora2    lda zpOR,x
3929 : 850f                     sta zpt
                                set_ax  absORa,0
                       >            load_flag 0
392b : a900            >            lda #0
                       >
392d : 48              >            pha         ;use stack to load status
392e : bd4402          >            lda absORa,x    ;precharge accu
3931 : 28              >            plp
                        
3932 : 050f                     ora zpt
                                tst_ax  absrlo,absflo,0
3934 : 08              >            php         ;save flags
3935 : dd5002          >            cmp absrlo,x    ;test result
3938 : d0fe            >            bne *       ;trap
393a : 68              >            pla         ;load status
                       >            eor_flag 0
393b : 4930            >            eor #(0|$30)
                       >
393d : dd5402          >            cmp absflo,x    ;test flags
3940 : d0fe            >            bne *       ;trap
                        
3942 : ca                       dex
3943 : 10e2                     bpl tora2
3945 : a203                     ldx #3
3947 : b514             tora3   lda zpOR,x
3949 : 850f                     sta zpt
                                set_ax  absORa,$ff
                       >            load_flag $ff
394b : a9ff            >            lda #$ff
                       >
394d : 48              >            pha         ;use stack to load status
394e : bd4402          >            lda absORa,x    ;precharge accu
3951 : 28              >            plp
                        
3952 : 050f                     ora zpt
                                tst_ax  absrlo,absflo,$ff-fnz
3954 : 08              >            php         ;save flags
3955 : dd5002          >            cmp absrlo,x    ;test result
3958 : d0fe            >            bne *       ;trap
395a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
395b : 497d            >            eor #($ff-fnz|$30)
                       >
395d : dd5402          >            cmp absflo,x    ;test flags
3960 : d0fe            >            bne *       ;trap
                        
3962 : ca                       dex
3963 : 10e2                     bpl tora3
                        
3965 : a203                     ldx #3      ;abs
3967 : b514             tora4   lda zpOR,x
3969 : 8d3302                   sta abst
                                set_ax  absORa,0
                       >            load_flag 0
396c : a900            >            lda #0
                       >
396e : 48              >            pha         ;use stack to load status
396f : bd4402          >            lda absORa,x    ;precharge accu
3972 : 28              >            plp
                        
3973 : 0d3302                   ora abst
                                tst_ax  absrlo,absflo,0
3976 : 08              >            php         ;save flags
3977 : dd5002          >            cmp absrlo,x    ;test result
397a : d0fe            >            bne *       ;trap
397c : 68              >            pla         ;load status
                       >            eor_flag 0
397d : 4930            >            eor #(0|$30)
                       >
397f : dd5402          >            cmp absflo,x    ;test flags
3982 : d0fe            >            bne *       ;trap
                        
3984 : ca                       dex
3985 : 10e0                     bpl tora4
3987 : a203                     ldx #3
3989 : b514             tora5   lda zpOR,x
398b : 8d3302                   sta abst
                                set_ax  absORa,$ff
                       >            load_flag $ff
398e : a9ff            >            lda #$ff
                       >
3990 : 48              >            pha         ;use stack to load status
3991 : bd4402          >            lda absORa,x    ;precharge accu
3994 : 28              >            plp
                        
3995 : 0d3302                   ora abst
                                tst_ax  absrlo,absflo,$ff-fnz
3998 : 08              >            php         ;save flags
3999 : dd5002          >            cmp absrlo,x    ;test result
399c : d0fe            >            bne *       ;trap
399e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
399f : 497d            >            eor #($ff-fnz|$30)
                       >
39a1 : dd5402          >            cmp absflo,x    ;test flags
39a4 : d0fe            >            bne *       ;trap
                        
39a6 : ca                       dex
39a7 : 1002                     bpl tora6
                        
39a9 : a203                     ldx #3      ;zp,x
39ab :                  tora6
                                set_ax  absORa,0
                       >            load_flag 0
39ab : a900            >            lda #0
                       >
39ad : 48              >            pha         ;use stack to load status
39ae : bd4402          >            lda absORa,x    ;precharge accu
39b1 : 28              >            plp
                        
39b2 : 1514                     ora zpOR,x
                                tst_ax  absrlo,absflo,0
39b4 : 08              >            php         ;save flags
39b5 : dd5002          >            cmp absrlo,x    ;test result
39b8 : d0fe            >            bne *       ;trap
39ba : 68              >            pla         ;load status
                       >            eor_flag 0
39bb : 4930            >            eor #(0|$30)
                       >
39bd : dd5402          >            cmp absflo,x    ;test flags
39c0 : d0fe            >            bne *       ;trap
                        
39c2 : ca                       dex
39c3 : 10e6                     bpl tora6
39c5 : a203                     ldx #3
39c7 :                  tora7
                                set_ax  absORa,$ff
                       >            load_flag $ff
39c7 : a9ff            >            lda #$ff
                       >
39c9 : 48              >            pha         ;use stack to load status
39ca : bd4402          >            lda absORa,x    ;precharge accu
39cd : 28              >            plp
                        
39ce : 1514                     ora zpOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
39d0 : 08              >            php         ;save flags
39d1 : dd5002          >            cmp absrlo,x    ;test result
39d4 : d0fe            >            bne *       ;trap
39d6 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
39d7 : 497d            >            eor #($ff-fnz|$30)
                       >
39d9 : dd5402          >            cmp absflo,x    ;test flags
39dc : d0fe            >            bne *       ;trap
                        
39de : ca                       dex
39df : 10e6                     bpl tora7
                        
39e1 : a203                     ldx #3      ;abs,x
39e3 :                  tora8
                                set_ax  absORa,0
                       >            load_flag 0
39e3 : a900            >            lda #0
                       >
39e5 : 48              >            pha         ;use stack to load status
39e6 : bd4402          >            lda absORa,x    ;precharge accu
39e9 : 28              >            plp
                        
39ea : 1d3802                   ora absOR,x
                                tst_ax  absrlo,absflo,0
39ed : 08              >            php         ;save flags
39ee : dd5002          >            cmp absrlo,x    ;test result
39f1 : d0fe            >            bne *       ;trap
39f3 : 68              >            pla         ;load status
                       >            eor_flag 0
39f4 : 4930            >            eor #(0|$30)
                       >
39f6 : dd5402          >            cmp absflo,x    ;test flags
39f9 : d0fe            >            bne *       ;trap
                        
39fb : ca                       dex
39fc : 10e5                     bpl tora8
39fe : a203                     ldx #3
3a00 :                  tora9
                                set_ax  absORa,$ff
                       >            load_flag $ff
3a00 : a9ff            >            lda #$ff
                       >
3a02 : 48              >            pha         ;use stack to load status
3a03 : bd4402          >            lda absORa,x    ;precharge accu
3a06 : 28              >            plp
                        
3a07 : 1d3802                   ora absOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
3a0a : 08              >            php         ;save flags
3a0b : dd5002          >            cmp absrlo,x    ;test result
3a0e : d0fe            >            bne *       ;trap
3a10 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a11 : 497d            >            eor #($ff-fnz|$30)
                       >
3a13 : dd5402          >            cmp absflo,x    ;test flags
3a16 : d0fe            >            bne *       ;trap
                        
3a18 : ca                       dex
3a19 : 10e5                     bpl tora9
                        
3a1b : a003                     ldy #3      ;abs,y
3a1d :                  tora10
                                set_ay  absORa,0
                       >            load_flag 0
3a1d : a900            >            lda #0
                       >
3a1f : 48              >            pha         ;use stack to load status
3a20 : b94402          >            lda absORa,y    ;precharge accu
3a23 : 28              >            plp
                        
3a24 : 193802                   ora absOR,y
                                tst_ay  absrlo,absflo,0
3a27 : 08              >            php         ;save flags
3a28 : d95002          >            cmp absrlo,y    ;test result
3a2b : d0fe            >            bne *       ;trap
3a2d : 68              >            pla         ;load status
                       >            eor_flag 0
3a2e : 4930            >            eor #(0|$30)
                       >
3a30 : d95402          >            cmp absflo,y    ;test flags
3a33 : d0fe            >            bne *       ;trap
                        
3a35 : 88                       dey
3a36 : 10e5                     bpl tora10
3a38 : a003                     ldy #3
3a3a :                  tora11
                                set_ay  absORa,$ff
                       >            load_flag $ff
3a3a : a9ff            >            lda #$ff
                       >
3a3c : 48              >            pha         ;use stack to load status
3a3d : b94402          >            lda absORa,y    ;precharge accu
3a40 : 28              >            plp
                        
3a41 : 193802                   ora absOR,y
                                tst_ay  absrlo,absflo,$ff-fnz
3a44 : 08              >            php         ;save flags
3a45 : d95002          >            cmp absrlo,y    ;test result
3a48 : d0fe            >            bne *       ;trap
3a4a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a4b : 497d            >            eor #($ff-fnz|$30)
                       >
3a4d : d95402          >            cmp absflo,y    ;test flags
3a50 : d0fe            >            bne *       ;trap
                        
3a52 : 88                       dey
3a53 : 10e5                     bpl tora11
                        
3a55 : a206                     ldx #6      ;(zp,x)
3a57 : a003                     ldy #3
3a59 :                  tora12
                                set_ay  absORa,0
                       >            load_flag 0
3a59 : a900            >            lda #0
                       >
3a5b : 48              >            pha         ;use stack to load status
3a5c : b94402          >            lda absORa,y    ;precharge accu
3a5f : 28              >            plp
                        
3a60 : 0146                     ora (indOR,x)
                                tst_ay  absrlo,absflo,0
3a62 : 08              >            php         ;save flags
3a63 : d95002          >            cmp absrlo,y    ;test result
3a66 : d0fe            >            bne *       ;trap
3a68 : 68              >            pla         ;load status
                       >            eor_flag 0
3a69 : 4930            >            eor #(0|$30)
                       >
3a6b : d95402          >            cmp absflo,y    ;test flags
3a6e : d0fe            >            bne *       ;trap
                        
3a70 : ca                       dex
3a71 : ca                       dex
3a72 : 88                       dey
3a73 : 10e4                     bpl tora12
3a75 : a206                     ldx #6
3a77 : a003                     ldy #3
3a79 :                  tora13
                                set_ay  absORa,$ff
                       >            load_flag $ff
3a79 : a9ff            >            lda #$ff
                       >
3a7b : 48              >            pha         ;use stack to load status
3a7c : b94402          >            lda absORa,y    ;precharge accu
3a7f : 28              >            plp
                        
3a80 : 0146                     ora (indOR,x)
                                tst_ay  absrlo,absflo,$ff-fnz
3a82 : 08              >            php         ;save flags
3a83 : d95002          >            cmp absrlo,y    ;test result
3a86 : d0fe            >            bne *       ;trap
3a88 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a89 : 497d            >            eor #($ff-fnz|$30)
                       >
3a8b : d95402          >            cmp absflo,y    ;test flags
3a8e : d0fe            >            bne *       ;trap
                        
3a90 : ca                       dex
3a91 : ca                       dex
3a92 : 88                       dey
3a93 : 10e4                     bpl tora13
                        
3a95 : a003                     ldy #3      ;(zp),y
3a97 :                  tora14
                                set_ay  absORa,0
                       >            load_flag 0
3a97 : a900            >            lda #0
                       >
3a99 : 48              >            pha         ;use stack to load status
3a9a : b94402          >            lda absORa,y    ;precharge accu
3a9d : 28              >            plp
                        
3a9e : 1146                     ora (indOR),y
                                tst_ay  absrlo,absflo,0
3aa0 : 08              >            php         ;save flags
3aa1 : d95002          >            cmp absrlo,y    ;test result
3aa4 : d0fe            >            bne *       ;trap
3aa6 : 68              >            pla         ;load status
                       >            eor_flag 0
3aa7 : 4930            >            eor #(0|$30)
                       >
3aa9 : d95402          >            cmp absflo,y    ;test flags
3aac : d0fe            >            bne *       ;trap
                        
3aae : 88                       dey
3aaf : 10e6                     bpl tora14
3ab1 : a003                     ldy #3
3ab3 :                  tora15
                                set_ay  absORa,$ff
                       >            load_flag $ff
3ab3 : a9ff            >            lda #$ff
                       >
3ab5 : 48              >            pha         ;use stack to load status
3ab6 : b94402          >            lda absORa,y    ;precharge accu
3ab9 : 28              >            plp
                        
3aba : 1146                     ora (indOR),y
                                tst_ay  absrlo,absflo,$ff-fnz
3abc : 08              >            php         ;save flags
3abd : d95002          >            cmp absrlo,y    ;test result
3ac0 : d0fe            >            bne *       ;trap
3ac2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3ac3 : 497d            >            eor #($ff-fnz|$30)
                       >
3ac5 : d95402          >            cmp absflo,y    ;test flags
3ac8 : d0fe            >            bne *       ;trap
                        
3aca : 88                       dey
3acb : 10e6                     bpl tora15
                            if I_flag = 3
3acd : 58                       cli
                            endif
                        
                        ; full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3ace : d8                       cld
                        ;        sei
3acf : a258                     ldx #ad2        ;for indexed test
3ad1 : a0ff                     ldy #$ff        ;max range
3ad3 : a900                     lda #0          ;start with adding zeroes & no carry
3ad5 : 8556                     sta adfc        ;carry in - for diag
3ad7 : 8557                     sta ad1         ;operand 1 - accumulator
3ad9 : 8558                     sta ad2         ;operand 2 - memory or immediate
3adb : 8d5802                   sta ada2        ;non zp
3ade : 8559                     sta adrl        ;expected result bits 0-7
3ae0 : 855a                     sta adrh        ;expected result bit 8 (carry out)
3ae2 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
3ae4 : 855c                     sta sb2
3ae6 : 8d5902                   sta sba2        ;non zp
3ae9 : a902                     lda #2          ;expected Z-flag
3aeb : 855b                     sta adrf
3aed : 18               tadd    clc             ;test with carry clear
3aee : 205b3c                   jsr chkadd
3af1 : e656                     inc adfc        ;now with carry
3af3 : e659                     inc adrl        ;result +1
3af5 : 08                       php             ;save N & Z from low result
3af6 : 08                       php
3af7 : 68                       pla             ;accu holds expected flags
3af8 : 2982                     and #$82        ;mask N & Z
3afa : 28                       plp
3afb : d002                     bne tadd1
3afd : e65a                     inc adrh        ;result bit 8 - carry
3aff : 055a             tadd1   ora adrh        ;merge C to expected flags
3b01 : 855b                     sta adrf        ;save expected flags except overflow
3b03 : 38                       sec             ;test with carry set
3b04 : 205b3c                   jsr chkadd
3b07 : c656                     dec adfc        ;same for operand +1 but no carry
3b09 : e657                     inc ad1
3b0b : d0e0                     bne tadd        ;iterate op1
3b0d : a900                     lda #0          ;preset result to op2 when op1 = 0
3b0f : 855a                     sta adrh
3b11 : ee5802                   inc ada2
3b14 : e658                     inc ad2
3b16 : 08                       php             ;save NZ as operand 2 becomes the new result
3b17 : 68                       pla
3b18 : 2982                     and #$82        ;mask N00000Z0
3b1a : 855b                     sta adrf        ;no need to check carry as we are adding to 0
3b1c : c65c                     dec sb2         ;complement subtract operand 2
3b1e : ce5902                   dec sba2
3b21 : a558                     lda ad2
3b23 : 8559                     sta adrl
3b25 : d0c6                     bne tadd        ;iterate op2
                        
                         if testingdecimal=1
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
                                sed
                        ;        sei
                                ldx #ad2        ;for indexed test
                                ldy #$ff        ;max range
                                lda #$99        ;start with adding 99 to 99 with carry
                                sta ad1         ;operand 1 - accumulator
                                sta ad2         ;operand 2 - memory or immediate
                                sta ada2        ;non zp
                                sta adrl        ;expected result bits 0-7
                                lda #1          ;set carry in & out
                                sta adfc        ;carry in - for diag
                                sta adrh        ;expected result bit 8 (carry out)
                                lda #0          ;complemented operand 2 for subtract
                                sta sb2
                                sta sba2        ;non zp
                        tdad    sec             ;test with carry set
                                jsr chkdad
                                dec adfc        ;now with carry clear
                                lda adrl        ;decimal adjust result
                                bne tdad1       ;skip clear carry & preset result 99 (9A-1)
                                dec adrh
                                lda #$99
                                sta adrl
                                bne tdad3
                        tdad1   and #$f         ;lower nibble mask
                                bne tdad2       ;no decimal adjust needed
                                dec adrl        ;decimal adjust (?0-6)
                                dec adrl
                                dec adrl
                                dec adrl
                                dec adrl
                                dec adrl
                        tdad2   dec adrl        ;result -1
                        tdad3   clc             ;test with carry clear
                                jsr chkdad
                                inc adfc        ;same for operand -1 but with carry
                                lda ad1         ;decimal adjust operand 1
                                beq tdad5       ;iterate operand 2
                                and #$f         ;lower nibble mask
                                bne tdad4       ;skip decimal adjust
                                dec ad1         ;decimal adjust (?0-6)
                                dec ad1
                                dec ad1
                                dec ad1
                                dec ad1
                                dec ad1
                        tdad4   dec ad1         ;operand 1 -1
                                jmp tdad        ;iterate op1
                        
                        tdad5   lda #$99        ;precharge op1 max
                                sta ad1
                                lda ad2         ;decimal adjust operand 2
                                beq tdad7       ;end of iteration
                                and #$f         ;lower nibble mask
                                bne tdad6       ;skip decimal adjust
                                dec ad2         ;decimal adjust (?0-6)
                                dec ad2
                                dec ad2
                                dec ad2
                                dec ad2
                                dec ad2
                                inc sb2         ;complemented decimal adjust for subtract (?9+6)
                                inc sb2
                                inc sb2
                                inc sb2
                                inc sb2
                                inc sb2
                        tdad6   dec ad2         ;operand 2 -1
                                inc sb2         ;complemeted operand for subtract
                                lda sb2
                                sta sba2        ;copy as non zp operand
                                lda ad2
                                sta ada2        ;copy as non zp operand
                                sta adrl        ;new result since op1+carry=00+carry +op2=op2
                                inc adrh        ;result carry
                                bne tdad        ;iterate op2
                        tdad7   cld
                        
                         endif
                        
                        ; S U C C E S S ************************************************
                        ; -------------
3b27 : 4c273b                   jmp *           ;if you get here everything went well
                        ; -------------
                        ; S U C C E S S ************************************************
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3b2a :                  chkdad
                        ; decimal ADC / SBC zp
3b2a : 08                       php             ;save carry for subtract
3b2b : a557                     lda ad1
3b2d : 6558                     adc ad2         ;perform add
3b2f : 08                       php
3b30 : c559                     cmp adrl        ;check result
3b32 : d0fe                     bne *           ;bad result
3b34 : 68                       pla             ;check flags
3b35 : 2901                     and #1          ;mask carry
3b37 : c55a                     cmp adrh
3b39 : d0fe                     bne *           ;bad carry
3b3b : 28                       plp
3b3c : 08                       php             ;save carry for next add
3b3d : a557                     lda ad1
3b3f : e55c                     sbc sb2         ;perform subtract
3b41 : 08                       php
3b42 : c559                     cmp adrl        ;check result
3b44 : d0fe                     bne *           ;bad result
3b46 : 68                       pla             ;check flags
3b47 : 2901                     and #1          ;mask carry
3b49 : c55a                     cmp adrh
3b4b : d0fe                     bne *           ;bad flags
3b4d : 28                       plp
                        ; decimal ADC / SBC abs
3b4e : 08                       php             ;save carry for subtract
3b4f : a557                     lda ad1
3b51 : 6d5802                   adc ada2        ;perform add
3b54 : 08                       php
3b55 : c559                     cmp adrl        ;check result
3b57 : d0fe                     bne *           ;bad result
3b59 : 68                       pla             ;check flags
3b5a : 2901                     and #1          ;mask carry
3b5c : c55a                     cmp adrh
3b5e : d0fe                     bne *           ;bad carry
3b60 : 28                       plp
3b61 : 08                       php             ;save carry for next add
3b62 : a557                     lda ad1
3b64 : ed5902                   sbc sba2        ;perform subtract
3b67 : 08                       php
3b68 : c559                     cmp adrl        ;check result
3b6a : d0fe                     bne *           ;bad result
3b6c : 68                       pla             ;check flags
3b6d : 2901                     and #1          ;mask carry
3b6f : c55a                     cmp adrh
3b71 : d0fe                     bne *           ;bad carry
3b73 : 28                       plp
                        ; decimal ADC / SBC #
3b74 : 08                       php             ;save carry for subtract
3b75 : a558                     lda ad2
3b77 : 8d7d3b                   sta chkdadi     ;self modify immediate
3b7a : a557                     lda ad1
3b7d =                  chkdadi = * + 1         ;operand of the immediate ADC
3b7c : 6900                     adc #0          ;perform add
3b7e : 08                       php
3b7f : c559                     cmp adrl        ;check result
3b81 : d0fe                     bne *           ;bad result
3b83 : 68                       pla             ;check flags
3b84 : 2901                     and #1          ;mask carry
3b86 : c55a                     cmp adrh
3b88 : d0fe                     bne *           ;bad carry
3b8a : 28                       plp
3b8b : 08                       php             ;save carry for next add
3b8c : a55c                     lda sb2
3b8e : 8d943b                   sta chkdsbi     ;self modify immediate
3b91 : a557                     lda ad1
3b94 =                  chkdsbi = * + 1         ;operand of the immediate SBC
3b93 : e900                     sbc #0          ;perform subtract
3b95 : 08                       php
3b96 : c559                     cmp adrl        ;check result
3b98 : d0fe                     bne *           ;bad result
3b9a : 68                       pla             ;check flags
3b9b : 2901                     and #1          ;mask carry
3b9d : c55a                     cmp adrh
3b9f : d0fe                     bne *           ;bad carry
3ba1 : 28                       plp
                        ; decimal ADC / SBC zp,x
3ba2 : 08                       php             ;save carry for subtract
3ba3 : a557                     lda ad1
3ba5 : 7500                     adc 0,x         ;perform add
3ba7 : 08                       php
3ba8 : c559                     cmp adrl        ;check result
3baa : d0fe                     bne *           ;bad result
3bac : 68                       pla             ;check flags
3bad : 2901                     and #1          ;mask carry
3baf : c55a                     cmp adrh
3bb1 : d0fe                     bne *           ;bad carry
3bb3 : 28                       plp
3bb4 : 08                       php             ;save carry for next add
3bb5 : a557                     lda ad1
3bb7 : f504                     sbc sb2-ad2,x   ;perform subtract
3bb9 : 08                       php
3bba : c559                     cmp adrl        ;check result
3bbc : d0fe                     bne *           ;bad result
3bbe : 68                       pla             ;check flags
3bbf : 2901                     and #1          ;mask carry
3bc1 : c55a                     cmp adrh
3bc3 : d0fe                     bne *           ;bad carry
3bc5 : 28                       plp
                        ; decimal ADC / SBC abs,x
3bc6 : 08                       php             ;save carry for subtract
3bc7 : a557                     lda ad1
3bc9 : 7d0002                   adc ada2-ad2,x  ;perform add
3bcc : 08                       php
3bcd : c559                     cmp adrl        ;check result
3bcf : d0fe                     bne *           ;bad result
3bd1 : 68                       pla             ;check flags
3bd2 : 2901                     and #1          ;mask carry
3bd4 : c55a                     cmp adrh
3bd6 : d0fe                     bne *           ;bad carry
3bd8 : 28                       plp
3bd9 : 08                       php             ;save carry for next add
3bda : a557                     lda ad1
3bdc : fd0102                   sbc sba2-ad2,x  ;perform subtract
3bdf : 08                       php
3be0 : c559                     cmp adrl        ;check result
3be2 : d0fe                     bne *           ;bad result
3be4 : 68                       pla             ;check flags
3be5 : 2901                     and #1          ;mask carry
3be7 : c55a                     cmp adrh
3be9 : d0fe                     bne *           ;bad carry
3beb : 28                       plp
                        ; decimal ADC / SBC abs,y
3bec : 08                       php             ;save carry for subtract
3bed : a557                     lda ad1
3bef : 795901                   adc ada2-$ff,y  ;perform add
3bf2 : 08                       php
3bf3 : c559                     cmp adrl        ;check result
3bf5 : d0fe                     bne *           ;bad result
3bf7 : 68                       pla             ;check flags
3bf8 : 2901                     and #1          ;mask carry
3bfa : c55a                     cmp adrh
3bfc : d0fe                     bne *           ;bad carry
3bfe : 28                       plp
3bff : 08                       php             ;save carry for next add
3c00 : a557                     lda ad1
3c02 : f95a01                   sbc sba2-$ff,y  ;perform subtract
3c05 : 08                       php
3c06 : c559                     cmp adrl        ;check result
3c08 : d0fe                     bne *           ;bad result
3c0a : 68                       pla             ;check flags
3c0b : 2901                     and #1          ;mask carry
3c0d : c55a                     cmp adrh
3c0f : d0fe                     bne *           ;bad carry
3c11 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
3c12 : 08                       php             ;save carry for subtract
3c13 : a557                     lda ad1
3c15 : 61f6                     adc (lo adi2-ad2,x) ;perform add
3c17 : 08                       php
3c18 : c559                     cmp adrl        ;check result
3c1a : d0fe                     bne *           ;bad result
3c1c : 68                       pla             ;check flags
3c1d : 2901                     and #1          ;mask carry
3c1f : c55a                     cmp adrh
3c21 : d0fe                     bne *           ;bad carry
3c23 : 28                       plp
3c24 : 08                       php             ;save carry for next add
3c25 : a557                     lda ad1
3c27 : e1f8                     sbc (lo sbi2-ad2,x) ;perform subtract
3c29 : 08                       php
3c2a : c559                     cmp adrl        ;check result
3c2c : d0fe                     bne *           ;bad result
3c2e : 68                       pla             ;check flags
3c2f : 2901                     and #1          ;mask carry
3c31 : c55a                     cmp adrh
3c33 : d0fe                     bne *           ;bad carry
3c35 : 28                       plp
                        ; decimal ADC / SBC (abs),y
3c36 : 08                       php             ;save carry for subtract
3c37 : a557                     lda ad1
3c39 : 7152                     adc (adiy2),y   ;perform add
3c3b : 08                       php
3c3c : c559                     cmp adrl        ;check result
3c3e : d0fe                     bne *           ;bad result
3c40 : 68                       pla             ;check flags
3c41 : 2901                     and #1          ;mask carry
3c43 : c55a                     cmp adrh
3c45 : d0fe                     bne *           ;bad carry
3c47 : 28                       plp
3c48 : 08                       php             ;save carry for next add
3c49 : a557                     lda ad1
3c4b : f154                     sbc (sbiy2),y   ;perform subtract
3c4d : 08                       php
3c4e : c559                     cmp adrl        ;check result
3c50 : d0fe                     bne *           ;bad result
3c52 : 68                       pla             ;check flags
3c53 : 2901                     and #1          ;mask carry
3c55 : c55a                     cmp adrh
3c57 : d0fe                     bne *           ;bad carry
3c59 : 28                       plp
3c5a : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3c5b : a55b             chkadd  lda adrf        ;add V-flag if overflow
3c5d : 2983                     and #$83        ;keep N-----ZC / clear V
3c5f : 48                       pha
3c60 : a557                     lda ad1         ;test sign unequal between operands
3c62 : 4558                     eor ad2
3c64 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
3c66 : a557                     lda ad1         ;test sign equal between operands and result
3c68 : 4559                     eor adrl
3c6a : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
3c6c : 68                       pla
3c6d : 0940                     ora #$40        ;set V
3c6f : 48                       pha
3c70 : 68               ckad1   pla
3c71 : 855b                     sta adrf        ;save expected flags
                        ; binary ADC / SBC zp
3c73 : 08                       php             ;save carry for subtract
3c74 : a557                     lda ad1
3c76 : 6558                     adc ad2         ;perform add
3c78 : 08                       php
3c79 : c559                     cmp adrl        ;check result
3c7b : d0fe                     bne *           ;bad result
3c7d : 68                       pla             ;check flags
3c7e : 29c3                     and #$c3        ;mask NV----ZC
3c80 : c55b                     cmp adrf
3c82 : d0fe                     bne *           ;bad flags
3c84 : 28                       plp
3c85 : 08                       php             ;save carry for next add
3c86 : a557                     lda ad1
3c88 : e55c                     sbc sb2         ;perform subtract
3c8a : 08                       php
3c8b : c559                     cmp adrl        ;check result
3c8d : d0fe                     bne *           ;bad result
3c8f : 68                       pla             ;check flags
3c90 : 29c3                     and #$c3        ;mask NV----ZC
3c92 : c55b                     cmp adrf
3c94 : d0fe                     bne *           ;bad flags
3c96 : 28                       plp
                        ; binary ADC / SBC abs
3c97 : 08                       php             ;save carry for subtract
3c98 : a557                     lda ad1
3c9a : 6d5802                   adc ada2        ;perform add
3c9d : 08                       php
3c9e : c559                     cmp adrl        ;check result
3ca0 : d0fe                     bne *           ;bad result
3ca2 : 68                       pla             ;check flags
3ca3 : 29c3                     and #$c3        ;mask NV----ZC
3ca5 : c55b                     cmp adrf
3ca7 : d0fe                     bne *           ;bad flags
3ca9 : 28                       plp
3caa : 08                       php             ;save carry for next add
3cab : a557                     lda ad1
3cad : ed5902                   sbc sba2        ;perform subtract
3cb0 : 08                       php
3cb1 : c559                     cmp adrl        ;check result
3cb3 : d0fe                     bne *           ;bad result
3cb5 : 68                       pla             ;check flags
3cb6 : 29c3                     and #$c3        ;mask NV----ZC
3cb8 : c55b                     cmp adrf
3cba : d0fe                     bne *           ;bad flags
3cbc : 28                       plp
                        ; binary ADC / SBC #
3cbd : 08                       php             ;save carry for subtract
3cbe : a558                     lda ad2
3cc0 : 8dc63c                   sta chkadi      ;self modify immediate
3cc3 : a557                     lda ad1
3cc6 =                  chkadi  = * + 1         ;operand of the immediate ADC
3cc5 : 6900                     adc #0          ;perform add
3cc7 : 08                       php
3cc8 : c559                     cmp adrl        ;check result
3cca : d0fe                     bne *           ;bad result
3ccc : 68                       pla             ;check flags
3ccd : 29c3                     and #$c3        ;mask NV----ZC
3ccf : c55b                     cmp adrf
3cd1 : d0fe                     bne *           ;bad flags
3cd3 : 28                       plp
3cd4 : 08                       php             ;save carry for next add
3cd5 : a55c                     lda sb2
3cd7 : 8ddd3c                   sta chksbi      ;self modify immediate
3cda : a557                     lda ad1
3cdd =                  chksbi  = * + 1         ;operand of the immediate SBC
3cdc : e900                     sbc #0          ;perform subtract
3cde : 08                       php
3cdf : c559                     cmp adrl        ;check result
3ce1 : d0fe                     bne *           ;bad result
3ce3 : 68                       pla             ;check flags
3ce4 : 29c3                     and #$c3        ;mask NV----ZC
3ce6 : c55b                     cmp adrf
3ce8 : d0fe                     bne *           ;bad flags
3cea : 28                       plp
                        ; binary ADC / SBC zp,x
3ceb : 08                       php             ;save carry for subtract
3cec : a557                     lda ad1
3cee : 7500                     adc 0,x         ;perform add
3cf0 : 08                       php
3cf1 : c559                     cmp adrl        ;check result
3cf3 : d0fe                     bne *           ;bad result
3cf5 : 68                       pla             ;check flags
3cf6 : 29c3                     and #$c3        ;mask NV----ZC
3cf8 : c55b                     cmp adrf
3cfa : d0fe                     bne *           ;bad flags
3cfc : 28                       plp
3cfd : 08                       php             ;save carry for next add
3cfe : a557                     lda ad1
3d00 : f504                     sbc sb2-ad2,x   ;perform subtract
3d02 : 08                       php
3d03 : c559                     cmp adrl        ;check result
3d05 : d0fe                     bne *           ;bad result
3d07 : 68                       pla             ;check flags
3d08 : 29c3                     and #$c3        ;mask NV----ZC
3d0a : c55b                     cmp adrf
3d0c : d0fe                     bne *           ;bad flags
3d0e : 28                       plp
                        ; binary ADC / SBC abs,x
3d0f : 08                       php             ;save carry for subtract
3d10 : a557                     lda ad1
3d12 : 7d0002                   adc ada2-ad2,x  ;perform add
3d15 : 08                       php
3d16 : c559                     cmp adrl        ;check result
3d18 : d0fe                     bne *           ;bad result
3d1a : 68                       pla             ;check flags
3d1b : 29c3                     and #$c3        ;mask NV----ZC
3d1d : c55b                     cmp adrf
3d1f : d0fe                     bne *           ;bad flags
3d21 : 28                       plp
3d22 : 08                       php             ;save carry for next add
3d23 : a557                     lda ad1
3d25 : fd0102                   sbc sba2-ad2,x  ;perform subtract
3d28 : 08                       php
3d29 : c559                     cmp adrl        ;check result
3d2b : d0fe                     bne *           ;bad result
3d2d : 68                       pla             ;check flags
3d2e : 29c3                     and #$c3        ;mask NV----ZC
3d30 : c55b                     cmp adrf
3d32 : d0fe                     bne *           ;bad flags
3d34 : 28                       plp
                        ; binary ADC / SBC abs,y
3d35 : 08                       php             ;save carry for subtract
3d36 : a557                     lda ad1
3d38 : 795901                   adc ada2-$ff,y  ;perform add
3d3b : 08                       php
3d3c : c559                     cmp adrl        ;check result
3d3e : d0fe                     bne *           ;bad result
3d40 : 68                       pla             ;check flags
3d41 : 29c3                     and #$c3        ;mask NV----ZC
3d43 : c55b                     cmp adrf
3d45 : d0fe                     bne *           ;bad flags
3d47 : 28                       plp
3d48 : 08                       php             ;save carry for next add
3d49 : a557                     lda ad1
3d4b : f95a01                   sbc sba2-$ff,y  ;perform subtract
3d4e : 08                       php
3d4f : c559                     cmp adrl        ;check result
3d51 : d0fe                     bne *           ;bad result
3d53 : 68                       pla             ;check flags
3d54 : 29c3                     and #$c3        ;mask NV----ZC
3d56 : c55b                     cmp adrf
3d58 : d0fe                     bne *           ;bad flags
3d5a : 28                       plp
                        ; binary ADC / SBC (zp,x)
3d5b : 08                       php             ;save carry for subtract
3d5c : a557                     lda ad1
3d5e : 61f6                     adc (lo adi2-ad2,x) ;perform add
3d60 : 08                       php
3d61 : c559                     cmp adrl        ;check result
3d63 : d0fe                     bne *           ;bad result
3d65 : 68                       pla             ;check flags
3d66 : 29c3                     and #$c3        ;mask NV----ZC
3d68 : c55b                     cmp adrf
3d6a : d0fe                     bne *           ;bad flags
3d6c : 28                       plp
3d6d : 08                       php             ;save carry for next add
3d6e : a557                     lda ad1
3d70 : e1f8                     sbc (lo sbi2-ad2,x) ;perform subtract
3d72 : 08                       php
3d73 : c559                     cmp adrl        ;check result
3d75 : d0fe                     bne *           ;bad result
3d77 : 68                       pla             ;check flags
3d78 : 29c3                     and #$c3        ;mask NV----ZC
3d7a : c55b                     cmp adrf
3d7c : d0fe                     bne *           ;bad flags
3d7e : 28                       plp
                        ; binary ADC / SBC (abs),y
3d7f : 08                       php             ;save carry for subtract
3d80 : a557                     lda ad1
3d82 : 7152                     adc (adiy2),y   ;perform add
3d84 : 08                       php
3d85 : c559                     cmp adrl        ;check result
3d87 : d0fe                     bne *           ;bad result
3d89 : 68                       pla             ;check flags
3d8a : 29c3                     and #$c3        ;mask NV----ZC
3d8c : c55b                     cmp adrf
3d8e : d0fe                     bne *           ;bad flags
3d90 : 28                       plp
3d91 : 08                       php             ;save carry for next add
3d92 : a557                     lda ad1
3d94 : f154                     sbc (sbiy2),y   ;perform subtract
3d96 : 08                       php
3d97 : c559                     cmp adrl        ;check result
3d99 : d0fe                     bne *           ;bad result
3d9b : 68                       pla             ;check flags
3d9c : 29c3                     and #$c3        ;mask NV----ZC
3d9e : c55b                     cmp adrf
3da0 : d0fe                     bne *           ;bad flags
3da2 : 28                       plp
3da3 : 60                       rts
                        
                        ; target for the jump absolute test
3da4 : 88                       dey
3da5 : 88                       dey
3da6 :                  test_far
3da6 : 08                       php             ;either SP or Y count will fail, if we do not hit
3da7 : 88                       dey
3da8 : 88                       dey
3da9 : 88                       dey
3daa : 28                       plp
3dab : b0fe                     bcs *           ;flags loaded?
3dad : 70fe                     bvs *
3daf : 30fe                     bmi *
3db1 : f0fe                     beq *
3db3 : c946                     cmp #'F'        ;registers loaded?
3db5 : d0fe                     bne *
3db7 : e041                     cpx #'A'
3db9 : d0fe                     bne *
3dbb : c04f                     cpy #('R'-3)
3dbd : d0fe                     bne *
3dbf : 48                       pha             ;save a,x
3dc0 : 8a                       txa
3dc1 : 48                       pha
3dc2 : ba                       tsx
3dc3 : e0fd                     cpx #$fd        ;check SP
3dc5 : d0fe                     bne *
3dc7 : 68                       pla             ;restore x
3dc8 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3dc9 : a9ff            >            lda #$ff
                       >
3dcb : 48              >            pha         ;use stack to load status
3dcc : 28              >            plp
                        
3dcd : 68                       pla             ;restore a
3dce : e8                       inx             ;return registers with modifications
3dcf : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3dd1 : 4c8212                   jmp far_ret
                        
                        ; target for the jump indirect test
3dd4 : dd3d             ptr_tst_ind dw test_ind
3dd6 : cb12             ptr_ind_ret dw ind_ret
3dd8 : 4cd83d                   jmp *           ;runover protection
3ddb : 88                       dey
3ddc : 88                       dey
3ddd :                  test_ind
3ddd : 08                       php             ;either SP or Y count will fail, if we do not hit
3dde : 88                       dey
3ddf : 88                       dey
3de0 : 88                       dey
3de1 : 28                       plp
3de2 : b0fe                     bcs *           ;flags loaded?
3de4 : 70fe                     bvs *
3de6 : 30fe                     bmi *
3de8 : f0fe                     beq *
3dea : c949                     cmp #'I'        ;registers loaded?
3dec : d0fe                     bne *
3dee : e04e                     cpx #'N'
3df0 : d0fe                     bne *
3df2 : c041                     cpy #('D'-3)
3df4 : d0fe                     bne *
3df6 : 48                       pha             ;save a,x
3df7 : 8a                       txa
3df8 : 48                       pha
3df9 : ba                       tsx
3dfa : e0fd                     cpx #$fd        ;check SP
3dfc : d0fe                     bne *
3dfe : 68                       pla             ;restore x
3dff : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3e00 : a9ff            >            lda #$ff
                       >
3e02 : 48              >            pha         ;use stack to load status
3e03 : 28              >            plp
                        
3e04 : 68                       pla             ;restore a
3e05 : e8                       inx             ;return registers with modifications
3e06 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3e08 : 6cd63d                   jmp (ptr_ind_ret)
3e0b : 4c0b3e                   jmp *           ;runover protection
                        
                        ; target for the jump subroutine test
3e0e : 88                       dey
3e0f : 88                       dey
3e10 :                  test_jsr
3e10 : 08                       php             ;either SP or Y count will fail, if we do not hit
3e11 : 88                       dey
3e12 : 88                       dey
3e13 : 88                       dey
3e14 : 28                       plp
3e15 : b0fe                     bcs *           ;flags loaded?
3e17 : 70fe                     bvs *
3e19 : 30fe                     bmi *
3e1b : f0fe                     beq *
3e1d : c94a                     cmp #'J'        ;registers loaded?
3e1f : d0fe                     bne *
3e21 : e053                     cpx #'S'
3e23 : d0fe                     bne *
3e25 : c04f                     cpy #('R'-3)
3e27 : d0fe                     bne *
3e29 : 48                       pha             ;save a,x
3e2a : 8a                       txa
3e2b : 48                       pha
3e2c : ba                       tsx             ;sp -4? (return addr,a,x)
3e2d : e0fb                     cpx #$fb
3e2f : d0fe                     bne *
3e31 : adff01                   lda $1ff        ;propper return on stack
3e34 : c912                     cmp #hi(jsr_ret)
3e36 : d0fe                     bne *
3e38 : adfe01                   lda $1fe
3e3b : c9f5                     cmp #lo(jsr_ret)
3e3d : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
3e3f : a9ff            >            lda #$ff
                       >
3e41 : 48              >            pha         ;use stack to load status
3e42 : 28              >            plp
                        
3e43 : 68                       pla             ;pull x,a
3e44 : aa                       tax
3e45 : 68                       pla
3e46 : e8                       inx             ;return registers with modifications
3e47 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3e49 : 60                       rts
3e4a : 4c4a3e                   jmp *           ;runover protection
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET - BRK test target
3e4d :                  nmi_trap
3e4d : 4c4d3e                   jmp *           ;check stack for conditions at NMI
3e50 :                  res_trap
3e50 : 4c503e                   jmp *           ;unexpected RESET
                        
3e53 : 88                       dey
3e54 : 88                       dey
3e55 :                  irq_trap                ;BRK test or unextpected BRK or IRQ
3e55 : 08                       php             ;either SP or Y count will fail, if we do not hit
3e56 : 88                       dey
3e57 : 88                       dey
3e58 : 88                       dey
                                ;next 4 traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
3e59 : c942                     cmp #'B'        ;registers loaded?
3e5b : d0fe                     bne *
3e5d : e052                     cpx #'R'
3e5f : d0fe                     bne *
3e61 : c048                     cpy #('K'-3)
3e63 : d0fe                     bne *
3e65 : 855d                     sta irq_a       ;save registers during break test
3e67 : 865e                     stx irq_x
3e69 : ba                       tsx             ;test break on stack
3e6a : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1
3e6d : c930            >            cmp #(0      |$30)&$ff
                        
3e6f : d0fe                     bne *           ;trap - no break flag on stack
3e71 : 68                       pla
3e72 : c934                     cmp #$34        ;should have added interrupt disable
3e74 : d0fe                     bne *
3e76 : ba                       tsx
3e77 : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
3e79 : d0fe                     bne *
3e7b : adff01                   lda $1ff        ;propper return on stack
3e7e : c913                     cmp #hi(brk_ret)
3e80 : d0fe                     bne *
3e82 : adfe01                   lda $1fe
3e85 : c92b                     cmp #lo(brk_ret)
3e87 : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
3e89 : a9ff            >            lda #$ff
                       >
3e8b : 48              >            pha         ;use stack to load status
3e8c : 28              >            plp
                        
3e8d : a65e                     ldx irq_x
3e8f : e8                       inx             ;return registers with modifications
3e90 : a55d                     lda irq_a
3e92 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1 but original flags should be restored
3e94 : 40                       rti
3e95 : 4c953e                   jmp *           ;runover protection
                        
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
                        zp_init
                        zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
                        zp7f_   db  $7f             ;test pattern for compare
                        zpt_    ds  5               ;store/modify test area
                        ;logical zeropage operands
                        zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
                        zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
                        zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
                        ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
                                dw  abs1+1
                                dw  abs1+2
                                dw  abs1+3
                                dw  abs7f
                        inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
                        indt_   dw  abst            ;indirect pointer to store area in absolute memory
                                dw  abst+1
                                dw  abst+2
                                dw  abst+3
                        inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
                        indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
                                dw  absAN+1
                                dw  absAN+2
                                dw  absAN+3
                        indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
                                dw  absEO+1
                                dw  absEO+2
                                dw  absEO+3
                        indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
                                dw  absOR+1
                                dw  absOR+2
                                dw  absOR+3
                        ;add/subtract operand generation and result/flag prediction
                        adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
                        sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
                        adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
                        sbiy2_  dw  sba2-$ff
                        ;adfc    ds  1               ;carry flag before op
                        ;ad1     ds  1               ;operand 1 - accumulator
                        ;ad2     ds  1               ;operand 2 - memory / immediate
                        ;adrl    ds  1               ;expected result bits 0-7
                        ;adrh    ds  1               ;expected result bit 8 (carry)
                        ;adrf    ds  1               ;expected flags NV0000ZC (not valid in decimal mode)
                        ;sb2     ds  1               ;operand 2 complemented for subtract
                        ;break test interrupt save
                        ;irq_a   ds  1               ;a register
                        ;irq_x   ds  1               ;x register
                        zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif
                        data_init
                        abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
                        abs7f_  db  $7f             ;test pattern for compare
                        ;loads
                        fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
                        rASL_                       ;expected result ASL & ROL -carry
                        rROL_   db  $86,$04,$82,0   ; "
                        rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
                        rLSR_                       ;expected result LSR & ROR -carry
                        rROR_   db  $61,$41,$20,0   ; "
                        rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
                        fASL_                       ;expected flags for shifts
                        fROL_   db  fnc,fc,fn,fz    ;no carry in
                        fROLc_  db  fnc,fc,fn,0     ;carry in
                        fLSR_
                        fROR_   db  fc,0,fc,fz      ;no carry in
                        fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
                        rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
                        fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        abst_   ds  5               ;store/modify test area
                        ;logical memory operand
                        absOR_  db  0,$1f,$71,$80   ;test pattern for OR
                        absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
                        absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
                        absORa_ db  0,$f1,$1f,0     ;test pattern for OR
                        absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
                        absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
                        absrlo_ db  0,$ff,$7f,$80
                        absflo_ db  fz,fn,0,fn
                        ;add/subtract operand copy
                        ;ada2    ds  1               ;operand 2
                        ;sba2    ds  1               ;operand 2 complemented for subtract
                        data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif
                            endif                   ;end of RAM init data
                        
                            if ROM_vectors = 1
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
                        
No errors in pass 2.
Wrote binary from address $000a through $3e97.
Total size 16014 bytes.
